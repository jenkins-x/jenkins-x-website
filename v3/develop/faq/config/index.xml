<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Configuration</title>
    <link>https://jenkins-x.io/v3/develop/faq/config/</link>
    <description>Recent content in Configuration on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/faq/config/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: General</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/general/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-the-directory-layout&#34;&gt;What is the directory layout?&lt;/h2&gt;
&lt;p&gt;To understand the directory layout see &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/git_layout.md&#34;&gt;this document&lt;/a&gt; and the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/files/&#34;&gt;file reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-an-environment&#34;&gt;How do I add an Environment&lt;/h2&gt;
&lt;p&gt;With v3 everything is done via GitOps - so if in doubt the answer is to modify git.&lt;/p&gt;
&lt;p&gt;You can create new environments by adding to the &lt;code&gt;environments:&lt;/code&gt; section of &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/jx-requirements.yml#L18&#34;&gt;jx-requirements.yml&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-change-promotion-for-my-app&#34;&gt;How do I change promotion for my app?&lt;/h2&gt;
&lt;p&gt;Usually when you &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;import a repository or create a quickstart&lt;/a&gt; they inherit the default environments for &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion/&#34;&gt;promotion&lt;/a&gt;. It is common to share the same environments across all of your microservices.&lt;/p&gt;
&lt;p&gt;If you want to change that on a per repository/microservice basis you can &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/config/#custom-environments-per-repository&#34;&gt;configure custom environments for a repository&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-specify-docker_registry_org&#34;&gt;How do I specify DOCKER_REGISTRY_ORG?&lt;/h2&gt;
&lt;p&gt;If you need to you can override in a specific repository (via a &lt;code&gt;.jx/settings.yaml&lt;/code&gt; in your repository) but usually its common to all repos and is inherited from your &lt;code&gt;jx-requirements.yml&lt;/code&gt; in your development environment repository&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/files/&#34;&gt;file reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-configure-kaniko-flags&#34;&gt;How do I configure Kaniko flags?&lt;/h2&gt;
&lt;p&gt;If you want to globally define a kaniko flag for all pipelines you can add the flags to your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;p&gt;e.g. add something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;autoUpdate&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;autoMerge&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; * * *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;kanikoFlags&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--snapshotMode=redo&amp;#34;&lt;/span&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;if-i-add-a-file-to-config-root-it-gets-deleted-why&#34;&gt;If I add a file to &lt;code&gt;config-root&lt;/code&gt; it gets deleted, why?&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;config-root&lt;/code&gt; directory is regenerated on every boot job - basically every time you promote an application or merge a change into the main branch of your git dev cluster git repository.  For background see the &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/git_layout.md&#34;&gt;dev git repository layout docs&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;To add a new chart add to the &lt;code&gt;helmfiles/mynamespace/helmfile.yaml&lt;/code&gt; file follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;add chart guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To add a new kubernetes resource &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;follow the add resources guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-a-user-to-my-jenkins-x-installation&#34;&gt;How do I add a user to my Jenkins X installation?&lt;/h2&gt;
&lt;p&gt;There are a number of different levels of access you may wish to grant:&lt;/p&gt;
&lt;h3 id=&#34;git&#34;&gt;git&lt;/h3&gt;
&lt;p&gt;When developers are &lt;a href=&#34;https://jenkins-x.io/v3/develop/developing/&#34;&gt;developing software that has its CI/CD automated by Jenkins X&lt;/a&gt; then usually letting the developer access git is enough.&lt;/p&gt;
&lt;h3 id=&#34;dashboard&#34;&gt;dashboard&lt;/h3&gt;
&lt;p&gt;Though being able to see the logs of pipelines is useful so you probably want to either share the basic auth user/password for the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/dashboard/&#34;&gt;Dashboard&lt;/a&gt; or to configure full Auth0/OAuth single sign on access to the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/dashboard/&#34;&gt;Dashboard&lt;/a&gt;. Then developers will be able to browse the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/dashboard/&#34;&gt;Dashboard&lt;/a&gt; or click on Pull Request and Release links on your git website.&lt;/p&gt;
&lt;h3 id=&#34;kubernetes&#34;&gt;kubernetes&lt;/h3&gt;
&lt;p&gt;If you want to give full access to Jenkins X so that developers can access kubernetes resources via &lt;code&gt;kubectl&lt;/code&gt; or can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/&#34;&gt;jx cli&lt;/a&gt; then you need to grant Cloud IAM roles to the developer using your cloud infrastructure.&lt;/p&gt;
&lt;p&gt;If the developer does not have access to the kubernetes cluster we need to setup their &lt;code&gt;~/.kube/config&lt;/code&gt; file so that they can access it.&lt;/p&gt;
&lt;p&gt;If you are using Google&amp;rsquo;s GKE then you can browse the &lt;a href=&#34;https://console.cloud.google.com&#34;&gt;GKE Console&lt;/a&gt; to view all the clusters and click on the &lt;code&gt;Connect&lt;/code&gt; button next to your development cluster and then that lets you copy/paste the command to connect to the cluster.&lt;/p&gt;
&lt;p&gt;For other types of clusters please review the Kubernetes documentation for how to grant access to your cluster via your cloud providers CLI / web console.&lt;/p&gt;
&lt;h4 id=&#34;testing-kubernetes-access&#34;&gt;testing kubernetes access&lt;/h4&gt;
&lt;p&gt;Once your user has access to the kubernetes cluster:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/jx3/&#34;&gt;install the jx binary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If Jenkins X was installed in the namespace &lt;code&gt;jx&lt;/code&gt; then the following should &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/developing/kube-context/&#34;&gt;switch your context&lt;/a&gt; to the &lt;code&gt;jx&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx ns jx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To view the environments try:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To view the SourceRepositories:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get sr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/cli/&#34;&gt;jx cli&lt;/a&gt; try:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx pipeline grid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(and hit Ctrl-c or &lt;code&gt;q&lt;/code&gt; to quit)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Charts and resources</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/charts/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-add-a-chart&#34;&gt;How do I add a chart?&lt;/h2&gt;
&lt;p&gt;To add a new chart add to the &lt;code&gt;helmfiles/mynamespace/helmfile.yaml&lt;/code&gt; file follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;add chart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-customise-an-app-in-an-environment&#34;&gt;How do I customise an App in an Environment?&lt;/h2&gt;
&lt;p&gt;We use &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; to configure helm charts whether its in the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment and whether you are using &lt;a href=&#34;https://jenkins-x.io/v3/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;how to customise a chart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a given namespace called &lt;code&gt;ns&lt;/code&gt; there is a folder in the cluster git repository at:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helmfiles/ns/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which contains the &lt;code&gt;helmfile.yaml&lt;/code&gt; file to configure all the charts for that namespace.&lt;/p&gt;
&lt;p&gt;To override the environment configuration for the namespace &lt;code&gt;ns&lt;/code&gt; you can create your own &lt;code&gt;values.yaml&lt;/code&gt; file in this folder (or &lt;code&gt;values.yaml.gotmpl&lt;/code&gt; if you want to use go templating inside it).&lt;/p&gt;
&lt;p&gt;If the configuration only applies to a single chart you could prefix the file with the chart name.&lt;/p&gt;
&lt;p&gt;So create &lt;code&gt;helmfiles/ns/mychart-values.yaml&lt;/code&gt; and put whatever environment specific configuration changes you need for your helm chart.&lt;/p&gt;
&lt;p&gt;To set a custom environment variable try a &lt;code&gt;helmfiles/ns/mychart-values.yaml&lt;/code&gt; file of something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;MY_ENV&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;someValue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you need to reference this YAML file in the &lt;code&gt;releases:&lt;/code&gt; section in the &lt;code&gt;helmfiles/ns/helmfile.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;e.g. your &lt;code&gt;helmfiles/ns/helmfile.yaml&lt;/code&gt; should look something like this - see the new &lt;code&gt;mychart-values.yaml&lt;/code&gt; entry in the &lt;code&gt;releases.values&lt;/code&gt; section for &lt;code&gt;mychart&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;filepath&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;environments&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;default&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-staging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;repositories&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum-$mydomain/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dev/mychart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0.12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mychart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;mychart-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;templates&lt;/span&gt;: {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;renderedvalues&lt;/span&gt;: {}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-use-a-chart-from-a-secure-repository&#34;&gt;How do I use a chart from a secure repository&lt;/h2&gt;
&lt;p&gt;Some chart repositories need a username and password to access them.&lt;/p&gt;
&lt;p&gt;So to access those chart repositories you can the username and password into the &lt;code&gt;helmfile.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;However the username/passwords are probably secret. So you can &lt;a href=&#34;https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-kubectl/&#34;&gt;create a kubernetes Secret&lt;/a&gt; called &lt;code&gt;jx-boot-job-env-vars&lt;/code&gt; which is automatically used in the &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;boot Job&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets make sure we are in the jx-git-operator namespace&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx ns jx-git-operator
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic jx-boot-job-env-vars &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MYREPO_USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;someuser &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MYREPO_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;S!B\*d$zDsb=&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any environment variables defined in the &lt;code&gt;jx-boot-job-env-vars&lt;/code&gt; Secret can then be used in your &lt;code&gt;helmfile.yaml&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;repositories&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://something.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;username&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ requiredEnv &amp;#34;MYREPO_USERNAME&amp;#34; }}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;password&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ requiredEnv &amp;#34;MYREPO_PASSWORD&amp;#34; }}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myrepo/mychart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mychart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.2.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-add-a-kubernetes-resource&#34;&gt;How do I add a kubernetes resource?&lt;/h2&gt;
&lt;p&gt;To add a new kubernetes resource &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;follow the add resources guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The default &lt;code&gt;helmfile.yaml&lt;/code&gt; files take references to helm charts.&lt;/p&gt;
&lt;p&gt;If you want to deploy one or more kubernetes resources &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;wrap them in a local chart in your dev cluster git repository&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-deploy-an-app-with-no-chart&#34;&gt;How do I deploy an app with no chart?&lt;/h2&gt;
&lt;p&gt;Some microservices on kubernetes do not yet come packaged as a helm chart.&lt;/p&gt;
&lt;p&gt;e.g. if the only instructions on the website of the microservice is something like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install this appication via:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f https://acme.com/foo.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want you can just install it like the above &lt;code&gt;kubectl apply&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Though you then lose the benefits of GitOps in that all changes to your cluster are auditted and versioned in git and it&amp;rsquo;s easy to rollback changes.&lt;/p&gt;
&lt;p&gt;So another approach is to follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;create a local chart&lt;/a&gt; instructions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir charts/myname/templates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L https://acme.com/foo.yaml &amp;gt; charts/myname/templates/resources.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion: v1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;description: A Helm chart for myname
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;name: myname
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;version: 0.0.1&amp;#34;&lt;/span&gt; &amp;gt; charts/myname/Chart.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then add the following &lt;code&gt;chart:&lt;/code&gt; line to your &lt;code&gt;helmfiles/$namespace/helmfile.yaml&lt;/code&gt; in the &lt;code&gt;releases:&lt;/code&gt; section for the namespace you want to deploy it in&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;../../charts/myname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If this is a brand new namespace which didn&amp;rsquo;t have a &lt;code&gt;helmfiles/$namespace/helmfile.yaml&lt;/code&gt; then make sure you also add an entry in the root &lt;code&gt;helmfile.yaml&lt;/code&gt; file of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;helmfiles&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/$namespace/helmfile.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that &lt;code&gt;$namespace&lt;/code&gt; in the above files should be expanded to the actual namespace you are deploying it to; e.g. &lt;code&gt;jx&lt;/code&gt; or &lt;code&gt;jx-staging&lt;/code&gt; or whatever.&lt;/p&gt;
&lt;p&gt;The above may seem like a bit of work compared to &lt;code&gt;kubectl apply&lt;/code&gt; but it does mean at any time you can upgrade the app by re-running the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L https://acme.com/foo.yaml &amp;gt; charts/myname/templates/resources.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also easily uninstall the application or modify the YAML in git at any time.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-a-database&#34;&gt;How do I add a database?&lt;/h2&gt;
&lt;p&gt;If you are building a new microservice that needs a database there&amp;rsquo;s a few ways to do it.&lt;/p&gt;
&lt;p&gt;If your microservice has its own database that is not used by any other microservices you can create a &lt;em&gt;nested chart&lt;/em&gt; add it to the &lt;code&gt;Chart.yaml&lt;/code&gt; &lt;code&gt;dependencies&lt;/code&gt; section as &lt;a href=&#34;https://helm.sh/docs/helm/helm_dependency/&#34;&gt;described here&lt;/a&gt;. Though that can be confusing as you now need to configure the dependent chart by wrapping its configuration in a YAML key (e.g. the release name you picked or maybe the chart name) which can be confusing - particularly if someone wants to &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/config/charts/#how-do-i-customise-an-app-in-an-environment&#34;&gt;configure your database differently in a separate environment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So we recommend you avoid nested charts and just add your dependent charts to your &lt;code&gt;preview/helmfile.yaml&lt;/code&gt; for &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;add it to the staging and production environments&lt;/a&gt; so they can all be &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/config/charts/#how-do-i-customise-an-app-in-an-environment&#34;&gt;configured in the same way&lt;/a&gt; via &lt;a href=&#34;https://github.com/roboll/helmfile#configuration&#34;&gt;helmfile configuration&lt;/a&gt; usually via adding a &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;custom values.yaml file and adding it into the releases section&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-annotate-a-namespace&#34;&gt;How do I annotate a namespace?&lt;/h2&gt;
&lt;p&gt;For permanent environments like &lt;code&gt;Dev&lt;/code&gt;, &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt; you can add the annotated &lt;code&gt;Namespace&lt;/code&gt; &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;resource into a chart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt; you can add the &lt;code&gt;kubectl annotate ns foo&lt;/code&gt; step into a helmfile hook in the &lt;code&gt;preview/helmfile.yaml&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Registries</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/registries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/registries/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-use-a-custom-container-registry&#34;&gt;How do I use a custom container registry?&lt;/h2&gt;
&lt;p&gt;What container registry is used by default depends on the which cloud provider you use. There are some things to consider when &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx#migration-from-container-to-artifact-registry&#34;&gt;migrating from container registry to artifact registry in Google GCP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To allow a pipeline to be able to push to a container registry you can add this secret&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic container-registry-auth  &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myserver.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;username&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myuser &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then take effect the next time a commit merges on your cluster git repository e.g. next time you &lt;a href=&#34;https://jenkins-x.io/v3/guides/upgrade/#cluster&#34;&gt;upgrade your cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The various container registry secrets get merged into a &lt;code&gt;Secret&lt;/code&gt; called &lt;code&gt;tekton-container-registry-auth&lt;/code&gt; in the &lt;code&gt;jx&lt;/code&gt; namespace which is associated with the default pipeline &lt;code&gt;ServiceAccount&lt;/code&gt; &lt;code&gt;tekton-bot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want all pipelines to use this container registry then modify the &lt;code&gt;cluster.registry&lt;/code&gt; field in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;registry&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myserver.com &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise you can enable this new container registry on a specific application/repository by adding this &lt;code&gt;.jx/variables.sh&lt;/code&gt; file into the git repository if it doesn&amp;rsquo;t exist&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export DOCKER_REGISTRY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myserver.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-switch-to-github-pages-for-charts&#34;&gt;How do I switch to github pages for charts?&lt;/h2&gt;
&lt;p&gt;Using a local chart museum or bucket repo chart for installing charts can be troublesome if you just have 1 cluster and you are using it for dev, staging and production.&lt;/p&gt;
&lt;p&gt;e.g. if you delete your cluster and try reboot everything, there&amp;rsquo;s initially no chart museum or bucket repo so that the staging / production helmfiles won&amp;rsquo;t be able to find the charts and your boot job will fail.&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt; at least lets you destroy and recreate each cluster independently.&lt;/p&gt;
&lt;p&gt;A workaround while you bring back your cluster is to comment out the staging and production &lt;code&gt;helmfile.yaml&lt;/code&gt; files in the &lt;code&gt;helmfile.yaml&lt;/code&gt; file in the root directory.&lt;/p&gt;
&lt;p&gt;We recommend &lt;a href=&#34;https://jenkins-x.io/v3/devops/cloud-native/#prefer-cloud-over-kubernetes&#34;&gt;using cloud services and storage where possible&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Longer term we expect folks to move towards using OCI and your container registry to host your helm charts so that its always highly available in all clusters/locations. Though there is still integration work required with &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt; and &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; to make that completely seamless right now (particularly with secrets and cloud IAM roles).&lt;/p&gt;
&lt;p&gt;So one option is to use github pages as your chart repository - so that your charts are always accessible for the staging/production namespaces/clusters even if you recreate your cluster from scractch.&lt;/p&gt;
&lt;p&gt;To switch to use github pages for your container registry, modify your &lt;a href=&#34;https://github.com/jenkins-x/jx-api/blob/master/docs/config.md#requirements&#34;&gt;jx-requirements.yml&lt;/a&gt; to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;chartRepository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://github.com/myorg/mycharts.git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;chartKind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pages  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-switch-to-bucketrepo&#34;&gt;How do I switch to bucketrepo?&lt;/h2&gt;
&lt;p&gt;To switch from &lt;code&gt;nexus&lt;/code&gt; to &lt;code&gt;bucketrepo&lt;/code&gt; in V3 there are a few changes you need to make.&lt;/p&gt;
&lt;p&gt;Incidetally the &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/&#34;&gt;jx3-kubernetes&lt;/a&gt; repository is already setup for&lt;code&gt;bucketrepo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please make the following changes&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove your old &lt;code&gt;nexus&lt;/code&gt; chart from &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add this to your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file so its like &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/jx-requirements.yml#L8&#34;&gt;this one&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;chartRepository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://bucketrepo.jx.svc.cluster.local/bucketrepo/charts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;add the &lt;code&gt;bucketrepo&lt;/code&gt; chart to your &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt; file &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/helmfiles/jx/helmfile.yaml#L42&#34;&gt;like this&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x/bucketrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then git commit and you should have your cluster switched to bucketrepo&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Repositories</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/repos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/repos/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-customise-a-scheduler&#34;&gt;How do I customise a Scheduler?&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/config.md#gitops.jenkins-x.io/v1alpha1.SourceConfig&#34;&gt;.jx/gitops/source-config.yaml&lt;/a&gt; file in your dev cluster git repository lets you configure the name of the &lt;code&gt;scheduler&lt;/code&gt; to use for all repositories, for a group of repositories or for an individual repository.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;schedular&lt;/code&gt; name is then resolved to be either a file &lt;code&gt;versionStream/schedulers/$name.yaml&lt;/code&gt;  or &lt;code&gt;schedulers/$name.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So if you want to create your own &lt;code&gt;Scheduler&lt;/code&gt; you could copy the default in-repo based scheduler &lt;code&gt;versionStream/schedulers/in-repo.yaml&lt;/code&gt; to &lt;code&gt;schedulers/myname.yaml&lt;/code&gt; and then modify it to suit - then associate &lt;code&gt;myname&lt;/code&gt; with whatever repositories you wish to use this scheduler for.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&#34;https://github.com/jenkins-x/jx3-versions/blob/master/schedulers/in-repo.yaml&#34;&gt;default in-repo scheduler&lt;/a&gt; used to define the labels and merge strategy etc.&lt;/p&gt;
&lt;p&gt;Once youâ€™ve made your changes to any &lt;code&gt;Scheduler&lt;/code&gt; and merged changes into your dev cluster repository a &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;boot job should trigger&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can watch the boot job run via &lt;code&gt;jx admin log -w&lt;/code&gt;. Once that is complete you should be able to see the effect of the changes in the &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;plugins&lt;/code&gt; &lt;code&gt;ConfigMap&lt;/code&gt; resources in the &lt;code&gt;jx&lt;/code&gt; namespace which are then used by &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/#lighthouse&#34;&gt;lighthouse&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get cm config -n jx -oyaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get cm plugins -n jx -oyaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-configure-slack-notifications&#34;&gt;How do I configure Slack notifications?&lt;/h2&gt;
&lt;p&gt;You can modify the &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/config.md#gitops.jenkins-x.io/v1alpha1.SourceConfig&#34;&gt;.jx/gitops/source-config.yaml&lt;/a&gt; file in your dev cluster git repository to use custom&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/slack/#configuring-slack-notifications&#34;&gt;slack configuration guide&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Secrets</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/secrets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/secrets/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-add-a-new-secret&#34;&gt;How do I add a new Secret?&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#create-a-new-secret&#34;&gt;how to add a new Secret&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-edit-a-secret&#34;&gt;How do I edit a secret?&lt;/h2&gt;
&lt;p&gt;Secrets are &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/&#34;&gt;stored in external secret storage&lt;/a&gt; like Vault or your cloud providers secret store.&lt;/p&gt;
&lt;p&gt;So you can edit them in the underlying secret store directly (e.g. with your cloud providers CLI or the vault CLI).&lt;/p&gt;
&lt;p&gt;Or you can use &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#edit-secrets&#34;&gt;jx secret edit&lt;/a&gt; command to do this for you.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#interactive-mode&#34;&gt;interactive mode&lt;/a&gt; is a nice way to find the secret and property you want to edit, then edit&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx secret edit -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are using vault (deployed by jx) to store your secrets, remember to run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx secret vault portforward
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;in a separate terminal before running the secret edit command.
Look at external vault &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/vault/#local-jx-secret-with-external-vault&#34;&gt;documentation&lt;/a&gt; to see how to port forward before editing secrets.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-edit-the-bot-token&#34;&gt;How do I edit the bot token?&lt;/h2&gt;
&lt;p&gt;The git operator secret is normally updated whenever you re-install the git operator via Terraform or &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/operator/&#34;&gt;install the operator via the CLI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can delete the git operator via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm delete jx-git-operator -n jx-git-operator
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are a number of other places you need to change the bot token.&lt;/p&gt;
&lt;p&gt;First check out &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/config/secrets/#how-do-i-edit-a-secret&#34;&gt;how to edit secrets&lt;/a&gt; for background.&lt;/p&gt;
&lt;p&gt;Secrets are &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/&#34;&gt;stored in external secret storage&lt;/a&gt; like Vault or your cloud providers secret store.&lt;/p&gt;
&lt;p&gt;So you can edit them in the underlying secret store directly (e.g. with your cloud providers CLI or the vault CLI).&lt;/p&gt;
&lt;p&gt;When you first boot up Jenkins X it will auto-populate the secrets in the external secret store with the bot user and password you pass in when you run.&lt;/p&gt;
&lt;p&gt;The bot user and password is replicated into a number of different secrets. This is so that you can use separate accounts and tokens if you wish; or even change scopes per use.&lt;/p&gt;
&lt;p&gt;Though it does mean you&amp;rsquo;ve a few different places to change the bot token if you choose to change it.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#interactive-mode&#34;&gt;interactive mode&lt;/a&gt; is probably the simplest way to change a secret:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx secret edit -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then to change a bot token you will need to change these secrets:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Secret Name&lt;/th&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lighthouse-oauth-token&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;oauth&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tekton-git&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;username&lt;/code&gt; &lt;code&gt;password&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Once you have made your changes you can verify the changes have taken place.&lt;/p&gt;
&lt;p&gt;e.g. if you have &lt;a href=&#34;https://github.com/mfuentesg/ksd&#34;&gt;ksd&lt;/a&gt; installed on your &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get secret -oyaml lighthouse-oauth-token | ksd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-configure-secrets-differently-in-staging-versus-production&#34;&gt;How do I configure secrets differently in Staging versus Production?&lt;/h2&gt;
&lt;p&gt;The simplest solution is to use &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt; then you can have a separate secrets manager (cloud secret store or vault instance) per cluster.&lt;/p&gt;
&lt;p&gt;Otherwise here are a few options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;add an &lt;code&gt;ExternalSecret&lt;/code&gt; into your helm charts instead of a kubernetes &lt;code&gt;Secret&lt;/code&gt; and configure it based on the namespace (or other settings in your chart) to choose different secret store locations to populate the &lt;code&gt;Secret&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;e.g. if you are sharing a Vault between staging and production then you can use different paths in vault; or if you are using a cloud secret store you can use different projects / accounts / secret locations etc.&lt;/li&gt;
&lt;li&gt;to help migrate from Secret -&amp;gt; ExternalSecret you could start off with the generated ExternalSecret yaml file in the &lt;code&gt;config-root/namespaces/$namespace/$chart/$name-secret.yaml&lt;/code&gt; file and copy it into your apps &lt;code&gt;charts/$appName/templates&lt;/code&gt; directory then parameterise it in the usual helm way with &lt;code&gt;{{ .Values.something }}&lt;/code&gt; expressions where you need to configure things differently per namespace/environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;for Vault you can specify an annotation on your &lt;code&gt;Secret&lt;/code&gt; to use a custom prefix in the vault paths for different namespaces or environments:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;e.g. in your &lt;code&gt;Secret&lt;/code&gt; in &lt;code&gt;charts/$appName/templates/something-secret.yaml&lt;/code&gt; you can use something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;something&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;annotations&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;secret.jenkins-x.io/prefix&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Values.secretPrefix }}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Opaque&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;data&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then add to your &lt;code&gt;charts/$appName/values.yaml&lt;/code&gt; file something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# default secret prefix location in vault&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;secretPrefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;staging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then in the production environment you can create a values.yaml file like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;secretPrefix&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;production&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and passing this values.yaml file into the &lt;code&gt;helmfiles/jx-production/helmfile.yaml&lt;/code&gt; file for your charts &lt;code&gt;release:&lt;/code&gt; entry &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;to customize the chart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This will then use different paths in vault for staging: &lt;code&gt;secret/data/staging/$appName/something/$key&lt;/code&gt; to production: &lt;code&gt;secret/data/production/$appName/something/$key&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-change-the-secret-poll-period-in-kubernetes-external-secrets&#34;&gt;How do I change the secret poll period in kubernetes external secrets?&lt;/h2&gt;
&lt;p&gt;Your cloud provider could charge per read of a secret and so a frequent poll of your secrets could cost $$$. You may want to tone down the poll period.&lt;/p&gt;
&lt;p&gt;You can do this via the &lt;code&gt;POLLER_INTERVAL_MILLISECONDS&lt;/code&gt; setting in the &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets/tree/master/charts/kubernetes-external-secrets#configuration&#34;&gt;kubernetes external secrets configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more details &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;see how to configure charts&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-switch-to-gsm-from-vault&#34;&gt;How do I switch to GSM from Vault?&lt;/h2&gt;
&lt;p&gt;We recommend you use &lt;a href=&#34;https://jenkins-x.io/v3/devops/cloud-native/#prefer-cloud-over-kubernetes&#34;&gt;cloud secret managers over vault&lt;/a&gt; as its easier to manage; let your cloud provider do the undifferentiated heavy lifting for you.&lt;/p&gt;
&lt;p&gt;If you spin up a cluster on vault and want to switch over to, say, GSM here&amp;rsquo;s how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set the &lt;code&gt;gsm&lt;/code&gt; variable to true in terraform as &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-terraform-gke/blob/master/README.md#getting-started&#34;&gt;described in the getting started guide&lt;/a&gt; using your terraform/infrastructure git repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gsm = true&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; values.auto.tfvars
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: enable gsm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform plan
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;in your dev cluster git repository (which has a &lt;code&gt;helmfile.yaml&lt;/code&gt; inside) modify the &lt;code&gt;jx-requirement.yml&lt;/code&gt; switch the &lt;code&gt;secretStorage&lt;/code&gt; line to:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;secretStorage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gsm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;download &lt;a href=&#34;https://github.com/GoogleContainerTools/kpt/releases&#34;&gt;kpt&lt;/a&gt; and add it to your $PATH&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run the following to replace your vault secret mapping files with gsm versions:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf .jx/secret/mapping
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kpt pkg get https://github.com/jenkins-x/jx3-gitops-template.git/.jx/secret/gsm/mapping .jx/secret/mapping
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -al .jx/secret/mapping
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# echo we should see secret-mappings.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .jx/secret
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: migrate to gsm secret mapping&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# now lets push and watch the git operator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx admin log -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Vault</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/vault/</guid>
      <description>
        
        
        &lt;h2 id=&#34;after-an-upgrade-the-boot-job-is-waiting-for-vault-in-jx-vault&#34;&gt;After an upgrade the boot job is waiting for vault in jx-vault&lt;/h2&gt;
&lt;p&gt;In the alpha we used to install vault via the &lt;code&gt;helmfile/secret-infra/helmfile.yaml&lt;/code&gt; file and install vault into the &lt;code&gt;secret-infra&lt;/code&gt; namespace.&lt;/p&gt;
&lt;p&gt;A production installation of vault requires cloud resources such as a key ring, crypto key and bucket.&lt;/p&gt;
&lt;p&gt;So to make it easier to manage vault properly with cloud resources and to simplify the operation of Jenkins X (so that the secret store can be used on an empty cluster before we boot anything in the boot process) we have moved the installation of vault into terraform. (e.g for &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx/blob/master/modules/jx-boot/vault.tf&#34;&gt;GKE&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;So ideally you would re-apply your terraform using the latest terraform modules so that you get the new vault setup in the &lt;code&gt;jx-vault&lt;/code&gt; namespace.&lt;/p&gt;
&lt;p&gt;A workaround if you wish to keep using your vault in your &lt;code&gt;secret-infra&lt;/code&gt; namespace is to modify the first few lines starting with &lt;code&gt;VAULT&lt;/code&gt; of the file: &lt;code&gt;versionStream/Makefile.mk&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VAULT_ADDR &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; https://vault.secret-infra:8200
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VAULT_NAMESPACE &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; secret-infra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VAULT_ROLE &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; secret-infra
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Ingress</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/ingress/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-configure-the-ingress-domain-in-dev-staging-or-production&#34;&gt;How do I configure the ingress domain in Dev, Staging or Production?&lt;/h2&gt;
&lt;p&gt;With the new helm 3 based boot every environment uses boot - so there is a single way to configure anything whether its in the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment and whether or not you are using &lt;a href=&#34;https://jenkins-x.io/v3/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can override the domain name for use in all apps within an environment by modifying the &lt;code&gt;jx-requirements.yml&lt;/code&gt; in the git repository for the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also by default there is a namespace specific separator added. So if your service is &lt;code&gt;cheese&lt;/code&gt; the full domain name would be something like &lt;code&gt;cheese.jx-staging.mydomain.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you wish to avoid the namespace specific separator if each environment already has its own unique &lt;code&gt;domain&lt;/code&gt; value then you can specify:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you wish to change any of these values for a single app only then you can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;app customisation mechanism&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;e.g. for an app called &lt;code&gt;mychart&lt;/code&gt; you can create a file called &lt;code&gt;apps/mychart/values.yaml&lt;/code&gt; in the git repository for your environment and add the following YAML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jxRequirements&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-configure-the-ingress-tls-certificate-in-dev-staging-or-production&#34;&gt;How do I configure the ingress TLS certificate in Dev, Staging or Production?&lt;/h2&gt;
&lt;p&gt;You can specify the TLS certificate to use for the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment by modifying the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file in the environments git repository:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-tls-secret-name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then be applied to all the Jenkins X ingress resources for things like &lt;code&gt;lighthouse&lt;/code&gt; or &lt;code&gt;nexus&lt;/code&gt; - plus any apps you deploy to &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to override the TLS secret name for a specific app in a specific environment then rather like the &lt;a href=&#34;#how-do-i-configure-the-ingress-domain-in-dev-staging-or-production&#34;&gt;above question&lt;/a&gt; you can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;app customisation mechanism&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;e.g. for an app called &lt;code&gt;mychart&lt;/code&gt; you can create a file called &lt;code&gt;apps/mychart/values.yaml&lt;/code&gt; in the git repository for your environment and add the following YAML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jxRequirements&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-tls-secret-name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-to-add-custom-annotations-to-ingress-controller&#34;&gt;How To Add Custom Annotations to Ingress Controller?&lt;/h2&gt;
&lt;p&gt;There may be times when you need to add your custom annotations to ingress resources.&lt;/p&gt;
&lt;p&gt;The simplest way to do this is to modify the &lt;code&gt;jx-requirements.yml&lt;/code&gt; in your development git repository to add any ingress annotations you wish:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;annotations&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;myannotation&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;somevalue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my.domain.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have commit and push this change it will &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;trigger another boot job&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can watch the boot job run via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx admin log -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once its complete you should see the new annotations on any Ingress created by Jenkins X.&lt;/p&gt;
&lt;p&gt;If you wish to add custom annotations to only a specific ingress then you can &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;customise the chart&lt;/a&gt; in the usual &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; way via a &lt;code&gt;values.yaml&lt;/code&gt; file you reference in your &lt;code&gt;helmfile.yaml&lt;/code&gt; file&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-diagnose-webhooks&#34;&gt;How do I diagnose webhooks?&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/v3/admin/troubleshooting/webhooks/&#34;&gt;How to diagnose webhooks&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-use-webhooks-without-a-public-ip&#34;&gt;How do I use webhooks without a public IP?&lt;/h2&gt;
&lt;p&gt;If you are running on your laptop or in a private cluster you won&amp;rsquo;t be able to use webhooks on your git provider to trigger pipelines.&lt;/p&gt;
&lt;p&gt;A workaround is to use &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/on-premises/webhooks/&#34;&gt;use something like ngrok to enable webhooks&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-configure-to-use-v1beta1-ingress&#34;&gt;How do I configure to use v1beta1 Ingress?&lt;/h2&gt;
&lt;p&gt;We recently upgraded to default to &lt;code&gt;Ingress&lt;/code&gt; &lt;code&gt;networking.k8s.io/v1&lt;/code&gt; which is included from version 1.19 as the older &lt;code&gt;networking.k8s.io/v1beta1&lt;/code&gt; is deprecated and to be removed in v 1.22.&lt;/p&gt;
&lt;p&gt;If you are on 1.18 we recommend you upgrade to 1.19 if you can.&lt;/p&gt;
&lt;p&gt;If not here&amp;rsquo;s how to configure Jenkins X to use the deprecated &lt;code&gt;networking.k8s.io/v1beta1&lt;/code&gt; version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create this file at &lt;code&gt;helmfiles/jx/jxboot-helmfile-values.yaml&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;networking.k8s.io/v1beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;then add it at the last item in &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt; for the release of the chart &lt;code&gt;jx3/jxboot-helmfile-resources&lt;/code&gt;. So your file should look something like&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx3/jxboot-helmfile-resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0.63&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jxboot-helmfile-resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;../../versionStream/charts/jx3/jxboot-helmfile-resources/values.yaml.gotmpl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;jxboot-helmfile-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;create this file at &lt;code&gt;helmfiles/jx/jx-pipelines-visualizer-values.yaml&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;networking.k8s.io/v1beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;then add it at the last item in &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt; for the release of the chart &lt;code&gt;jx3/jx-pipelines-visualizer&lt;/code&gt;. So your file should look something like&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx3/jx-pipelines-visualizer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-pipelines-visualizer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;../../versionStream/charts/jx3/jx-pipelines-visualizer/values.yaml.gotmpl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-pipelines-visualizer-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then when you git commit these changes and your build job completes (e.g. watch it via &lt;code&gt;jx admin log -w&lt;/code&gt;) your ingress resources should now be using &lt;code&gt;networking.k8s.io/v1beta1&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
