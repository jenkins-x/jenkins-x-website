<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – Cluster Recovery</title>
    <link>https://jenkins-x.io/v3/admin/guides/cluster-recovery/</link>
    <description>Recent content in Cluster Recovery on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/admin/guides/cluster-recovery/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: Cluster Recovery Demo</title>
      <link>https://jenkins-x.io/v3/admin/guides/cluster-recovery/cluster-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/cluster-recovery/cluster-demo/</guid>
      <description>
        
        
        &lt;p&gt;This section describes cluster recovery situations for when things go bad.  It can also be used to reguary recreate clusters, this is something the Jenkins X project does itself as we prefer to treat our clusters as cattle and not pets, giving confidence that we can restore services at any time.&lt;/p&gt;
&lt;p&gt;Disclaimer: there may well be better approaches so if you know of better ways please contribute and help improve the experience.  There are some manual steps below that we know to work but expect we can improve.&lt;/p&gt;
&lt;h1 id=&#34;demo&#34;&gt;Demo&lt;/h1&gt;
&lt;p&gt;The following demo walks you through cluster recovery&lt;/p&gt;
&lt;iframe width=&#34;700&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2QgX3cn0GqU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;see &lt;a href=&#34;https://www.youtube.com/playlist?list=PLr_PmC4W69dKM3fo8OK729fdmX_MTqdHd&#34;&gt;other demos here&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;cluster-applications-and-services&#34;&gt;Cluster applications and services&lt;/h1&gt;
&lt;p&gt;Jenkins X embraces GitOps, details of any application or configuration are stored declaratively in Git.  Jenkins X recommends using external storage if you require persistence to be preserved.  Cloud Storage buckets are great at achieving this.  With that said Jenkins X has one service that writes data to a persistent volume and is not backed up in cloud storage.  The current use of Chartmuseuam to store helm charts for applications means if we need to recreate a cluster we will need to retrigger release pipelines for any application running in the staging or production cluster.&lt;/p&gt;
&lt;p&gt;The Jenkins X project itself does not use Chartmuseum, instead it uses Work Load Identity and &lt;a href=&#34;https://github.com/hayorov/helm-gcs&#34;&gt;helm gcs plugin&lt;/a&gt; to write directly to a GCP bucket.  You could consider using this approach but as well Jenkins X will look to resolve this by adding OOTB support for buckets or other external repositories for charts.&lt;/p&gt;
&lt;p&gt;For now you will need to modify your cluster git repository and remove the helmfile repository that points to the internal chartmuseum service.&lt;/p&gt;
&lt;p&gt;For example: &lt;a href=&#34;https://github.com/cb-kubecd/jx3-demo-walk-cluster/blob/ce3fa07834e93e44b2d19882b82a7de51f627ba2/helmfiles/jx-staging/helmfile.yaml#L7-L15&#34;&gt;https://github.com/cb-kubecd/jx3-demo-walk-cluster/blob/ce3fa07834e93e44b2d19882b82a7de51f627ba2/helmfiles/jx-staging/helmfile.yaml#L7-L15&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;filepath: &amp;#34;&amp;#34;
environments:
 default:
   values:
   - jx-values.yaml
namespace: jx-staging
repositories:
- name: dev
 url: http://jenkins-x-chartmuseum.jx.svc.cluster.local:8080
releases:
- chart: dev/jx3-golang1
 version: 0.0.4
 name: jx3-golang1
 values:
 - jx-values.yaml
templates: {}
renderedvalues: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once you recover any infrastructure below you will then need to trigger release pipelines again using&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx start pipeline
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h1&gt;
&lt;p&gt;Cloud Infrastructure is managed by Terraform.  We recommend storing the Terraform state file in a &lt;a href=&#34;https://www.terraform.io/docs/backends/index.html&#34;&gt;secure backend&lt;/a&gt; or use a service like &lt;a href=&#34;https://app.terraform.io/&#34;&gt;Terraform Cloud&lt;/a&gt; as this means you can recover your Cloud Infrastructure in situations where it is deleted.&lt;/p&gt;
&lt;h2 id=&#34;gcp-specific&#34;&gt;GCP specific&lt;/h2&gt;
&lt;p&gt;For Google Container Engine there is a manual task you need to perform because the Terraform module does not manage deleting Cloud DNS Manage Zones that contain record sets.  This is something we hope to address in the future but if you are using DNS you will need to manually delete your Managed Zone, the easiest way is via the GCP console.&lt;/p&gt;
&lt;p&gt;Select your managed zone &lt;a href=&#34;https://console.cloud.google.com/net-services/dns/zones&#34;&gt;https://console.cloud.google.com/net-services/dns/zones&lt;/a&gt;
&lt;img src=&#34;https://jenkins-x.io/images/v3/gcp_select_zone.png&#34; alt=&#34;Select Zone&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select all record set checkbox and click the DELETE RECORD SETS button
&lt;img src=&#34;https://jenkins-x.io/images/v3/gcp_delete_recordsets.png&#34; alt=&#34;Delete Record Sets&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now select the DELETE ZONE button at the top&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/v3/gcp_delete_zone.png&#34; alt=&#34;Delete Zone&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;recover&#34;&gt;Recover&lt;/h2&gt;
&lt;p&gt;The Jenkins X terraform modules write some details into a cluster once it is created, this can cause issues when applying the Terraform plan if that cluster is not available.&lt;/p&gt;
&lt;p&gt;You will need to modify the state file so navigate to your local clone of your infrastructure git repository&lt;/p&gt;
&lt;p&gt;Set your bot username and personal access token &lt;code&gt;TF_VAR_&lt;/code&gt;s&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export TF_VAR_jx_bot_username=
export TF_VAR_jx_bot_token=
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are using Terraform Cloud you can get you state file by adding this to your &lt;code&gt;main.tf&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Enable to work with local and remote states
# run terraform init after uncommenting below
terraform {
  backend &amp;#34;remote&amp;#34; {
    hostname = &amp;#34;app.terraform.io&amp;#34;
    organization = &amp;#34;foo&amp;#34;
    workspaces {
      name = &amp;#34;bar&amp;#34;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you already have a local state file make a backup of it, e.g:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp terraform.tfstate terraform.tfstate.backup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;now modify the state file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform state rm module.jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform refresh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform state pull &amp;gt; terraform.tfstate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform plan
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-is-not-recovered&#34;&gt;What is not recovered&lt;/h2&gt;
&lt;p&gt;Any Custom Resources not stored in git will not be recovered, for example Jenkins X Pipeline Activities.  There are solutions like &lt;a href=&#34;https://velero.io/&#34;&gt;Velero&lt;/a&gt; that handles backups which could be used.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Cluster Rebuild Example</title>
      <link>https://jenkins-x.io/v3/admin/guides/cluster-recovery/cluster-rebuild/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/guides/cluster-recovery/cluster-rebuild/</guid>
      <description>
        
        
        &lt;p&gt;This is an example on how to treat your clusters as cattle and not pets by rebuilding a JX3/GKE environment and restoring to it&amp;rsquo;s previous configuration. The steps will include building a JX3 Google/GSM environment from scratch and deploying projects to staging and production. It will utilize DNS (&lt;code&gt;jx3rocks.com&lt;/code&gt;), TLS, Let&amp;rsquo;s Encrypt certificates. The example includes the recovery of the helm chart repository which is currently implemented with &lt;a href=&#34;https://github.com/helm/chartmuseum&#34;&gt;ChartMuseum&lt;/a&gt; . This example is inteded for an audience already familiar with Jenkins X operability and focuses on an example of actual commands used to build and maintain a recoverable  environment. Additional information regarding using Google as the provider for this example can be found under &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/tls_dns/#prerequisites&#34;&gt;Google Cloud Platform Prequisites&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you wish to bypass the initial building of the cluster and project deployment steps, go to &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/cluster-rebuild/#prepare-for-outtage&#34;&gt;Prepare for outtage&lt;/a&gt; for the cluster rebuilding steps.&lt;/p&gt;
&lt;h3 id=&#34;initialize-the-infra-and-cluster-repos&#34;&gt;Initialize the Infra and Cluster Repos&lt;/h3&gt;
&lt;p&gt;Using a command-line based approach, the example employs a process modeled after the doc &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/google&#34;&gt;Setup Jenkins X on Google Cloud with GKE&lt;/a&gt;, and will use Google Secret Manger. It requires installation of &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://hub.github.com/&#34;&gt;Hub&lt;/a&gt; command line tools.&lt;/p&gt;
&lt;p&gt;The following are the values used for the creation of the Infra and Cluster repos:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Repo Source:		jx3-gitops-repositories
Infra Repo:		jx3-terraform-gke
Cluster Repo:		jx3-gke-gsm
Git Organization:	$JX3ORG
JX3 Root Directory:	$JX3HOME
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Building infra repo: &lt;code&gt;https://github.com/${JX3ORG}/jx3-terraform-gke&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/jx3-gitops-repositories/jx3-terraform-gke.git jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd  jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote set-url origin https://github.com/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-terraform-gke.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hub create -p &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chore: Initial&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Buidling cluster repo: &lt;code&gt;https://github.com/${JX3ORG}/jx3-gke-gsm&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/jx3-gitops-repositories/jx3-gke-gsm.git jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote set-url origin https://github.com/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hub create -p &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chore: Initial&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;manage-url-format&#34;&gt;Manage URL format&lt;/h3&gt;
&lt;p&gt;This example uses external DNS with subdomain and URLs will have a root of &lt;code&gt;web.jx3rocks.com&lt;/code&gt;. To avoid including the default string &lt;code&gt;&amp;quot;-jx&amp;quot;&lt;/code&gt;  in the URLs, the example blanks out the &lt;code&gt;spec:ingress:namespaceSubDomain&lt;/code&gt; value (&lt;code&gt;&amp;quot;.&amp;quot;&lt;/code&gt;) in the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file. To eliminate having non-unique URLs after doing this type of update, an additional &lt;code&gt;spec:environment:ingress:namespaceSubDomain&lt;/code&gt; line item is added (&lt;code&gt;&amp;quot;-stg.&amp;quot;&lt;/code&gt;) for the staging environment.&lt;/p&gt;
&lt;p&gt;File:&lt;code&gt;${JX3HOME}/jx3-gke-gsm/jx-requirements.yml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;environments&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;staging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;stg.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;production&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;externalDNS&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;push-initial-changes-to-cluster-repo&#34;&gt;Push initial changes to cluster repo&lt;/h3&gt;
&lt;p&gt;All the customizations for the cluster repo are now propagated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m “chore: Jenkins example init”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push	
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;build-the-infrastucture-with-terraform&#34;&gt;Build the infrastucture with Terraform&lt;/h3&gt;
&lt;p&gt;The following TF_VAR environment variables are set prior to running Terraform commands:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TF_VAR_gcp_project=&amp;lt;google project&amp;gt;
TF_VAR_apex_domain_gcp_project=&amp;lt;google project&amp;gt;
TF_VAR_jx_bot_username=&amp;lt;git username&amp;gt;
TF_VAR_jx_bot_token=&amp;lt;git token&amp;gt;
TF_VAR_tls_email=mymail@jx3rocks.com

TF_VAR_apex_domain=jx3rocks.com
TF_VAR_subdomain=web

TF_VAR_gsm=true
TF_VAR_cluster_name=jx3web
TF_VAR_cluster_location=us-east1-b
TF_VAR_jx_git_url=https://github.com/${JX3ORG}/jx3-gke-gsm.src.git
TF_VAR_lets_encrypt_production=false
TF_VAR_force_destroy=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Additional detail on Terraform settings can be found under &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-terraform-gke/blob/master/README.md&#34;&gt;Google Terraform Quickstart Template&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Commands to build intrastructure:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/create.sh                &lt;span style=&#34;color:#75715e&#34;&gt;# Performs terraform init, plan and apply&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enable-prod-certificate&#34;&gt;Enable prod certificate&lt;/h3&gt;
&lt;p&gt;This example employs TLS and accesing Jenkins from a browser requires a valid production certificate. It should be noted that TLS is not supported with automated domains &lt;code&gt;(i.e. nip.io)&lt;/code&gt;. The process will begin by installing a Let&amp;rsquo;s Encrypt test certicate. After the initial build completes and is successful, it’s best to ensure that the test certificate is ready (READY=True) before enabing the production certificate. You can find more information regarding this subject under &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/tls_dns/&#34;&gt;TLS and DNS&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Set credentials&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud container clusters get-credentials jx3web --zone us-east1-b 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Set jx namespace&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx ns jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## Check certificate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get cert -n jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                     READY   SECRET                   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tls-web-jx3rocks-com-s   True    tls-web-jx3rocks-com-s   39m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Enabling the production certificate will require updates to both infra &lt;code&gt;(jx-terraform-gke)&lt;/code&gt; and cluster &lt;code&gt;(jx3-gke-gsm)&lt;/code&gt; repos. The commands to create the prod certificate are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull         &lt;span style=&#34;color:#75715e&#34;&gt;## Make sure local cluster repo is up to date&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export TF_VAR_lets_encrypt_production&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform apply -auto-approve 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit --allow-empty -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dummy commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx admin log     &lt;span style=&#34;color:#75715e&#34;&gt;## Make sure it completes before proceeding&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull         &lt;span style=&#34;color:#75715e&#34;&gt;## Once successful refresh local cluster repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;${JX3HOME}/jx3-gke-gsm/jx-requirements.yml&lt;/code&gt; file&amp;rsquo;s TLS production setting should now be &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;web.jx3rocks.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;externalDNS&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ingress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;email&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mymail@jx3rocks.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;production&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once again, the example checks the certificates status till the production certifacte is ready before proceeding.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get cert -n jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                     READY   SECRET                   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tls-web-jx3rocks-com-p   True    tls-web-jx3rocks-com-p   39m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tls-web-jx3rocks-com-s   True    tls-web-jx3rocks-com-s   86m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;deploy-project-to-stage-and-production&#34;&gt;Deploy project to Stage and Production&lt;/h3&gt;
&lt;p&gt;After production certificates become ready, the following commands will deploy a simple JSnode app to staging and production&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Using quickstart deploy app to staging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx project quickstart --git-token &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TF_VAR_jx_bot_token&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --git-username &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TF_VAR_jx_bot_user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --filter node-http --org &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --batch-mode  --name node-http01
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# For documentation simplicity, use the following command to promote to production&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx promote -v 0.0.1 -e production --app node-http01 --app-git-url https://github.com/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/node-http01.git 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Confirm deployments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APPLICATION STAGING PODS URL                                     PRODUCTION PODS URL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http01 0.0.1   1/1  http://node-http01-stg.two.&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.com 0.0.1     1/1  https://node-http01.two.&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3ORG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;prepare-for-outtage&#34;&gt;Prepare for Outtage&lt;/h3&gt;
&lt;p&gt;To prepare for shutting down your cluster, a backup of the helm repo is essential. The helm repo is located in the chartmuseum pod&amp;rsquo;s local storage and the following will copy the helm chart files to a separate backup location (i.e. $HOME/storage).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p $HOME/storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl cp jx/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;kubectl get pods -n jx --selector&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;chartmuseum -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;:/storage .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;helm-repo-backup&#34;&gt;Helm Repo Backup&lt;/h3&gt;
&lt;p&gt;You should now see a copy of the chart and index file in the backup location. You can ignore the &amp;rsquo;lost+found&amp;rsquo; directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;index-cache.yaml  lost+found             node-http01-0.0.1.tgz  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;destroy-infrastructure&#34;&gt;Destroy Infrastructure&lt;/h3&gt;
&lt;p&gt;Commands to shutdown infrastructure. Make sure the same Terraform variables are set found under &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/cluster-rebuild/#build-the-infrastucture-with-terraform&#34;&gt;Building the infrastructure with Terraform&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform destroy -auto-approve
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cluster-down&#34;&gt;Cluster Down&lt;/h3&gt;
&lt;p&gt;Upon completion of the commands above, the Kubernetes resources will be completely freed up. You want to ensure your infra (jx3-terraform-gke), cluster (jx3-gke-gsm), and project repos, as well as your Terraform variables and helm repo backup, remain unchanged and available for when ready to rebuild..&lt;/p&gt;
&lt;h3 id=&#34;prepare-cluster-repo-for-rebuild&#34;&gt;Prepare Cluster Repo for Rebuild&lt;/h3&gt;
&lt;p&gt;Prior to bringing the infrastructure (jx3-terraform-gke) back online, prepare the cluster repo (jx3-gke-gsm) by removing the reference of the &lt;code&gt;jx-staging&lt;/code&gt; and &lt;code&gt;jx-production&lt;/code&gt; environments and the long term storage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull     &lt;span style=&#34;color:#75715e&#34;&gt;## Make sure you get any updates from repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remove long term storage refrences&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/storage:/,/vault:/{/storage:/!{/vault:/!d}}&amp;#39;&lt;/span&gt; jx-requirements.yml 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/storage:/d&amp;#39;&lt;/span&gt; jx-requirements.yml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remove staging and prod links&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/jx-staging/d&amp;#39;&lt;/span&gt; helmfile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/jx-production/d&amp;#39;&lt;/span&gt; helmfile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx gitops helmfile resolve
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chore: Remove staging and prod links&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;rebuild-infrastructure&#34;&gt;Rebuild Infrastructure&lt;/h3&gt;
&lt;p&gt;Commands to rebuild  infrastructure. Once again, make sure you have the same Terraform variables set found under &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/cluster-rebuild/#build-the-infrastucture-with-terraform&#34;&gt;Building the infrastructure with Terraform&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-terraform-gke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform apply -auto-approve
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;rebuild-helm-repo&#34;&gt;Rebuild Helm Repo&lt;/h3&gt;
&lt;p&gt;After Terraform creates the infrastruce, the cluster repo resources will be used to launch a new Kubernetes cluster. Once the boot process completes and is sucessful you can safely perform the following recovery commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Restore backup files to new helm repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make sure chartmuseum pod is running&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n jx --selector&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;chartmuseum 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# When chartmuseum pod is running it is then safe to proceed to the next steps.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in *; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; kubectl cp $i jx/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;kubectl get pods -n jx --selector&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;chartmuseum -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;:/storage/$i; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NOTE: You must wait until the chartmuseum is up and fully functioning. The chartmuseum pod can be running, but the best approach to determine if you can proceed is to access (successfully) the chartmuseum URL (i.e. &lt;a href=&#34;https://chartmuseum.web.jx3rocks.com&#34;&gt;https://chartmuseum.web.jx3rocks.com&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;rebuild-cluster-repo&#34;&gt;Rebuild Cluster Repo&lt;/h3&gt;
&lt;p&gt;Restore the jx-staging and jx-production links&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JX3HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/jx3-gke-gsm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull	&lt;span style=&#34;color:#75715e&#34;&gt;## Make sure to get latest updates to repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/helmfiles:/ a - path: helmfiles/jx-production/helmfile.yaml&amp;#39;&lt;/span&gt; helmfile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/helmfiles:/ a - path: helmfiles/jx-staging/helmfile.yaml&amp;#39;&lt;/span&gt; helmfile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chore: Restore staging and prod links&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;post-recovery-troubleshooting&#34;&gt;Post Recovery Troubleshooting&lt;/h3&gt;
&lt;p&gt;Sometimes you will need to do some post recovery steps to bring your environment online. Below is a real life example of steps taken after cluster returned back online and needed some adjustments.&lt;/p&gt;
&lt;p&gt;Reviewing the applications notice that &amp;rsquo;node-http04&amp;rsquo; in staging does not show pods and is not accessible.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APPLICATION STAGING PODS URL                                     PRODUCTION PODS URL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http02 0.1.0   1/1  http://node-http02-stg.tri.jx3rocks.com 0.1.0      1/1  https://node-http02.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http03 0.0.1   1/1  http://node-http03-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http03.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http04 0.0.1        http://node-http04-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http04.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http05 0.0.1   1/1  http://node-http05-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http05.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check to see if the host entry resolves&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping http://node-http04-stg.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping: http://node-http04-stg.tri.jx3rocks.com: Name or service not known
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check to see if DNS record set exists&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud dns record-sets list --zone&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ZONEIDSUB&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --project &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECTID&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; --filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TYPE=A OR TYPE=TXT&amp;#34;&lt;/span&gt; --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;table[no-heading](NAME,TYPE,TTL,DATA)&amp;#39;&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print &amp;#34; --name=&amp;#34; $1 &amp;#34; --type=&amp;#34; $2 &amp;#34; --ttl=&amp;#34; $3 &amp;#34; &amp;#34; $4 }&amp;#39;&lt;/span&gt; | grep -- node-http04-stg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;node-http04-stg.tri.jx3rocks.com. --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;A --ttl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt; 35.231.47.50
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;node-http04-stg.tri.jx3rocks.com. --type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;TXT --ttl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;heritage=external-dns,external-dns/owner=default,external-dns/resource=ingress/jx-staging/node-http04&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check pod status&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n jx-staging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                       READY   STATUS             RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx-verify-gc-jobs-8gb9h                    0/1     Completed          &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http02-node-http02-749d864b58-m5mvk   1/1     Running            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http03-node-http03-59f5f89f4-mq86h    1/1     Running            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http04-node-http04-56f5f757c4-75rhb   0/1     ImagePullBackOff   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http04-node-http04-b74787f78-jcd2c    0/1     ImagePullBackOff   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http05-node-http05-5d6ccf954-g9lrj    1/1     Running            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http05-node-http05-7bc47d4f74-6rs9f   0/1     ImagePullBackOff   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          32m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl logs -f node-http04-node-http04-56f5f757c4-75rhb -n jx-staging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Error from server &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;BadRequest&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: container &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node-http04&amp;#34;&lt;/span&gt; in pod &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node-http04-node-http04-56f5f757c4-75rhb&amp;#34;&lt;/span&gt; is waiting to start: trying and failing to pull image
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Try restarting the 3 pods with the ImagePullBackOff (not running) status.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delete pods --field-selector&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;status.phase!&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Running -n jx-staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Final check running applications&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APPLICATION STAGING PODS URL                                     PRODUCTION PODS URL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http02 0.1.0   1/1  http://node-http02-stg.tri.jx3rocks.com 0.1.0      1/1  https://node-http02.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http03 0.0.1   1/1  http://node-http03-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http03.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http04 0.0.1   1/1  http://node-http04-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http04.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node-http05 0.0.1   1/1  http://node-http05-stg.tri.jx3rocks.com 0.0.1      1/1  https://node-http05.tri.jx3rocks.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cluster-rebuilt&#34;&gt;Cluster Rebuilt&lt;/h3&gt;
&lt;p&gt;Following the completion of the previous commands the cluster has now been returned to it&amp;rsquo;s previous state and should be fully functioning.  If you wish to repeat the rebuild process start from the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/cluster-rebuild/#prepare-for-outtage&#34;&gt;Prepare for outtage&lt;/a&gt; step.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
