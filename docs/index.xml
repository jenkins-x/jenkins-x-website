<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – </title>
    <link>https://jenkins-x.io/docs/</link>
    <description>Recent content on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Introduction</title>
      <link>https://jenkins-x.io/docs/resources/guides/mlops/introduction/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/mlops/introduction/</guid>
      <description>
        
        
        &lt;h2 id=&#34;understanding-mlops&#34;&gt;Understanding MLOps&lt;/h2&gt;
&lt;p&gt;When we talk about MLOps, what we are referring to is best defined as the extension of the DevOps methodology to include Machine Learning and Data Science assets as first class citizens within the best known methods of DevOps. The aim is to demystify Machine Learning and re-integrate the delivery of technology solutions as a seamless process of product development and deployment.&lt;/p&gt;
&lt;p&gt;The Continuous Delivery Foundation hosts a collaborative Roadmap for MLOps and Jenkins X is committed to implementing features aligned to that model.&lt;/p&gt;
&lt;p&gt;Software systems including Machine Learning components tend to be decision-making systems rather than just data processing systems and thus are required to be held accountable to much higher standards than most conventional software projects. As a result, it is especially important that release processes associated with these solutions meet the highest levels of quality.&lt;/p&gt;
&lt;p&gt;Machine Learning project teams are however often a relatively new addition to many organisations and are sometimes lacking in experience when it comes to delivering solutions into production. MLOps is an approach designed to help bridge the gap between where teams find themselves today and where they need to reach in terms of quality and maturity.&lt;/p&gt;
&lt;p&gt;Organisations pursuing the development of ML products need to be able to manage cost and time to market by optimising the process of taking ML features into production, reducing Lead Time and shortening the feedback loop between production and development for ML assets.&lt;/p&gt;
&lt;p&gt;With Jenkins X, we unify the release cycle for ML and conventional software assets, allowing you to manage your whole solution as part of one standard release process. By doing this, you are able to apply conventional automated testing approaches to your ML assets as well as the rest of your codebase, extending security checks, static analysis, dynamic analysis, dependency scanning and integrity checking to your entire application stack.&lt;/p&gt;
&lt;p&gt;MLOps is a framework-agnostic methodology and Jenkins X supports the deployment of ML assets based upon a wide range of different ML frameworks and libraries. We currently support training and deployment of models using both CPU and GPU, across a range of Cloud infrastructure, or in-house.&lt;/p&gt;
&lt;p&gt;The use of MLOps should teach best known methods of applying MLOps. It should be recognised that many customers will be experts in the field of Data Science but may have had relatively little exposure to DevOps or other SDLC principles. To minimise this learning curve, the MLOps features of Jenkins X provide defaults aligned to best practice in production environments, reducing the amount of effort necessary to get working solutions into production reliably.&lt;/p&gt;
&lt;h2 id=&#34;what-about-my-jupyter-notebooks&#34;&gt;What about my Jupyter Notebooks?&lt;/h2&gt;
&lt;p&gt;It is common to teach the basics of Machine Learning using convenient scratchpad environments such as Jupyter Notebooks that facilitate casual experimentation and ease of learning. Such courses rarely however progress on to teaching more advanced topics regarding the challenges of managing real-life software assets in mission-critical situations. This leaves a significant knowledge gap across data science teams that must be filled before products can be safely delivered to customers.&lt;/p&gt;
&lt;p&gt;Jenkins X seeks to minimise the pain of moving teams beyond the &amp;rsquo;training-wheels&amp;rsquo; environment of scratch-built models, scripted ad-hoc on uncontrolled laptops.&lt;/p&gt;
&lt;p&gt;By providing a consistent, logical and familiar approach to managing all your project assets to the highest standards, it becomes simple to train teams to work collaboratively and effectively at pace.&lt;/p&gt;
&lt;p&gt;Simple &amp;lsquo;quickstarts&amp;rsquo; allow teams to create working example projects based upon best practice for managing critical IP that can be extended incrementally to deliver desired funtionality in a safe and friendly manner without relying upon everyone involved having in-depth knowledge of all the aspects of a robust software development lifecycle.&lt;/p&gt;
&lt;p&gt;When using MLOps features within Jenkins X, ML assets are automatically managed under version control and audit trails maintained such that it is always possible to understand which version of which data set, training script, model or service is deployed in any given production environment and to quickly revert or upgrade to specific versions of assets in the event of a problem.&lt;/p&gt;
&lt;p&gt;Jenkins X makes it easy to wrap model instances in service implementations so that they can be securely and robustly deployed into application solutions in a way that is resilient and scalable.&lt;/p&gt;
&lt;p&gt;Built-in release governance processes ensure that all ML assets pass through the same rigourous automated testing and QA processes normally applied to conventional software components, ensuring that you never have to worry about someone&amp;rsquo;s uncontrolled Jupyter Notebook making it into a customer-facing environment.&lt;/p&gt;
&lt;h2 id=&#34;breaking-down-the-new-wall&#34;&gt;Breaking down the New Wall&lt;/h2&gt;
&lt;p&gt;The success of DevOps as an approach is in large part due to the way in which it tore down the wall between software development teams designing new products and operational staff trying to own and run them cost-effectively and safely. Teaching developers to have responsibility for operational concerns and helping operational staff to communicate their requirements to development teams has been instrumental in reducing the time to market for new products.&lt;/p&gt;
&lt;p&gt;The introduction of Machine Learning capabilities through dedicated Data Science teams has created a new silo, a new wall to throw things over and a fresh chorus of &amp;ldquo;Well, it worked on my laptop!&amp;rdquo; in engineering departments worldwide.&lt;/p&gt;
&lt;p&gt;MLOps tears down this new wall to blur the line between Data Scientists, Software Developers, Operational teams and Product Owners, making it faster, safer and cheaper to get AI-driven ideas into the marketplace.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Introduction</title>
      <link>https://jenkins-x.io/v3/mlops/introduction/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/mlops/introduction/</guid>
      <description>
        
        
        &lt;h2 id=&#34;understanding-mlops&#34;&gt;Understanding MLOps&lt;/h2&gt;
&lt;p&gt;When we talk about MLOps, what we are referring to is best defined as the extension of the DevOps methodology to include Machine Learning and Data Science assets as first class citizens within the best known methods of DevOps. The aim is to demystify Machine Learning and re-integrate the delivery of technology solutions as a seamless process of product development and deployment.&lt;/p&gt;
&lt;p&gt;The Continuous Delivery Foundation hosts a collaborative Roadmap for MLOps and Jenkins X is committed to implementing features aligned to that model.&lt;/p&gt;
&lt;p&gt;Software systems including Machine Learning components tend to be decision-making systems rather than just data processing systems and thus are required to be held accountable to much higher standards than most conventional software projects. As a result, it is especially important that release processes associated with these solutions meet the highest levels of quality.&lt;/p&gt;
&lt;p&gt;Machine Learning project teams are however often a relatively new addition to many organisations and are sometimes lacking in experience when it comes to delivering solutions into production. MLOps is an approach designed to help bridge the gap between where teams find themselves today and where they need to reach in terms of quality and maturity.&lt;/p&gt;
&lt;p&gt;Organisations pursuing the development of ML products need to be able to manage cost and time to market by optimising the process of taking ML features into production, reducing Lead Time and shortening the feedback loop between production and development for ML assets.&lt;/p&gt;
&lt;p&gt;With Jenkins X, we unify the release cycle for ML and conventional software assets, allowing you to manage your whole solution as part of one standard release process. By doing this, you are able to apply conventional automated testing approaches to your ML assets as well as the rest of your codebase, extending security checks, static analysis, dynamic analysis, dependency scanning and integrity checking to your entire application stack.&lt;/p&gt;
&lt;p&gt;MLOps is a framework-agnostic methodology and Jenkins X supports the deployment of ML assets based upon a wide range of different ML frameworks and libraries. We currently support training and deployment of models using both CPU and GPU, across a range of Cloud infrastructure, or in-house.&lt;/p&gt;
&lt;p&gt;The use of MLOps should teach best known methods of applying MLOps. It should be recognised that many customers will be experts in the field of Data Science but may have had relatively little exposure to DevOps or other SDLC principles. To minimise this learning curve, the MLOps features of Jenkins X provide defaults aligned to best practice in production environments, reducing the amount of effort necessary to get working solutions into production reliably.&lt;/p&gt;
&lt;h2 id=&#34;what-about-my-jupyter-notebooks&#34;&gt;What about my Jupyter Notebooks?&lt;/h2&gt;
&lt;p&gt;It is common to teach the basics of Machine Learning using convenient scratchpad environments such as Jupyter Notebooks that facilitate casual experimentation and ease of learning. Such courses rarely however progress on to teaching more advanced topics regarding the challenges of managing real-life software assets in mission-critical situations. This leaves a significant knowledge gap across data science teams that must be filled before products can be safely delivered to customers.&lt;/p&gt;
&lt;p&gt;Jenkins X seeks to minimise the pain of moving teams beyond the &amp;rsquo;training-wheels&amp;rsquo; environment of scratch-built models, scripted ad-hoc on uncontrolled laptops.&lt;/p&gt;
&lt;p&gt;By providing a consistent, logical and familiar approach to managing all your project assets to the highest standards, it becomes simple to train teams to work collaboratively and effectively at pace.&lt;/p&gt;
&lt;p&gt;Simple &amp;lsquo;quickstarts&amp;rsquo; allow teams to create working example projects based upon best practice for managing critical IP that can be extended incrementally to deliver desired funtionality in a safe and friendly manner without relying upon everyone involved having in-depth knowledge of all the aspects of a robust software development lifecycle.&lt;/p&gt;
&lt;p&gt;When using MLOps features within Jenkins X, ML assets are automatically managed under version control and audit trails maintained such that it is always possible to understand which version of which data set, training script, model or service is deployed in any given production environment and to quickly revert or upgrade to specific versions of assets in the event of a problem.&lt;/p&gt;
&lt;p&gt;Jenkins X makes it easy to wrap model instances in service implementations so that they can be securely and robustly deployed into application solutions in a way that is resilient and scalable.&lt;/p&gt;
&lt;p&gt;Built-in release governance processes ensure that all ML assets pass through the same rigourous automated testing and QA processes normally applied to conventional software components, ensuring that you never have to worry about someone&amp;rsquo;s uncontrolled Jupyter Notebook making it into a customer-facing environment.&lt;/p&gt;
&lt;h2 id=&#34;breaking-down-the-new-wall&#34;&gt;Breaking down the New Wall&lt;/h2&gt;
&lt;p&gt;The success of DevOps as an approach is in large part due to the way in which it tore down the wall between software development teams designing new products and operational staff trying to own and run them cost-effectively and safely. Teaching developers to have responsibility for operational concerns and helping operational staff to communicate their requirements to development teams has been instrumental in reducing the time to market for new products.&lt;/p&gt;
&lt;p&gt;The introduction of Machine Learning capabilities through dedicated Data Science teams has created a new silo, a new wall to throw things over and a fresh chorus of &amp;ldquo;Well, it worked on my laptop!&amp;rdquo; in engineering departments worldwide.&lt;/p&gt;
&lt;p&gt;MLOps tears down this new wall to blur the line between Data Scientists, Software Developers, Operational teams and Product Owners, making it faster, safer and cheaper to get AI-driven ideas into the marketplace.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Creating Jenkins X Pipelines from scratch</title>
      <link>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/newpipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/newpipeline/</guid>
      <description>
        
        
        &lt;p&gt;If you’re starting out with a blank canvas, it’s still a good idea to have a look at the &lt;a href=&#34;https://github.com/jenkins-x-quickstarts&#34;&gt;quickstart templates&lt;/a&gt; to get inspiration for creating a pipeline with proper syntax and structure.&lt;/p&gt;
&lt;p&gt;You can copy the basic structure over from an existing file, or copy from here, but at the very minimum you need to define two pipelines, pullRequest and Release, which will encompass the more detailed stages and steps:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;buildPack&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;none&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pipelineConfig&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;pipelines&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;pullRequest&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the &lt;code&gt;pullRequest&lt;/code&gt; pipeline you define the stages and steps that Jenkins X will execute for each pull request, and &lt;code&gt;Release&lt;/code&gt; is the same, just for what should happen to create the final product (whether a k8s app, docker image, static website, etc.)&lt;/p&gt;
&lt;p&gt;You can also specify a &lt;code&gt;feature&lt;/code&gt; pipeline, for processing merges to a feature branch. However, note that the &lt;a href=&#34;https://jenkins-x.io/about/overview/accelerate/&#34;&gt;Accelerate book&lt;/a&gt; recommends against long term feature branches. Instead, consider using trunk based development which is a practice of high performing teams.&lt;/p&gt;
&lt;p&gt;Each pipeline will have an &lt;code&gt;agent&lt;/code&gt; defined (usually Kaniko for building docker images) and at least one &lt;code&gt;stage&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Within each stage you’ll define the steps, which can generally be anything you can call on a command line or execute via a docker container. &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#configuration-for-steps&#34;&gt;Configuration for steps&lt;/a&gt; lists the various parameters you can use in a step.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Pipeline Environment Variables</title>
      <link>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/envvars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/envvars/</guid>
      <description>
        
        
        &lt;p&gt;There are variables that are available by default, and there are those that you can define yourself.&lt;/p&gt;
&lt;h2 id=&#34;default-environment-variables&#34;&gt;Default environment variables&lt;/h2&gt;
&lt;p&gt;The following environment variables are available for use in a step in Jenkins X Pipelines:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DOCKER_REGISTRY&lt;/td&gt;
&lt;td&gt;the docker registry host (e.g. &lt;code&gt;docker.io&lt;/code&gt; or &lt;code&gt;gcr.io&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUILD_NUMBER&lt;/td&gt;
&lt;td&gt;the build number (1, 2, 3) starts at &lt;code&gt;1&lt;/code&gt; for each repo and branch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PIPELINE_KIND&lt;/td&gt;
&lt;td&gt;the kind of pipeline such as &lt;code&gt;release&lt;/code&gt; or &lt;code&gt;pullrequest&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PIPELINE_CONTEXT&lt;/td&gt;
&lt;td&gt;the pipeline context if there are multiple pipelines per PR (for different tests/governance/lint etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REPO_OWNER&lt;/td&gt;
&lt;td&gt;the git repository owner&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REPO_NAME&lt;/td&gt;
&lt;td&gt;the git repository name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB_NAME&lt;/td&gt;
&lt;td&gt;the job name which typically looks like &lt;code&gt;$REPO_OWNER/$REPO_NAME/$BRANCH_NAME&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;APP_NAME&lt;/td&gt;
&lt;td&gt;the name of the app which typically is the &lt;code&gt;$REPO_NAME&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BRANCH_NAME&lt;/td&gt;
&lt;td&gt;the name of the branch such as &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;PR-123&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JX_BATCH_MODE&lt;/td&gt;
&lt;td&gt;indicates to jx to use batch mode if &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VERSION&lt;/td&gt;
&lt;td&gt;contains the version number being released or the PR&amp;rsquo;s preview version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUILD_ID&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;$BUILD_NUMBER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB_TYPE&lt;/td&gt;
&lt;td&gt;the prow job type such as &lt;code&gt;presubmit&lt;/code&gt; for PR or &lt;code&gt;postsubmit&lt;/code&gt; for release&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_BASE_REF&lt;/td&gt;
&lt;td&gt;the branch/ref of git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_BASE_SHA&lt;/td&gt;
&lt;td&gt;the git SHA being built&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_NUMBER&lt;/td&gt;
&lt;td&gt;for PRs this will be the number without the &lt;code&gt;PR-&lt;/code&gt; prefix&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_REFS&lt;/td&gt;
&lt;td&gt;for batch merging all the git refs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;version&#34;&gt;${VERSION}&lt;/h3&gt;
&lt;p&gt;This particular variable is populated by Jenkins X when running pipelines. You can use this to tag docker images or anything else where you need a version number for the application you’re building.&lt;/p&gt;
&lt;p&gt;For Release pipelines, Jenkins X will look up the latest Git tag and use that as a basis for the value, increment it and create a new tag. For example, if your latest tag is &lt;code&gt;1.3.34&lt;/code&gt;, Jenkins X will populate &lt;code&gt;${VERSION}&lt;/code&gt; with &lt;code&gt;1.3.35&lt;/code&gt; and will tag the HEAD of the master branch with the same value. This all happens automatically, giving you a record of the last successful build of the master branch.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;pullRequest&lt;/code&gt; pipelines, the value is populated based on the version recorded in the GitOps repo for your application, and appended with &lt;code&gt;PR-&amp;lt;pull request number&amp;gt;-&amp;lt;build number&amp;gt;&lt;/code&gt; giving each build a pull request a unique version.&lt;/p&gt;
&lt;h4 id=&#34;triggering-a-major-or-minor-version-bump&#34;&gt;Triggering a major or minor version bump&lt;/h4&gt;
&lt;p&gt;When the version is bumped automatically, only the patch version is changed. To change the major or minor version, manually add a tag (e.g. 1.4.0) to your repo and Jenkins X will continue to increment from there (making the next application version 1.4.1 in the previous example).&lt;/p&gt;
&lt;h4 id=&#34;overriding-version&#34;&gt;Overriding ${VERSION}&lt;/h4&gt;
&lt;p&gt;For &lt;code&gt;pullRequest&lt;/code&gt; pipelines, the logic behind &lt;code&gt;${VERSION}&lt;/code&gt; cannot yet be overridden, but you could likely construct a version string out of the other variables mentioned above, if the default doesn’t serve your purpose.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;Release&lt;/code&gt; pipelines, you can override the default logic by adding a &lt;code&gt;setVersion&lt;/code&gt; declaration above the &lt;code&gt;pipeline&lt;/code&gt; keyword like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;setVersion&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;next-version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;sh&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jx step next-version --version $(cat HUGO_VERSION)-${BUILD_NUMBER} --tag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The example above uses a file with a version number to construct a specific version string where the unique part is the build number. The &lt;code&gt;--tag&lt;/code&gt; part makes Jenkins X also tag the repo with the generated string. In the example, we wanted to keep the official Hugo version and have a separate indicator for the build number, to avoid bumping the patch number and making our image seem ahead of the official Hugo version. The string generated ends up looking like &lt;code&gt;0.60.1-3&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;self-defined-variables&#34;&gt;Self defined variables&lt;/h2&gt;
&lt;p&gt;You can define your own environment variables either at the pipeline level:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PIPELINE_VAR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;A value for the pipeline variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;at a stage level:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;STAGE_VAR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;A value for the stage level variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or at a step level:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;STEP_VAR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;A value for the step level variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each level will add their variables to the variables defined in the level(s) above them, or potentially replace a variable if the same name is used.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Using Machine Learning Quickstarts</title>
      <link>https://jenkins-x.io/docs/resources/guides/mlops/mlquickstarting/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/mlops/mlquickstarting/</guid>
      <description>
        
        
        &lt;p&gt;The Jenkins X MLOps Quickstarts Library provides template projects to make it quick and easy to set up everything you need to get started with a building a new ML-based asset.&lt;/p&gt;
&lt;p&gt;Each quickstart project comprises two repositories, one which contains your training script and a second which takes the final model you have trained and wraps it as a RESTful service for deployment into your overall solution.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;You can create an instance of a project using the command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx create mlquickstart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and follow the instructions to select a template from the list.&lt;/p&gt;
&lt;p&gt;Once the quickstart process completes, you will find two new projects in your current folder, one with the suffix &lt;code&gt;-training&lt;/code&gt; and the other with the suffix &lt;code&gt;-service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The training project contains an example training script and some tests for the class of ML solution you selected. All the quickstarts are working examples, so you can see the solution in action and then start to modify it to meet your desired outcome.&lt;/p&gt;
&lt;p&gt;The service project is designed to take your model and make it easy to wrap it in a microservice so you can deploy it into your application. Notice that at this stage, there is no model in this service project because you haven&amp;rsquo;t trained it yet.&lt;/p&gt;
&lt;p&gt;If you check the Git account you used to create the quickstart project, you will see that the two folders have been created as repositories and linked to your Jenkins X cluster.&lt;/p&gt;
&lt;p&gt;Looking at your Jenkins X instance, you should be able to see that two builds have started for these projects. The service build will probably complete first, and it will create an instance of a new microservice in your staging environment, but this instance will fail to start and will end up in CrashLoopBackOff at this stage because it is waiting for the model to train.&lt;/p&gt;
&lt;p&gt;The second build is training an example model. When this completes successfully, it will persist the model in ONNX format and will make a Pull Request against your service project to add the model and the training metrics to your service. If you check the repository for the service, you should be able to see the open PR and can verify the files that have been added.&lt;/p&gt;
&lt;p&gt;At this stage, a preview environment will have been created for the service and you can verify its operation by connecting to it via a browser.&lt;/p&gt;
&lt;p&gt;Once you are happy with the model, merge the PR and the service will be redeployed into staging with the model you trained.&lt;/p&gt;
&lt;p&gt;You can watch this in action in the following video:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/AqL_ME7BM6U&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;customising-your-project&#34;&gt;Customising your project&lt;/h2&gt;
&lt;p&gt;Now you are ready to go back to the local copy of your training project and can start editing the training script to change the model.&lt;/p&gt;
&lt;p&gt;You will see that there are several steps annotated in the comments.&lt;/p&gt;
&lt;p&gt;The first step is where you define success criteria for your training. We only want to go to the effort of deploying an instance of our model if we consider it sufficiently accurate for our purposes so you should always create one or more metrics by which you will later judge whether your training run was successful.&lt;/p&gt;
&lt;p&gt;In the second step, we define the code to train your model. Feel free to change this to do what you want it to do.&lt;/p&gt;
&lt;p&gt;In the third step is where we evaluate the trained model we hold in memory against the criteria you specified earlier. You are free to modify this code in line with your desired metrics.&lt;/p&gt;
&lt;p&gt;Step four is only executed if your model passes the success threshold. If it does not, the training build is marked as &amp;lsquo;failed&amp;rsquo; and stops. Within this step, we convert the in-memory model into ONNX format and persist it temporarily to the local filesystem of the container in which the training build is running. We also write any metrics data and plots we wish to persist into a folder called &amp;lsquo;metrics&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The training script exits at this point, however the Jenkins X pipeline for the training build will take the ONNX model and anything you placed in the &amp;lsquo;metrics&amp;rsquo; folder and will create a PR against the service repo as shown earlier.&lt;/p&gt;
&lt;h2 id=&#34;starting-a-training-run&#34;&gt;Starting a training run&lt;/h2&gt;
&lt;p&gt;To trigger a training run after modifying the training script, you need to commit your changes to the remote repository associated with this project:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; git add app.py
&amp;gt; git commit -m &amp;#34;feat: Added new training feature...&amp;#34;
&amp;gt; git push
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will trigger Jenkins X to start a new training run which you can monitor via the UI or with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx get build logs
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;additional-training-runs&#34;&gt;Additional training runs&lt;/h2&gt;
&lt;p&gt;If you would like to trigger a training run to start again without modifying the script, perhaps because your initial run failed to meet your success criteria you can run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx start pipeline
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and select the name of the training project you would like to trigger.&lt;/p&gt;
&lt;h2 id=&#34;versioned-assets&#34;&gt;Versioned assets&lt;/h2&gt;
&lt;p&gt;Every successful model trained creates a new version of your microservice. This enables you to do things like promoting an initial version of a model to your staging environment so that others on the team can focus on integrating your ML component with the rest of the application whilst you test alternate versions of the model in your preview environment to optimise performance. Once you are happy with your optimised model, you can promote it for integration by merging the Pull Request.&lt;/p&gt;
&lt;p&gt;You can also use the git repository to go back to previous model instances in the event that you need to investigate any issues that might occur with deployed versions of earlier code. This gives you full traceability and an audit trail for your models.&lt;/p&gt;
&lt;p&gt;Should you need to revert a model from a staging or production environment, you can simply change the revision number of the service application in the GitOps repo for the target environment to the last known good instance and commit your changes. Jenkins X will then update your environment as necessary.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Using Machine Learning Quickstarts</title>
      <link>https://jenkins-x.io/v3/mlops/mlquickstarting/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/mlops/mlquickstarting/</guid>
      <description>
        
        
        &lt;p&gt;The Jenkins X MLOps Quickstarts Library provides template projects to make it quick and easy to set up everything you need to get started with a building a new ML-based asset.&lt;/p&gt;
&lt;p&gt;Each quickstart project comprises two repositories, one which contains your training script and a second which takes the final model you have trained and wraps it as a RESTful service for deployment into your overall solution.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;You can create an instance of a project using the command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx project mlquickstart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and follow the instructions to select a template from the list. You will need to specify which git account to use and a name for the project, which will become the prefix for the two git repositories that will be created for you.&lt;/p&gt;
&lt;p&gt;Once the quickstart process completes, you will find two new projects in your current folder, one with the suffix &lt;code&gt;-training&lt;/code&gt; and the other with the suffix &lt;code&gt;-service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The training project contains an example training script and some tests for the class of ML solution you selected. All the quickstarts are working examples, so you can see the solution in action and then start to modify it to meet your desired outcome.&lt;/p&gt;
&lt;p&gt;The service project is designed to take your model and make it easy to wrap it in a microservice so you can deploy it into your application. Notice that at this stage, there is no model in this service project because you haven&amp;rsquo;t trained it yet.&lt;/p&gt;
&lt;p&gt;If you check the Git account you used to create the quickstart project, you will see that the two folders have been created as repositories and linked to your Jenkins X cluster.&lt;/p&gt;
&lt;p&gt;Looking at your Jenkins X instance, you should be able to see that two builds have started for these projects. The service build will probably complete first, and it will create an instance of a new microservice in your staging environment, but this instance will fail to start and will end up in CrashLoopBackOff at this stage because it is waiting for the model to train.&lt;/p&gt;
&lt;p&gt;The second build is training an example model. When this completes successfully, it will persist the model in ONNX format and will make a Pull Request against your service project to add the model and the training metrics to your service. If you check the repository for the service, you should be able to see the open PR and can verify the files that have been added.&lt;/p&gt;
&lt;p&gt;At this stage, a preview environment will have been created for the service and you can verify its operation by connecting to it via a browser.&lt;/p&gt;
&lt;p&gt;Once you are happy with the model, merge the PR and the service will be redeployed into staging with the model you trained.&lt;/p&gt;
&lt;h2 id=&#34;customising-your-project&#34;&gt;Customising your project&lt;/h2&gt;
&lt;p&gt;Now you are ready to go back to the local copy of your training project and can start editing the training script to change the model.&lt;/p&gt;
&lt;p&gt;You will see that there are several steps annotated in the comments.&lt;/p&gt;
&lt;p&gt;The first step is where you define success criteria for your training. We only want to go to the effort of deploying an instance of our model if we consider it sufficiently accurate for our purposes so you should always create one or more metrics by which you will later judge whether your training run was successful.&lt;/p&gt;
&lt;p&gt;In the second step, we define the code to train your model. Feel free to change this to do what you want it to do.&lt;/p&gt;
&lt;p&gt;In the third step is where we evaluate the trained model we hold in memory against the criteria you specified earlier. You are free to modify this code in line with your desired metrics.&lt;/p&gt;
&lt;p&gt;Step four is only executed if your model passes the success threshold. If it does not, the training build is marked as &amp;lsquo;failed&amp;rsquo; and stops. Within this step, we convert the in-memory model into ONNX format and persist it temporarily to the local filesystem of the container in which the training build is running. We also write any metrics data and plots we wish to persist into a folder called &amp;lsquo;metrics&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;The training script exits at this point, however the Jenkins X pipeline for the training build will take the ONNX model and anything you placed in the &amp;lsquo;metrics&amp;rsquo; folder and will create a PR against the service repo as shown earlier.&lt;/p&gt;
&lt;h2 id=&#34;starting-a-training-run&#34;&gt;Starting a training run&lt;/h2&gt;
&lt;p&gt;To trigger a training run after modifying the training script, you need to commit your changes to the remote repository associated with this project:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; git add app.py
&amp;gt; git commit -m &amp;#34;feat: Added new training feature...&amp;#34;
&amp;gt; git push
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will trigger Jenkins X to start a new training run which you can monitor via the UI or with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx get build logs
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;additional-training-runs&#34;&gt;Additional training runs&lt;/h2&gt;
&lt;p&gt;If you would like to trigger a training run to start again without modifying the script, perhaps because your initial run failed to meet your success criteria you can run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx start pipeline --branch master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and select the name of the training project you would like to trigger.&lt;/p&gt;
&lt;h2 id=&#34;versioned-assets&#34;&gt;Versioned assets&lt;/h2&gt;
&lt;p&gt;Every successful model trained creates a new version of your microservice. This enables you to do things like promoting an initial version of a model to your staging environment so that others on the team can focus on integrating your ML component with the rest of the application whilst you test alternate versions of the model in your preview environment to optimise performance. Once you are happy with your optimised model, you can promote it for integration by merging the Pull Request.&lt;/p&gt;
&lt;p&gt;You can also use the git repository to go back to previous model instances in the event that you need to investigate any issues that might occur with deployed versions of earlier code. This gives you full traceability and an audit trail for your models.&lt;/p&gt;
&lt;p&gt;Should you need to revert a model from a staging or production environment, you can simply change the revision number of the service application in the GitOps repo for the target environment to the last known good instance and commit your changes. Jenkins X will then update your environment as necessary.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Custom images in steps</title>
      <link>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/customimages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/customimages/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X supports various types of Docker builder images, as long as the image is published in an accessible registry.&lt;/p&gt;
&lt;p&gt;One example is to re-use Google’s fairly small &lt;a href=&#34;https://github.com/GoogleCloudPlatform/cloud-builders&#34;&gt;cloud builder images&lt;/a&gt; to perform quick tasks:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         - &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gcr.io/cloud-builders/npm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;install-dependencies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;npm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;install&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or you can use your own published images like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gcr.io/jenkinsxio/hugo-extended:0.60.1-3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;build-website&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - -&lt;span style=&#34;color:#ae81ff&#34;&gt;d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#ae81ff&#34;&gt;tmp-website&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - --&lt;span style=&#34;color:#ae81ff&#34;&gt;enableGitInfo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - --&lt;span style=&#34;color:#ae81ff&#34;&gt;baseURL http://${APP_NAME}.jx-${REPO_OWNER}-${REPO_NAME}-pr-${PULL_NUMBER}.${DOMAIN}/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main requirement is that the image is available, either with or without authentication.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jenkins X Pipeline Syntax Reference</title>
      <link>https://jenkins-x.io/docs/reference/pipeline-syntax-reference/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/reference/pipeline-syntax-reference/</guid>
      <description>
        
        
        &lt;h1 id=&#34;syntax-for-jenkins-xyml-and-build-packs&#34;&gt;Syntax for &lt;code&gt;jenkins-x.yml&lt;/code&gt; and build packs&lt;/h1&gt;
&lt;h2 id=&#34;where-to-define-your-pipelines&#34;&gt;Where to Define Your Pipelines&lt;/h2&gt;
&lt;p&gt;Pipelines can either be defined in &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/&#34;&gt;build packs&lt;/a&gt;, used for
multiple projects, or in the &lt;code&gt;jenkins-x.yml&lt;/code&gt; file in a project&amp;rsquo;s repository.
When defining pipelines in a build pack, the top-level configuration below is
used directly, while in &lt;code&gt;jenkins-x.yml&lt;/code&gt;, the top-level configuration is under
the &lt;code&gt;pipelineConfig&lt;/code&gt; key.&lt;/p&gt;
&lt;h2 id=&#34;top-level-configuration&#34;&gt;Top-Level Configuration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;extends&#39;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A build pack can extend another build pack,
inheriting its configuration and contributing its own additional behavior.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;file&lt;/code&gt;&lt;/strong&gt; - The name of the build pack to inherit from.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;import&lt;/code&gt;&lt;/strong&gt; - If the build pack to inherit from is not in the same
repository as this build pack, specify where to import it from.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#agent&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A default agent configuration for all pipelines in the
build pack or project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#env&#34;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Environment variables to be made available for all
pipelines in the build pack or project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#containerOptions&#34;&gt;&lt;code&gt;containerOptions&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Default configuration for step
containers for all pipelines in the build pack or project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;pipelines&#39;&gt;&lt;code&gt;pipelines&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The pipeline definitions for this
build pack or project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;specifying-and-overriding-release-pull-request-and-feature-pipelines&#34;&gt;Specifying and Overriding Release, Pull Request, and Feature Pipelines&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;pullRequest-release-feature&#39;&gt;&lt;code&gt;pullRequest&lt;/code&gt;, &lt;code&gt;release&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; -
The configuration for the three pipeline types for this build pack or project.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;setup&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The first stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;setVersion&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The second stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;preBuild&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The third stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The fourth stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;postBuild&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The fifth stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#build-pack-stages&#34;&gt;&lt;code&gt;promote&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The sixth and final stage to run.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#defining-an-individual-pipeline&#34;&gt;&lt;code&gt;pipeline&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The full definition
of the pipeline. Mutually exclusive with &lt;code&gt;setup&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;overrides&#39;&gt;&lt;code&gt;overrides&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of overriding changes to make
to the inherited or default pipeline.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;pipeline&lt;/code&gt;&lt;/strong&gt; - The name of the pipeline this override should be applied
to (&lt;code&gt;release&lt;/code&gt;, &lt;code&gt;pullRequest&lt;/code&gt;, or &lt;code&gt;feature&lt;/code&gt;). If unspecified, this override
will be applied to all pipelines.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;stage&lt;/code&gt;&lt;/strong&gt; - The name of the stage this override should be applied to.
If unspecified, this override will be applied to all stages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; - The name of the step this override should be applied to. If
unspecified, this override will be applied to all steps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;step&lt;/code&gt;&lt;/strong&gt; - A single &lt;a href=&#34;#configuration-for-steps&#34;&gt;step&lt;/a&gt; which will be used
to override the named step or, if no step name is given, all steps in the
specified stage. If neither &lt;code&gt;step&lt;/code&gt; nor &lt;code&gt;steps&lt;/code&gt; is given, all steps in
matching stages in matching pipelines will be removed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;steps&lt;/code&gt;&lt;/strong&gt; - One or more &lt;a href=&#34;#configuration-for-steps&#34;&gt;steps&lt;/a&gt; which will be
used to override the named step or, if no name is given, all steps in the
specified stage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;type&lt;/code&gt;&lt;/strong&gt; - Whether the &lt;code&gt;step&lt;/code&gt; or &lt;code&gt;steps&lt;/code&gt; should replace the named step,
be prepended before the named step, or be appended after the named step.
Possible values are &lt;code&gt;replace&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, or &lt;code&gt;after&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#agent&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - An agent definition that will replace the
existing agent definition for matching pipelines and stages. Step agents
are not changed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;default&#39;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A full &lt;a href=&#34;#defining-an-individual-pipeline&#34;&gt;pipeline definition&lt;/a&gt;
that will be used for the &lt;code&gt;pullRequest&lt;/code&gt;, &lt;code&gt;release&lt;/code&gt;, and &lt;code&gt;feature&lt;/code&gt; pipelines if
they are not already specified.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;build-pack-stages&#34;&gt;Build pack stages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#configuration-for-steps&#34;&gt;&lt;code&gt;preSteps&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of steps to run before
the main body of steps for this stage. &lt;code&gt;preSteps&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; inherited from parent
build packs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#configuration-for-steps&#34;&gt;&lt;code&gt;steps&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The main body of steps to run for
this stage. If inheriting from a parent build pack, these steps will be appended
to the parent build pack&amp;rsquo;s &lt;code&gt;steps&lt;/code&gt; by default.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/strong&gt; - An optional boolean. If true, the inherited stage definition&amp;rsquo;s
&lt;code&gt;steps&lt;/code&gt; will be replaced, rather than appended to.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;defining-an-individual-pipeline&#34;&gt;Defining an Individual Pipeline&lt;/h2&gt;
&lt;h3 id=&#34;configuration-for-the-whole-pipeline&#34;&gt;Configuration for the Whole Pipeline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#agent&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A default agent definition to use for any
&lt;a href=&#34;#configuration-for-stages&#34;&gt;stages&lt;/a&gt; without their own agents specified.
Overrides &lt;a href=&#34;#top-level-configuration&#34;&gt;build pack or project&lt;/a&gt; agent definition.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#env&#34;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Environment variables set for the entire pipeline, which
can be overridden in individual stages and steps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;options&#39;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Additional configuration for the entire
pipeline.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;timeout&#39;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The maximum duration for execution
of the pipeline, after which the build will be terminated.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;time&lt;/code&gt;&lt;/strong&gt; - How long to wait until timing out the build.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/strong&gt; - The unit for &lt;code&gt;time&lt;/code&gt;. Can be any of &lt;code&gt;seconds&lt;/code&gt;, &lt;code&gt;minutes&lt;/code&gt;,
or &lt;code&gt;hours&lt;/code&gt;. Defaults to &lt;code&gt;seconds&lt;/code&gt; if unspecified.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#containerOptions&#34;&gt;&lt;code&gt;containerOptions&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Default configuration for
step containers within this pipeline, overriding any common settings with
&lt;a href=&#34;#top-level-configuration&#34;&gt;build pack or project&lt;/a&gt; default configuration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sidecars&lt;/code&gt;&lt;/strong&gt; - One or more &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers/&#34;&gt;Kubernetes containers&lt;/a&gt;
which will be added to every stage in the pipeline, to provide additional
features in the pods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;volumes&lt;/code&gt;&lt;/strong&gt; - One or more &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/volumes/&#34;&gt;Kubernetes volumes&lt;/a&gt;
which will be added to every stage in the pipeline, and can be mounted via
&lt;code&gt;containerOptions&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;dir&#39;&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Optional default working directory for stages and
steps in this pipeline. Can either be relative, under the &lt;code&gt;/workspace/source&lt;/code&gt;
directory were the project source will be checked out, or absolute.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;stages&#39;&gt;&lt;code&gt;stages&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of one or more &lt;a href=&#34;#configuration-for-stages&#34;&gt;stages&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configuration-for-stages&#34;&gt;Configuration for Stages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;name&#39;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The name of the stage. Required and must be
unique.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#agent&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The agent definition to use for this stage,
overriding the agent specified for &lt;a href=&#34;#configuration-for-the-whole-pipeline&#34;&gt;the whole pipeline&lt;/a&gt;
if one is specified.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;options&#39;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Additional configuration for the stage.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#containerOptions&#34;&gt;&lt;code&gt;containerOptions&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Default configuration for
step containers within this stage, overriding any common settings with
&lt;a href=&#34;#configuration-for-the-whole-pipeline&#34;&gt;the whole pipeline&lt;/a&gt; default
configuration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sidecars&lt;/code&gt;&lt;/strong&gt; - One or more &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers/&#34;&gt;Kubernetes containers&lt;/a&gt;
which will be added to this stage&amp;rsquo;s pod, to provide additional features.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;volumes&lt;/code&gt;&lt;/strong&gt; - One or more &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/volumes/&#34;&gt;Kubernetes volumes&lt;/a&gt;
which will be added to this stage&amp;rsquo;s pod, and can be mounted via &lt;code&gt;containerOptions&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#env&#34;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Environment variables set for all steps or nested stages,
overriding any variables defined for &lt;a href=&#34;#configuration-for-the-whole-pipeline&#34;&gt;the whole pipeline&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;nestedstages&#39;&gt;&lt;code&gt;stages&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of stages to run sequentially
within this stage, inheriting this stage&amp;rsquo;s configuration. Cannot be used with
either &lt;code&gt;steps&lt;/code&gt; or &lt;code&gt;parallel&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;parallel&#39;&gt;&lt;code&gt;parallel&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of stages to run in parallel,
inheriting this stage&amp;rsquo;s configuration. Cannot be used with either &lt;code&gt;steps&lt;/code&gt; or
&lt;code&gt;stages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;dir&#39;&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Optional default working directory for steps and
nested stages. Can either be relative under the &lt;code&gt;/workspace/source&lt;/code&gt; directory or
absolute.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#configuration-for-steps&#34;&gt;&lt;code&gt;steps&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A list of steps to run in this stage. Cannot be used
with either &lt;code&gt;stages&lt;/code&gt; or &lt;code&gt;parallel&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configuration-for-steps&#34;&gt;Configuration for Steps&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;name&#39;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - A name for the step, used in logging and for
overrides.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;command&#39;&gt;&lt;code&gt;command&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - The command to execute in this step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;args&#39;&gt;&lt;code&gt;args&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - An array of arguments to the command.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;dir&#39;&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Optional working directory for this step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#agent&#34;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Optional agent configuration for this step.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;loop&#39;&gt;&lt;code&gt;loop&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Repeats the nested &lt;a href=&#34;#configuration-for-steps&#34;&gt;&lt;code&gt;steps&lt;/code&gt;&lt;/a&gt;
for each value in the specified list.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/strong&gt; - The name of the environment variable to be set with the
value for this loop iteration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;values&lt;/code&gt;&lt;/strong&gt; - A list of strings to iterate over.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#configuration-for-steps&#34;&gt;&lt;code&gt;steps&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - One or more steps to run for
each iteration of the loop.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;#env&#34;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Environment variables set for this step, adding to
inherited environment variables from the stage and pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;common-directives&#34;&gt;Common Directives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;agent&#39;&gt;&lt;code&gt;agent&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - What container image should be used.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;image&lt;/code&gt;&lt;/strong&gt; - A container image, either as a fully qualified image or a
&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/pod-templates/&#34;&gt;pod template name&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;/strong&gt; - Only used with static Jenkins masters - the Jenkins agent
label to use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;env&#39;&gt;&lt;code&gt;env&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - One or more environment variables.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; - The name of the environment variable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;/strong&gt; - The value of the environment variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a id=&#39;containerOptions&#39;&gt;&lt;code&gt;containerOptions&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers&#34;&gt;Kubernetes container configuration&lt;/a&gt;.
&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;command&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, and &lt;code&gt;workingDir&lt;/code&gt; cannot be specified.&lt;/li&gt;
&lt;li&gt;Common use cases for &lt;code&gt;containerOptions&lt;/code&gt; include resource requests and
limits, and volume mounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;examples&#34;&gt;Examples&lt;/h1&gt;
&lt;h2 id=&#34;full-pipeline-definition-in-jenkins-xyml&#34;&gt;Full pipeline definition in &lt;code&gt;jenkins-x.yml&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If a build pack is specified, the `pipeline` in `release`, `pullRequest`, and `feature` will be ignored.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;buildPack&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;none&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pipelineConfig&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pipelines&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;release&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# While the legacy build pack built-in stages can be used in jenkins-x.yaml, pipeline is preferred.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Define a default container image we&amp;#39;ll use throughout the pipeline, unless an explicit agent is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# specified on a stage or step.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some/image@version&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# or &amp;#34;maven&amp;#34; - this means &amp;#34;use the maven pod template&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Environment variables are either static key/value pairs or Kubernetes valueFrom EnvVarSources.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#envvarsource-v1-core&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# for more information on valueFrom.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Environment variables defined at the top level can be overridden in stages and individual&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# steps.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;SOME_VAR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;A value for the env var&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;SOME_OTHER_VAR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Another var&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;SOME_API_KEY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;valueFrom&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;secretKeyRef&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mysecret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;apikey&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Options contains other configuration for the pipeline.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;options&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# containerOptions allows specifying more advanced default configuration for the containers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# used for all stages and steps in this scope, using the standard Kubernetes syntax for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# containers.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#container-v1-core.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# Not all fields can be configured - e.g., name, command, arguments, image, and dir are all&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# defined via the syntax - but everything else can be.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# Like with environment variables, containerOptions at the top level can be overridden and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# added to by stages.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;containerOptions&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Here we&amp;#39;re setting the resource requests and limits for all step containers within this&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# pipeline.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;requests&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;64Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;limits&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;128Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# timeout allows you to set the maximum duration for builds of this pipeline.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;timeout&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;time&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;unit&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;minutes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# A pipeline must contain at least one stage, and each stage must have a unique name.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Stage With Steps And Options Etc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# agent, options, and environment are valid on stages as well. For the parents of nested&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# sequential or parallel stages, their children inherit the parent&amp;#39;s agent, options,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# and environment.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# options on a stage currently only can contain containerOptions.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;options&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;containerOptions&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;limits&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;256Mi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# A stage must contain at least one of &amp;#34;steps&amp;#34;, &amp;#34;stages&amp;#34;, or &amp;#34;parallel&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Steps must contain at least one command to be executed or a loop.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              - &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mvn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# args are a YAML array, so can be specified either on multiple lines or in a []&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;clean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;foo &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Optional, allows running this step in a subdirectory of the workspace, or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;# a different absolute directory.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# Steps can have their own images specified, overriding the stage and top-level images.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;some-other-image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;# A loop allows you to specify a list of potential values for an environment variable and a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;# set of one or more steps. Those steps will be run, sequentially, for each of the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;# potential values. Loops can also be nested for more complex combinations.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              - &lt;span style=&#34;color:#f92672&#34;&gt;loop&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;variable&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;LANGUAGE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;maven&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;gradle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;nodejs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;args&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        - &lt;span style=&#34;color:#ae81ff&#34;&gt;hello&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        - &lt;span style=&#34;color:#ae81ff&#34;&gt;${LANGUAGE}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Stage with nested sequential stages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Any configuration of agent, options, or environment will apply to all child stages.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;SPECIFIC_TO_SEQUENTIAL_PARENT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;something&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# A list of nested stages to run sequentially. This is meant to allow for avoiding&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# copy-pasting configuration across a set of stages that need to have the same configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# but where that configuration shouldn&amp;#39;t be in place for *all* stages in the pipeline.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;# ...insert stages here. =)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Stage with nested parallel stages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Works very similarly to sequential stages, except that the stages are executed in parallel,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# rather than sequentially.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;parallel&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;# ...insert stages here. =)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Configuration Reference</title>
      <link>https://jenkins-x.io/docs/reference/config/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/reference/config/config/</guid>
      <description>
        
        
        &lt;p&gt;Packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#config.jenkins.io%2fv1&#34;&gt;config.jenkins.io/v1&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;config.jenkins.io/v1&#34;&gt;config.jenkins.io/v1&lt;/h2&gt;
&lt;p&gt;
&lt;p&gt;Package v1 is the v1 version of the API.&lt;/p&gt;
&lt;/p&gt;
Resource Types:
&lt;ul&gt;&lt;li&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ProjectConfig defines Jenkins X Pipelines usually stored inside the &lt;code&gt;jenkins-x.yml&lt;/code&gt; file in projects&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
config.jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ProjectConfig&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;List of global environment variables to add to each branch build and each step&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;previewEnvironments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PreviewEnvironmentConfig&#34;&gt;
PreviewEnvironmentConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;issueTracker&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.IssueTrackerConfig&#34;&gt;
IssueTrackerConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;chat&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChatConfig&#34;&gt;
ChatConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;wiki&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.WikiConfig&#34;&gt;
WikiConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;addons&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/pkg/config.AddonConfig&#34;&gt;
[]*github.com/jenkins-x/jx/pkg/config.AddonConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPack&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackGitURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackGitRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineConfig&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineConfig&#34;&gt;
PipelineConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;noReleasePrepare&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dockerRegistryHost&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dockerRegistryOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AddonConfig&#34;&gt;AddonConfig
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsService&#34;&gt;AdminSecretsService&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;JXBasicAuth&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;chartmuseum&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChartMuseum&#34;&gt;
ChartMuseum
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;grafana&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Grafana&#34;&gt;
Grafana
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;jenkins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Jenkins&#34;&gt;
Jenkins
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;nexus&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Nexus&#34;&gt;
Nexus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;PipelineSecrets&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineSecrets&#34;&gt;
PipelineSecrets
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;KanikoSecret&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.KanikoSecret&#34;&gt;
KanikoSecret
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AdminSecretsFlags&#34;&gt;AdminSecretsFlags
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsService&#34;&gt;AdminSecretsService&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DefaultAdminUsername&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DefaultAdminPassword&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;KanikoSecret&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AdminSecretsService&#34;&gt;AdminSecretsService
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;FileName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Secrets&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;
AdminSecretsConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Flags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsFlags&#34;&gt;
AdminSecretsFlags
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ingressAuth&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.BasicAuth&#34;&gt;
BasicAuth
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Agent&#34;&gt;Agent
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;ParsedPipeline&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.PipelineConfig&#34;&gt;PipelineConfig&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.PipelineOverride&#34;&gt;PipelineOverride&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;Stage&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Step&#34;&gt;Step&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Agent defines where the pipeline, stage, or step should run.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;One of label or image is required.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;image&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;container&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Legacy fields from jenkinsfile.PipelineAgent&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Application&#34;&gt;Application
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ApplicationConfig&#34;&gt;ApplicationConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Application is an application to install during boot&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name of the application / helm chart&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Repository the helm repository&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace to install the application into&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;phase&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Phase&#34;&gt;
Phase
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Phase of the pipeline to install application&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ApplicationConfig&#34;&gt;ApplicationConfig
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ApplicationConfig contains applications to install during boot&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;applications&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Application&#34;&gt;
[]Application
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Applications of applications&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;defaultNamespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DefaultNamespace the default namespace to install applications into&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AutoUpdateConfig&#34;&gt;AutoUpdateConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;AutoUpdateConfig contains auto update config&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Enabled autoupdate&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schedule&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Schedule cron of auto updates&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.AzureConfig&#34;&gt;AzureConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ClusterConfig&#34;&gt;ClusterConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;AzureConfig contains Azure specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;registrySubscription&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RegistrySubscription the registry subscription for defaulting the container registry.
Not used if you specify a Registry explicitly&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.BasicAuth&#34;&gt;BasicAuth
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsService&#34;&gt;AdminSecretsService&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BasicAuth keeps the credentials for basic authentication&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;username&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Username stores the basic authentication user name&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;password&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Password stores the basic authentication password&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.BuildPackConfig&#34;&gt;BuildPackConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BuildPackConfig contains build pack info&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackLibrary&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.BuildPackLibrary&#34;&gt;
BuildPackLibrary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Location contains location config&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.BuildPackLibrary&#34;&gt;BuildPackLibrary
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.BuildPackConfig&#34;&gt;BuildPackConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BuildPackLibrary contains buildpack location&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitURL&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitRef&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.CRDsFromPipelineParams&#34;&gt;CRDsFromPipelineParams
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;CRDsFromPipelineParams is how the parameters to GenerateCRDs are specified&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;PipelineIdentifier&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;BuildIdentifier&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;PodTemplates&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#*k8s.io/api/core/v1.pod--&#34;&gt;
map[string]*k8s.io/api/core/v1.Pod
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;VersionsDir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;TaskParams&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1.ParamSpec
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;SourceDir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Labels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DefaultImage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;InterpretMode&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ChartMuseum&#34;&gt;ChartMuseum
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChartMuseumEnv&#34;&gt;
ChartMuseumEnv
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ChartMuseumEnv&#34;&gt;ChartMuseumEnv
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChartMuseum&#34;&gt;ChartMuseum&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;secret&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChartMuseumSecret&#34;&gt;
ChartMuseumSecret
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ChartMuseumSecret&#34;&gt;ChartMuseumSecret
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ChartMuseumEnv&#34;&gt;ChartMuseumEnv&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;BASIC_AUTH_USER&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;BASIC_AUTH_PASS&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ChatConfig&#34;&gt;ChatConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;developerChannel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;userChannel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ClusterConfig&#34;&gt;ClusterConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ClusterConfig contains cluster specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;azure&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AzureConfig&#34;&gt;
AzureConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;AzureConfig the azure specific configuration&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;chartRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ChartRepository the repository URL to deploy charts to&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gke&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.GKEConfig&#34;&gt;
GKEConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GKEConfig the gke specific configuration&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environmentGitOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;EnvironmentGitOwner the default git owner for environment repositories if none is specified explicitly&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environmentGitPublic&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;EnvironmentGitPublic determines whether jx boot create public or private git repos for the environments&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitPublic&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitPublic determines whether jx boot create public or private git repos for the applications&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;provider&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Provider the kubernetes provider (e.g. gke)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace the namespace to install the dev environment&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;project&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProjectID the cloud project ID e.g. on GCP&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;clusterName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ClusterName the logical name of the cluster&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;vaultName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;VaultName the name of the vault if using vault for secrets
Deprecated&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;region&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Region the cloud region being used&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;zone&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Zone the cloud zone being used&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitName is the name of the default git service&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitKind is the kind of git server (github, bitbucketserver etc)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitServer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitServer is the URL of the git server&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalDNSSAName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ExternalDNSSAName the service account name for external dns&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;registry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Registry the host name of the container registry&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;vaultSAName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;VaultSAName the service account name for vault
Deprecated&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kanikoSAName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;KanikoSAName the service account name for kaniko&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;helmMajorVersion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;HelmMajorVersion contains the major helm version number. Assumes helm 2.x with no tiller if no value specified&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;devEnvApprovers&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DevEnvApprovers contains an optional list of approvers to populate the initial OWNERS file in the dev env repo&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dockerRegistryOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DockerRegistryOrg the default organisation used for container images&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;strictPermissions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;StrictPermissions lets you decide how to boot the cluster when it comes to permissions
If it&amp;rsquo;s false, cluster wide permissions will be used, normal, namespaced permissions will be used otherwise
and extra steps will be necessary to get the cluster working&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.CreateJenkinsfileArguments&#34;&gt;CreateJenkinsfileArguments
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;CreateJenkinsfileArguments contains the arguents to generate a Jenkinsfiles dynamically&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ConfigFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;TemplateFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;OutputFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;IsTekton&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ClearContainerNames&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.CreatePipelineArguments&#34;&gt;CreatePipelineArguments
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;CreatePipelineArguments contains the arguments to translate a build pack into a pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Lifecycles&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;
PipelineLifecycles
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;PodTemplates&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#*k8s.io/api/core/v1.pod--&#34;&gt;
map[string]*k8s.io/api/core/v1.Pod
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CustomImage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DefaultImage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;WorkspaceDir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitHost&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ProjectID&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DockerRegistry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DockerRegistryOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;KanikoImage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;UseKaniko&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;NoReleasePrepare&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;StepCounter&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.EnabledConfig&#34;&gt;EnabledConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnabledConfig to configure the feature on/off&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.EnvironmentConfig&#34;&gt;EnvironmentConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentConfig configures the organisation and repository name of the git repositories for environments&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;key&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Key is the key of the environment configuration&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;owner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Owner is the git user or organisation for the repository&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Repository is the name of the repository within the owner&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitServer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitServer is the URL of the git server&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitKind is the kind of git server (github, bitbucketserver etc)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ingress&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.IngressConfig&#34;&gt;
IngressConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Ingress contains ingress specific requirements&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;remoteCluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RemoteCluster specifies this environment runs on a remote cluster to the development cluster&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promotionStrategy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
github.com/jenkins-x/jx/v2/pkg/apis/jenkins.io/v1.PromotionStrategyType
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;PromotionStrategy what kind of promotion strategy to use&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;urlTemplate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URLTemplate is the template to use for your environment&amp;rsquo;s exposecontroller generated URLs&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ExposeController&#34;&gt;ExposeController
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.PreviewValuesConfig&#34;&gt;PreviewValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;config&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ExposeControllerConfig&#34;&gt;
ExposeControllerConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Annotations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;production&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ExposeControllerConfig&#34;&gt;ExposeControllerConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ExposeController&#34;&gt;ExposeController&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;domain&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;exposer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;http&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tlsacme&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pathMode&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;urltemplate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ingressClass&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tlsSecretName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.GKEConfig&#34;&gt;GKEConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ClusterConfig&#34;&gt;ClusterConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;GKEConfig contains GKE specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;projectNumber&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProjectNumber the unique project number GKE assigns to a project (required for workload identity).&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.GithubAppConfig&#34;&gt;GithubAppConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;GithubAppConfig contains github app config&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Enabled this determines whether this install should use the jenkins x github app for access tokens&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schedule&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Schedule cron of the github app token refresher&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL contains a URL to the github app&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Grafana&#34;&gt;Grafana
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;server&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.GrafanaSecret&#34;&gt;
GrafanaSecret
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.GrafanaSecret&#34;&gt;GrafanaSecret
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Grafana&#34;&gt;Grafana&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;adminUser&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;adminPassword&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfigService&#34;&gt;HelmValuesConfigService&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;expose&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ExposeController&#34;&gt;
ExposeController
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;jenkins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsValuesConfig&#34;&gt;
JenkinsValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;prow&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProwValuesConfig&#34;&gt;
ProwValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;PipelineSecrets&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsPipelineSecretsValuesConfig&#34;&gt;
JenkinsPipelineSecretsValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;controllerbuild&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.EnabledConfig&#34;&gt;
EnabledConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;controllerworkflow&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.EnabledConfig&#34;&gt;
EnabledConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;docker-registry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.EnabledConfig&#34;&gt;
EnabledConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dockerRegistry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.HelmValuesConfigService&#34;&gt;HelmValuesConfigService
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;FileName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Config&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;
HelmValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Image&#34;&gt;Image
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Preview&#34;&gt;Preview&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tag&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ImportFile&#34;&gt;ImportFile
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ImportFile represents an import of a file from a module (usually a version of a git repo)&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Import&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;File&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ImportFileResolver&#34;&gt;ImportFileResolver
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ImportFileResolver resolves a build pack file resolver strategy&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.IngressConfig&#34;&gt;IngressConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.EnvironmentConfig&#34;&gt;EnvironmentConfig&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;IngressConfig contains dns specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalDNS&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DNS is enabled&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cloud_dns_secret_name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;CloudDNSSecretName secret name which contains the service account for external-dns and cert-manager issuer to
access the Cloud DNS service to resolve a DNS challenge&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;domain&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Domain to expose ingress endpoints&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ignoreLoadBalancer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;IgnoreLoadBalancer if the nginx-controller LoadBalancer service should not be used to detect and update the
domain if you are using a dynamic domain resolver like &lt;code&gt;.nip.io&lt;/code&gt; rather than a real DNS configuration.
With this flag enabled the &lt;code&gt;Domain&lt;/code&gt; value will be used and never re-created based on the current LoadBalancer IP address.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;exposer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Exposer the exposer used to expose ingress endpoints. Defaults to &amp;ldquo;Ingress&amp;rdquo;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespaceSubDomain&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;NamespaceSubDomain the sub domain expression to expose ingress. Defaults to &amp;ldquo;.jx.&amp;rdquo;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tls&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.TLSConfig&#34;&gt;
TLSConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TLS enable automated TLS using certmanager&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;domainIssuerURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DomainIssuerURL contains a URL used to retrieve a Domain&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.IssueTrackerConfig&#34;&gt;IssueTrackerConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;project&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Jenkins&#34;&gt;Jenkins
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Master&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsAdminSecret&#34;&gt;
JenkinsAdminSecret
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsAdminSecret&#34;&gt;JenkinsAdminSecret
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Jenkins&#34;&gt;Jenkins&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;AdminPassword&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsGiteaServersValuesConfig&#34;&gt;JenkinsGiteaServersValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsServersValuesConfig&#34;&gt;JenkinsServersValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Credential&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsGithubServersValuesConfig&#34;&gt;JenkinsGithubServersValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsServersValuesConfig&#34;&gt;JenkinsServersValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsPipelineSecretsValuesConfig&#34;&gt;JenkinsPipelineSecretsValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DockerConfig,flow&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsServersGlobalConfig&#34;&gt;JenkinsServersGlobalConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsServersValuesConfig&#34;&gt;JenkinsServersValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;EnvVars&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsServersValuesConfig&#34;&gt;JenkinsServersValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsValuesConfig&#34;&gt;JenkinsValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Gitea&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsGiteaServersValuesConfig&#34;&gt;
[]JenkinsGiteaServersValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GHE&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsGithubServersValuesConfig&#34;&gt;
[]JenkinsGithubServersValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Global&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsServersGlobalConfig&#34;&gt;
JenkinsServersGlobalConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JenkinsValuesConfig&#34;&gt;JenkinsValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Servers&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.JenkinsServersValuesConfig&#34;&gt;
JenkinsServersValuesConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.JxInstallProfile&#34;&gt;JxInstallProfile
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;JxInstallProfile contains the jx profile info&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;InstallType&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.KanikoSecret&#34;&gt;KanikoSecret
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;KanikoSecret store the kaniko service account&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Data&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Loop&#34;&gt;Loop
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Step&#34;&gt;Step&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Loop is a special step that defines a variable, a list of possible values for that variable, and a set of steps to
repeat for each value for the variable, with the variable set with that value in the environment for the execution of
those steps.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;variable&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;The variable name.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;values&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;The list of values to iterate over&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Step&#34;&gt;
[]Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;The steps to run&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Module&#34;&gt;Module
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Module defines a dependent module for a build pack&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Modules&#34;&gt;Modules
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Modules defines the dependent modules for a build pack&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;modules&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/jenkinsfile.Module&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/jenkinsfile.Module
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.NamedLifecycle&#34;&gt;NamedLifecycle
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;NamedLifecycle a lifecycle and its name&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Lifecycle&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Nexus&#34;&gt;Nexus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;defaultAdminPassword&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ParsedPipeline&#34;&gt;ParsedPipeline
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;PipelineLifecycles&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Pipelines&#34;&gt;Pipelines&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ParsedPipeline is the internal representation of the Pipeline, used to validate and create CRDs&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Agent&#34;&gt;
Agent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;options&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RootOptions&#34;&gt;
RootOptions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stages&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;
[]Stage
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;post&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Post&#34;&gt;
[]Post
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replaced by Env, retained for backwards compatibility&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Phase&#34;&gt;Phase
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Application&#34;&gt;Application&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Phase of the pipeline to install application&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineConfig&#34;&gt;PipelineConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineConfig defines the pipeline configuration&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;extends&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineExtends&#34;&gt;
PipelineExtends
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Agent&#34;&gt;
Agent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelines&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Pipelines&#34;&gt;
Pipelines
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;containerOptions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#container-v1-core&#34;&gt;
Kubernetes core/v1.Container
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineExtends&#34;&gt;PipelineExtends
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineConfig&#34;&gt;PipelineConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineExtends defines the extension (e.g. parent pipeline which is overloaded&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;import&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;file&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineLifecycle&#34;&gt;PipelineLifecycle
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.NamedLifecycle&#34;&gt;NamedLifecycle&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;PipelineLifecycles&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Pipelines&#34;&gt;Pipelines&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineLifecycle defines the steps of a lifecycle section&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;preSteps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;PreSteps if using inheritance then invoke these steps before the base steps&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace if using inheritance then replace steps from the base pipeline&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineLifecycleArray&#34;&gt;PipelineLifecycleArray
(&lt;code&gt;[]github.com/jenkins-x/jx/v2/pkg/jenkinsfile.NamedLifecycle&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;PipelineLifecycleArray an array of named lifecycle pointers&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineLifecycles&#34;&gt;PipelineLifecycles
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.CreatePipelineArguments&#34;&gt;CreatePipelineArguments&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Pipelines&#34;&gt;Pipelines&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineLifecycles defines the steps of a lifecycle section&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;setup&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;setVersion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;preBuild&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;build&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postBuild&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promote&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;
ParsedPipeline
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineOverride&#34;&gt;PipelineOverride
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;PipelineOverride allows for overriding named steps, stages, or pipelines in the build pack or default pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;step&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Step&#34;&gt;
Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;type&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StepOverrideType&#34;&gt;
StepOverrideType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Agent&#34;&gt;
Agent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;containerOptions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#container-v1-core&#34;&gt;
Kubernetes core/v1.Container
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;volumes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#*k8s.io/api/core/v1.volume--&#34;&gt;
[]*k8s.io/api/core/v1.Volume
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PipelineSecrets&#34;&gt;PipelineSecrets
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AdminSecretsConfig&#34;&gt;AdminSecretsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;MavenSettingsXML&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Pipelines&#34;&gt;Pipelines
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineConfig&#34;&gt;PipelineConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Pipelines contains all the different kinds of pipeline for different branches&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequest&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;
PipelineLifecycles
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;release&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;
PipelineLifecycles
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;feature&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycles&#34;&gt;
PipelineLifecycles
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;post&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineLifecycle&#34;&gt;
PipelineLifecycle
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;overrides&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.PipelineOverride&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.PipelineOverride
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;default&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;
ParsedPipeline
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Post&#34;&gt;Post
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;ParsedPipeline&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;Stage&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Post contains a PostCondition and one more actions to be executed after a pipeline or stage if the condition is met.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;condition&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PostCondition&#34;&gt;
PostCondition
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TODO: Conditional execution of something after a Task or Pipeline completes is not yet implemented&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;actions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PostAction&#34;&gt;
[]PostAction
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PostAction&#34;&gt;PostAction
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Post&#34;&gt;Post&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PostAction contains the name of a built-in post action and options to pass to that action.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TODO: Notifications are not yet supported in Build Pipeline per se.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;options&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Also, we&amp;rsquo;ll need to do some magic to do type verification during translation - i.e., this action wants a number
for this option, so translate the string value for that option to a number.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PostCondition&#34;&gt;PostCondition
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Post&#34;&gt;Post&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PostCondition is used to specify under what condition a post action should be executed.&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Preview&#34;&gt;Preview
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PreviewValuesConfig&#34;&gt;PreviewValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;image&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Image&#34;&gt;
Image
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PreviewEnvironmentConfig&#34;&gt;PreviewEnvironmentConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;disabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;maximumInstances&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.PreviewValuesConfig&#34;&gt;PreviewValuesConfig
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;expose&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ExposeController&#34;&gt;
ExposeController
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;preview&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Preview&#34;&gt;
Preview
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.ProwValuesConfig&#34;&gt;ProwValuesConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.HelmValuesConfig&#34;&gt;HelmValuesConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;user&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;hmacToken&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;oauthToken&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.RepositoryType&#34;&gt;RepositoryType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;RepositoryType is the type of a repository we use to store artifacts (jars, tarballs, npm packages etc)&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsValues&#34;&gt;RequirementsValues&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;RequirementsConfig contains the logical installation requirements in the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file when
installing, configuring or upgrading Jenkins X via &lt;code&gt;jx boot&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;autoUpdate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.AutoUpdateConfig&#34;&gt;
AutoUpdateConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;AutoUpdate contains auto update config&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;bootConfigURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;BootConfigURL contains the url to which the dev environment is associated with&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPacks&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.BuildPackConfig&#34;&gt;
BuildPackConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;BuildPackConfig contains custom build pack settings&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ClusterConfig&#34;&gt;
ClusterConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Cluster contains cluster specific requirements&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.EnvironmentConfig&#34;&gt;
[]EnvironmentConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Environments the requirements for the environments&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;githubApp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.GithubAppConfig&#34;&gt;
GithubAppConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GithubApp contains github app config&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitops&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;GitOps if enabled we will setup a webhook in the boot configuration git repository so that we can
re-run &amp;lsquo;jx boot&amp;rsquo; when changes merge to the master branch&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;helmfile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Indicates if we are using helmfile and helm 3 to spin up environments. This is currently an experimental
feature flag used to implement better Multi-Cluster support. See &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6442&#34;&gt;https://github.com/jenkins-x/jx/issues/6442&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kaniko&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Kaniko whether to enable kaniko for building docker images&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ingress&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.IngressConfig&#34;&gt;
IngressConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Ingress contains ingress specific requirements&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RepositoryType&#34;&gt;
RepositoryType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Repository specifies what kind of artifact repository you wish to use for storing artifacts (jars, tarballs, npm modules etc)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;secretStorage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.SecretStorageType&#34;&gt;
SecretStorageType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SecretStorage how should we store secrets for the cluster&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;storage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageConfig&#34;&gt;
StorageConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Storage contains storage requirements&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;terraform&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Terraform specifies if  we are managing the kubernetes cluster and cloud resources with Terraform&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;vault&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VaultConfig&#34;&gt;
VaultConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Vault the configuration for vault&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;velero&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VeleroConfig&#34;&gt;
VeleroConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Velero the configuration for running velero for backing up the cluster resources&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;versionStream&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VersionStreamConfig&#34;&gt;
VersionStreamConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;VersionStream contains version stream info&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;webhook&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.WebhookType&#34;&gt;
WebhookType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Webhook specifies what engine we should use for webhooks&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.RequirementsValues&#34;&gt;RequirementsValues
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;RequirementsValues contains the logical installation requirements in the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file as helm values&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;jxRequirements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;
RequirementsConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RequirementsConfig contains the logical installation requirements&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.RootOptions&#34;&gt;RootOptions
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;ParsedPipeline&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.StageOptions&#34;&gt;StageOptions&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;RootOptions contains options that can be configured on either a pipeline or a stage&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;timeout&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Timeout&#34;&gt;
Timeout
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;retry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
byte
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;containerOptions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#container-v1-core&#34;&gt;
Kubernetes core/v1.Container
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ContainerOptions allows for advanced configuration of containers for a single stage or the whole
pipeline, adding to configuration that can be configured through the syntax already. This includes things
like CPU/RAM requests/limits, secrets, ports, etc. Some of these things will end up with native syntax approaches
down the road.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;volumes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#*k8s.io/api/core/v1.volume--&#34;&gt;
[]*k8s.io/api/core/v1.Volume
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;distributeParallelAcrossNodes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tolerations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#toleration-v1-core&#34;&gt;
[]Kubernetes core/v1.Toleration
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;podLabels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.SecretStorageType&#34;&gt;SecretStorageType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;SecretStorageType is the type of storage used for secrets&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Stage&#34;&gt;Stage
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ParsedPipeline&#34;&gt;ParsedPipeline&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;Stage&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Stage is a unit of work in a pipeline, corresponding either to a Task or a set of Tasks to be run sequentially or in
parallel with common configuration.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Agent&#34;&gt;
Agent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;options&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StageOptions&#34;&gt;
StageOptions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Step&#34;&gt;
[]Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stages&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;
[]Stage
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parallel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;
[]Stage
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;post&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Post&#34;&gt;
[]Post
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replaced by Env, retained for backwards compatibility&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.StageOptions&#34;&gt;StageOptions
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;Stage&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StageOptions contains both options that can be configured on either a pipeline or a stage, via
RootOptions, or stage-specific options.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;RootOptions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RootOptions&#34;&gt;
RootOptions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;RootOptions&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stash&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Stash&#34;&gt;
Stash
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TODO: Not yet implemented in build-pipeline&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;unstash&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Unstash&#34;&gt;
Unstash
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workspace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Stash&#34;&gt;Stash
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StageOptions&#34;&gt;StageOptions&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Stash defines files to be saved for use in a later stage, marked with a name&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;files&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Eventually make this optional so that you can do volumes instead&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Step&#34;&gt;Step
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Loop&#34;&gt;Loop&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.PipelineOverride&#34;&gt;PipelineOverride&lt;/a&gt;, 
&lt;a href=&#34;#config.jenkins.io/v1.Stage&#34;&gt;Stage&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Step defines a single step, from the author&amp;rsquo;s perspective, to be executed within a stage.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;An optional name to give the step for reporting purposes&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;One of command, step, or loop is required.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;args&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;args is optional, but only allowed with command&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;dir is optional, but only allowed with command. Refers to subdirectory of workspace&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;step&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;options&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;options is optional, but only allowed with step
Also, we&amp;rsquo;ll need to do some magic to do type verification during translation - i.e., this step wants a number
for this option, so translate the string value for that option to a number.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;loop&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Loop&#34;&gt;
Loop
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Agent&#34;&gt;
Agent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;agent can be overridden on a step&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;image&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Image alows the docker image for a step to be specified&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;env&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#envvar-v1-core&#34;&gt;
[]Kubernetes core/v1.EnvVar
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;env allows defining per-step environment variables&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;comment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Legacy fields from jenkinsfile.PipelineStep before it was eliminated.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;groovy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step&#34;&gt;
[]*github.com/jenkins-x/jx/v2/pkg/tekton/syntax.Step
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;when&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;container&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sh&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.StepOverrideType&#34;&gt;StepOverrideType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.PipelineOverride&#34;&gt;PipelineOverride&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StepOverrideType is used to specify whether the existing step should be replaced (default), new step(s) should be
prepended before the existing step, or new step(s) should be appended after the existing step.&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.StepPlaceholderReplacementArgs&#34;&gt;StepPlaceholderReplacementArgs
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;StepPlaceholderReplacementArgs specifies the arguments required for replacing placeholders in build pack directories.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;WorkspaceDir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;GitHost&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DockerRegistry&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DockerRegistryOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ProjectID&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;KanikoImage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;UseKaniko&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.StorageConfig&#34;&gt;StorageConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StorageConfig contains dns specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;logs&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageEntryConfig&#34;&gt;
StorageEntryConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Logs for storing build logs&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;reports&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageEntryConfig&#34;&gt;
StorageEntryConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Tests for storing test results, coverage + code quality reports&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageEntryConfig&#34;&gt;
StorageEntryConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Repository for storing repository artifacts&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;backup&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageEntryConfig&#34;&gt;
StorageEntryConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Backup for backing up kubernetes resource&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.StorageEntryConfig&#34;&gt;StorageEntryConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StorageConfig&#34;&gt;StorageConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StorageEntryConfig contains dns specific requirements for a kind of storage&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Enabled if the storage is enabled&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL the cloud storage bucket URL such as &amp;lsquo;gs://mybucket&amp;rsquo; or &amp;lsquo;s3://foo&amp;rsquo; or `azblob://thingy&amp;rsquo;
see &lt;a href=&#34;https://jenkins-x.io/architecture/storage/&#34;&gt;https://jenkins-x.io/architecture/storage/&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.TLSConfig&#34;&gt;TLSConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.IngressConfig&#34;&gt;IngressConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TLSConfig contains TLS specific requirements&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enabled&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TLS enabled&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;email&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Email address to register with services like LetsEncrypt&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;production&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Production false uses self-signed certificates from the LetsEncrypt staging server, true enables the production
server which incurs higher rate limiting &lt;a href=&#34;https://letsencrypt.org/docs/rate-limits/&#34;&gt;https://letsencrypt.org/docs/rate-limits/&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;secretName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SecretName the name of the secret which contains the TLS certificate&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Timeout&#34;&gt;Timeout
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RootOptions&#34;&gt;RootOptions&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Timeout defines how long a stage or pipeline can run before timing out.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;time&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int64
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;unit&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.TimeoutUnit&#34;&gt;
TimeoutUnit
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Has some sane default - probably seconds&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.TimeoutUnit&#34;&gt;TimeoutUnit
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.Timeout&#34;&gt;Timeout&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TimeoutUnit is used for calculating timeout duration&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.Unstash&#34;&gt;Unstash
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.StageOptions&#34;&gt;StageOptions&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Unstash defines a previously-defined stash to be copied into this stage&amp;rsquo;s workspace&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dir&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.VaultAWSConfig&#34;&gt;VaultAWSConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VaultConfig&#34;&gt;VaultConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;VaultAWSConfig contains all the Vault configuration needed by Vault to be deployed in AWS&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;VaultAWSUnsealConfig&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VaultAWSUnsealConfig&#34;&gt;
VaultAWSUnsealConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;autoCreate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dynamoDBTable&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dynamoDBRegion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;iamUserName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.VaultAWSUnsealConfig&#34;&gt;VaultAWSUnsealConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VaultAWSConfig&#34;&gt;VaultAWSConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;VaultAWSUnsealConfig contains references to existing AWS resources that can be used to install Vault&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kmsKeyId&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kmsRegion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;s3Bucket&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;s3Prefix&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;s3Region&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.VaultConfig&#34;&gt;VaultConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;VaultConfig contains Vault configuration for Boot&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name the name of the Vault if using Jenkins X managed Vault instance.
Cannot be used in conjunction with the URL attribute&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;bucket&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;recreateBucket&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;keyring&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;key&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;disableURLDiscovery&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DisableURLDiscovery allows us to optionally override the default lookup of the Vault URL, could be incluster service or external ingress&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;aws&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.VaultAWSConfig&#34;&gt;
VaultAWSConfig
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;AWSConfig describes the AWS specific configuration needed for the Vault Operator.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL specifies the URL of an Vault instance to use for secret storage.
Needs to be specified together with the Service Account and namespace to use for connecting to Vault.
This cannot be used in conjunction with the Name attribute.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;serviceAccount&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ServiceAccount is the name of the Kubernetes service account allowed to authenticate against Vault.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace of the Kubernetes service account allowed to authenticate against Vault.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;secretEngineMountPoint&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SecretEngineMountPoint is the secret engine mount point to be used for writing data into the KV engine of Vault.
If not specified the &amp;lsquo;secret&amp;rsquo; is used.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kubernetesAuthPath&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;KubernetesAuthPath is the auth path of used for this cluster
If not specified the &amp;lsquo;kubernetes&amp;rsquo; is used.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.VeleroConfig&#34;&gt;VeleroConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;VeleroConfig contains the configuration for velero&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace the namespace to install velero into&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;serviceAccount&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ServiceAccount the cloud service account used to run velero&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schedule&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Schedule of backups&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ttl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TimeToLive period for backups to be retained&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.VersionStreamConfig&#34;&gt;VersionStreamConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;VersionStreamConfig contains version stream config&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL of the version stream to use&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ref&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Ref of the version stream to use&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.WebhookType&#34;&gt;WebhookType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.RequirementsConfig&#34;&gt;RequirementsConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WebhookType is the type of a webhook strategy&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;config.jenkins.io/v1.WikiConfig&#34;&gt;WikiConfig
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#config.jenkins.io/v1.ProjectConfig&#34;&gt;ProjectConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;space&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;em&gt;
Generated with &lt;code&gt;gen-crd-api-reference-docs&lt;/code&gt;
on git commit &lt;code&gt;90ca3ea85&lt;/code&gt;.
&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Finding a Machine Learning Quickstart</title>
      <link>https://jenkins-x.io/docs/resources/guides/mlops/mlquickstarts/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/mlops/mlquickstarts/</guid>
      <description>
        
        
        &lt;p&gt;This directory is intended to help you find your way around the Jenkins X MLOps Quickstarts Library and get you up and running rapidly with a template project based around the class of Machine Learning approach you wish to work with and the language and framework you prefer.&lt;/p&gt;
&lt;p&gt;The directory is divided by target programming language (Python only at this stage, but with additional quickstarts to follow in other languages) and then by ML framework.&lt;/p&gt;
&lt;p&gt;The section for each framework is then divided by class of ML approach and CPU/GPU-based solutions.&lt;/p&gt;
&lt;p&gt;To create an instance of a project, find the title of the particular quickstart you wish to use and then select this from the list that is presented when you use the command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx create mlquickstart
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;python-quickstarts&#34;&gt;&lt;strong&gt;Python Quickstarts:&lt;/strong&gt;&lt;/h2&gt;
&lt;img src=&#34;https://avatars-04.gitter.im/group/iv/4/57542d4cc43b8c601977b6ad?s=48&#34; alt=&#34;LightGBM Logo&#34; width=&#34;40&#34; align=&#34;right&#34;&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lightgbm&#34;&gt;LightGBM&lt;/h2&gt;
&lt;p&gt;LightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faster training speed and higher efficiency.&lt;/li&gt;
&lt;li&gt;Lower memory usage.&lt;/li&gt;
&lt;li&gt;Better accuracy.&lt;/li&gt;
&lt;li&gt;Support of parallel and GPU learning.&lt;/li&gt;
&lt;li&gt;Capable of handling large-scale data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://lightgbm.readthedocs.io/&#34;&gt;https://lightgbm.readthedocs.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-lightgbm-cpu&lt;/code&gt; is a project for training and deploying tree based learning algorithms using the LightGBM library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-lightgbm-cpu-training&#34;&gt;ML-python-lightgbm-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-lightgbm-cpu-service&#34;&gt;ML-python-lightgbm-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://pytorch.org/assets/images/logo-dark.svg&#34; alt=&#34;PyTorch Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;pytorch&#34;&gt;PyTorch&lt;/h2&gt;
&lt;p&gt;Pytorch is a rich ecosystem of tools, libraries, and more to support, accelerate, and explore AI development.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://pytorch.org/&#34;&gt;https://pytorch.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;convolutional-neural-networks&#34;&gt;Convolutional Neural Networks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-cpu&lt;/code&gt; is a simple example demostrating the use of Pytorch with a Convolutional Neural Network (AlexNet) for image recognition.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-cpu-training&#34;&gt;ML-python-pytorch-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-cpu-service&#34;&gt;ML-python-pytorch-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;multi-layer-perceptron-networks&#34;&gt;Multi-layer Perceptron Networks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-mlpc-cpu&lt;/code&gt; is a project for training and deploying Multi-layer Perceptron Networks in Pytorch.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-training&#34;&gt;ML-python-pytorch-mlpc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-service&#34;&gt;ML-python-pytorch-mlpc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-mlpc-gpu&lt;/code&gt; is a project for training and deploying Multi-layer Perceptron Networks in Pytorch with CUDA acceleration.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-training&#34;&gt;ML-python-pytorch-mlpc-gpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-service&#34;&gt;ML-python-pytorch-mlpc-gpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png&#34; alt=&#34;Scikit Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;scikit-learn&#34;&gt;Scikit-Learn&lt;/h2&gt;
&lt;p&gt;Simple and efficient tools for predictive data analysis, accessible to everybody, and reusable in various contexts.&lt;/p&gt;
&lt;p&gt;Built on NumPy, SciPy, and matplotlib&lt;/p&gt;
&lt;p&gt;Documentation is at: &lt;a href=&#34;https://scikit-learn.org/&#34;&gt;https://scikit-learn.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;k-nearest-neighbor-classification&#34;&gt;K Nearest Neighbor Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-knc-cpu&lt;/code&gt; is a project for training and deploying K Nearest Neighbor Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-knc-cpu-training&#34;&gt;ML-python-sklearn-knc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-knc-cpu-service&#34;&gt;ML-python-sklearn-knc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;naive-bayes-classification&#34;&gt;Naive Bayes Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-nbc-cpu&lt;/code&gt; is a project for training and deploying Naive Bayes Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-nbc-cpu-training&#34;&gt;ML-python-sklearn-nbc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-nbc-cpu-service&#34;&gt;ML-python-sklearn-nbc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;random-forest-classification&#34;&gt;Random Forest Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-rfc-cpu&lt;/code&gt; is a project for training and deploying Random Forest Classifications using the SciKit-Learn library&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rfc-cpu-training&#34;&gt;ML-python-sklearn-rfc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rfc-cpu-service&#34;&gt;ML-python-sklearn-rfc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;ridge-classification&#34;&gt;Ridge Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-rc-cpu&lt;/code&gt; is a project for training and deploying Random Forest Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rc-cpu-training&#34;&gt;ML-python-sklearn-rc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rc-cpu-service&#34;&gt;ML-python-sklearn-rc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;support-vector-machines&#34;&gt;Support Vector Machines&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-svm-cpu&lt;/code&gt; is a project for training and deploying Support Vector Machines using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-svm-cpu-training&#34;&gt;ML-python-sklearn-svm-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-svm-cpu-service&#34;&gt;ML-python-sklearn-svm-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://www.gstatic.com/devrel-devsite/prod/vbc166ea82921a0c6d4f6ee6c94a3e0bcf7b885b334dd31c4592509cb25134992/tensorflow/images/lockup.svg&#34; alt=&#34;TensorFlow Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;tensorflow&#34;&gt;TensorFlow&lt;/h2&gt;
&lt;p&gt;TensorFlow is an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML powered applications.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;https://www.tensorflow.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;classification-mnist&#34;&gt;Classification (MNIST)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-tensorflow-mnist-cpu&lt;/code&gt; is a project for training and deploying an MNIST classifier using TensorFlow.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-cpu-training&#34;&gt;ML-python-tensorflow-mnist-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-cpu-service&#34;&gt;ML-python-tensorflow-mnist-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-tensorflow-mnist-gpu&lt;/code&gt; is a project for training and deploying an MNIST classifier using TensorFlow with CUDA acceleration.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-gpu-training&#34;&gt;ML-python-tensorflow-mnist-gpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-gpu-service&#34;&gt;ML-python-tensorflow-mnist-gpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://xgboost.ai/images/logo/xgboost-logo.png&#34; alt=&#34;XGBoost Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;xgboost&#34;&gt;XGBoost&lt;/h2&gt;
&lt;p&gt;Scalable and flexible Gradient Boosting. Supports regression, classification, ranking and user defined objectives.&lt;/p&gt;
&lt;p&gt;Documentation is at: &lt;a href=&#34;https://xgboost.readthedocs.io/en/latest/&#34;&gt;https://xgboost.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;gradient-boosted-decision-trees&#34;&gt;Gradient Boosted Decision Trees&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-xgb-cpu&lt;/code&gt; is a project for training and deploying gradient boosted decision trees using the XGBoost library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-xgb-cpu-training&#34;&gt;ML-python-xgb-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-xgb-cpu-service&#34;&gt;ML-python-xgb-cpu-service&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Finding a Machine Learning Quickstart</title>
      <link>https://jenkins-x.io/v3/mlops/mlquickstarts/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/mlops/mlquickstarts/</guid>
      <description>
        
        
        &lt;p&gt;This directory is intended to help you find your way around the Jenkins X MLOps Quickstarts Library and get you up and running rapidly with a template project based around the class of Machine Learning approach you wish to work with and the language and framework you prefer.&lt;/p&gt;
&lt;p&gt;The directory is divided by target programming language (Python only at this stage, but with additional quickstarts to follow in other languages) and then by ML framework.&lt;/p&gt;
&lt;p&gt;The section for each framework is then divided by class of ML approach and CPU/GPU-based solutions.&lt;/p&gt;
&lt;p&gt;To create an instance of a project, find the title of the particular quickstart you wish to use and then select this from the list that is presented when you use the command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx project mlquickstart
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;python-quickstarts&#34;&gt;&lt;strong&gt;Python Quickstarts:&lt;/strong&gt;&lt;/h2&gt;
&lt;img src=&#34;https://avatars-04.gitter.im/group/iv/4/57542d4cc43b8c601977b6ad?s=48&#34; alt=&#34;LightGBM Logo&#34; width=&#34;40&#34; align=&#34;right&#34;&gt;
&lt;hr&gt;
&lt;h2 id=&#34;lightgbm&#34;&gt;LightGBM&lt;/h2&gt;
&lt;p&gt;LightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faster training speed and higher efficiency.&lt;/li&gt;
&lt;li&gt;Lower memory usage.&lt;/li&gt;
&lt;li&gt;Better accuracy.&lt;/li&gt;
&lt;li&gt;Support of parallel and GPU learning.&lt;/li&gt;
&lt;li&gt;Capable of handling large-scale data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://lightgbm.readthedocs.io/&#34;&gt;https://lightgbm.readthedocs.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-lightgbm-cpu&lt;/code&gt; is a project for training and deploying tree based learning algorithms using the LightGBM library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-lightgbm-cpu-training&#34;&gt;ML-python-lightgbm-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-lightgbm-cpu-service&#34;&gt;ML-python-lightgbm-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://pytorch.org/assets/images/logo-dark.svg&#34; alt=&#34;PyTorch Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;pytorch&#34;&gt;PyTorch&lt;/h2&gt;
&lt;p&gt;Pytorch is a rich ecosystem of tools, libraries, and more to support, accelerate, and explore AI development.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://pytorch.org/&#34;&gt;https://pytorch.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;convolutional-neural-networks&#34;&gt;Convolutional Neural Networks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-cpu&lt;/code&gt; is a simple example demostrating the use of Pytorch with a Convolutional Neural Network (AlexNet) for image recognition.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-cpu-training&#34;&gt;ML-python-pytorch-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-cpu-service&#34;&gt;ML-python-pytorch-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;multi-layer-perceptron-networks&#34;&gt;Multi-layer Perceptron Networks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-mlpc-cpu&lt;/code&gt; is a project for training and deploying Multi-layer Perceptron Networks in Pytorch.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-training&#34;&gt;ML-python-pytorch-mlpc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-service&#34;&gt;ML-python-pytorch-mlpc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-pytorch-mlpc-gpu&lt;/code&gt; is a project for training and deploying Multi-layer Perceptron Networks in Pytorch with CUDA acceleration.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-training&#34;&gt;ML-python-pytorch-mlpc-gpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-service&#34;&gt;ML-python-pytorch-mlpc-gpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png&#34; alt=&#34;Scikit Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;scikit-learn&#34;&gt;Scikit-Learn&lt;/h2&gt;
&lt;p&gt;Simple and efficient tools for predictive data analysis, accessible to everybody, and reusable in various contexts.&lt;/p&gt;
&lt;p&gt;Built on NumPy, SciPy, and matplotlib&lt;/p&gt;
&lt;p&gt;Documentation is at: &lt;a href=&#34;https://scikit-learn.org/&#34;&gt;https://scikit-learn.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;k-nearest-neighbor-classification&#34;&gt;K Nearest Neighbor Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-knc-cpu&lt;/code&gt; is a project for training and deploying K Nearest Neighbor Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-knc-cpu-training&#34;&gt;ML-python-sklearn-knc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-knc-cpu-service&#34;&gt;ML-python-sklearn-knc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;naive-bayes-classification&#34;&gt;Naive Bayes Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-nbc-cpu&lt;/code&gt; is a project for training and deploying Naive Bayes Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-nbc-cpu-training&#34;&gt;ML-python-sklearn-nbc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-nbc-cpu-service&#34;&gt;ML-python-sklearn-nbc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;random-forest-classification&#34;&gt;Random Forest Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-rfc-cpu&lt;/code&gt; is a project for training and deploying Random Forest Classifications using the SciKit-Learn library&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rfc-cpu-training&#34;&gt;ML-python-sklearn-rfc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rfc-cpu-service&#34;&gt;ML-python-sklearn-rfc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;ridge-classification&#34;&gt;Ridge Classification&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-rc-cpu&lt;/code&gt; is a project for training and deploying Random Forest Classification using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rc-cpu-training&#34;&gt;ML-python-sklearn-rc-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-rc-cpu-service&#34;&gt;ML-python-sklearn-rc-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;support-vector-machines&#34;&gt;Support Vector Machines&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-sklearn-svm-cpu&lt;/code&gt; is a project for training and deploying Support Vector Machines using the SciKit-Learn library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-svm-cpu-training&#34;&gt;ML-python-sklearn-svm-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-sklearn-svm-cpu-service&#34;&gt;ML-python-sklearn-svm-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/2d/Tensorflow_logo.svg&#34; alt=&#34;TensorFlow Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;tensorflow&#34;&gt;TensorFlow&lt;/h2&gt;
&lt;p&gt;TensorFlow is an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML powered applications.&lt;/p&gt;
&lt;p&gt;Documentation is at &lt;a href=&#34;https://www.tensorflow.org/&#34;&gt;https://www.tensorflow.org/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;classification-mnist&#34;&gt;Classification (MNIST)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-tensorflow-mnist-cpu&lt;/code&gt; is a project for training and deploying an MNIST classifier using TensorFlow.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-cpu-training&#34;&gt;ML-python-tensorflow-mnist-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-cpu-service&#34;&gt;ML-python-tensorflow-mnist-cpu-service&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-tensorflow-mnist-gpu&lt;/code&gt; is a project for training and deploying an MNIST classifier using TensorFlow with CUDA acceleration.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-gpu-training&#34;&gt;ML-python-tensorflow-mnist-gpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-tensorflow-mnist-gpu-service&#34;&gt;ML-python-tensorflow-mnist-gpu-service&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;img src=&#34;https://xgboost.ai/images/logo/xgboost-logo.png&#34; alt=&#34;XGBoost Logo&#34; width=&#34;140&#34; align=&#34;right&#34;&gt;
&lt;h2 id=&#34;xgboost&#34;&gt;XGBoost&lt;/h2&gt;
&lt;p&gt;Scalable and flexible Gradient Boosting. Supports regression, classification, ranking and user defined objectives.&lt;/p&gt;
&lt;p&gt;Documentation is at: &lt;a href=&#34;https://xgboost.readthedocs.io/en/latest/&#34;&gt;https://xgboost.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;gradient-boosted-decision-trees&#34;&gt;Gradient Boosted Decision Trees&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CPU-based:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ML-python-xgb-cpu&lt;/code&gt; is a project for training and deploying gradient boosted decision trees using the XGBoost library.&lt;/p&gt;
&lt;p&gt;Training Script : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-xgb-cpu-training&#34;&gt;ML-python-xgb-cpu-training&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Service Wrapper : &lt;a href=&#34;https://github.com/machine-learning-quickstarts/ML-python-xgb-cpu-service&#34;&gt;ML-python-xgb-cpu-service&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jenkins X Video Tutorial Series - Specify Your Own Builder Within A Pipeline</title>
      <link>https://jenkins-x.io/docs/resources/tutorials/custom-builder/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/tutorials/custom-builder/</guid>
      <description>
        
        
        &lt;/br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/YCEbOI4ZVQ4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jenkins X Pluralsight Course</title>
      <link>https://jenkins-x.io/docs/resources/tutorials/pluralsight/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/tutorials/pluralsight/</guid>
      <description>
        
        
        &lt;p&gt;There is a &lt;a href=&#34;https://app.pluralsight.com/library/courses/jenkins-x-cloud-native-ci-cd/table-of-contents&#34;&gt;Pluralsight course for Jenkins X&lt;/a&gt;, taking you through much of it&amp;rsquo;s core concepts.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Articles</title>
      <link>https://jenkins-x.io/docs/resources/demos-talks-posts/articles/</link>
      <pubDate>Sat, 05 May 2018 10:36:00 +0200</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/demos-talks-posts/articles/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/07/17/defining-and-running-serverless-deployments-with-knative-and-jenkins-x/&#34;&gt;Defining And Running Serverless Deployments With Knative And Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, July 17th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itnext.io/jenkins-x-managing-nexus-17d31ad493d6?source=friends_link&amp;amp;sk=8bfb32a5e9bf1170c0b3430731144adf&#34;&gt;Jenkins X — Managing Nexus&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@sboardwell&#34;&gt;Steve Boardwell&lt;/a&gt;, August 23th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itnext.io/jenkins-x-managing-jenkins-926f0e0f8bcf?source=friends_link&amp;amp;sk=3dcd9c4a8c028661f0b09156c14c271e&#34;&gt;Jenkins X — Managing Jenkins&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@sboardwell&#34;&gt;Steve Boardwell&lt;/a&gt;, August 8th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/06/30/overriding-pipelines-stages-and-steps-and-implementing-loops-in-jenkins-x-pipelines/&#34;&gt;Overriding Pipelines, Stages, And Steps And Implementing Loops In Jenkins X Pipelines&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, June 30th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itnext.io/jenkins-x-tls-enabled-previews-d04fa68c7ce9?source=friends_link&amp;amp;sk=c13828b223f56ed662fd7ec0872c3d1e&#34;&gt;Jenkins X — TLS enabled Previews&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@sboardwell&#34;&gt;Steve Boardwell&lt;/a&gt;, June 26th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itnext.io/jenkins-x-securing-the-cluster-e1b9fcd8dd05?source=friends_link&amp;amp;sk=e1e46e780908b2e3c8415c3191e82c56&#34;&gt;Jenkins X — Securing the Cluster&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@sboardwell&#34;&gt;Steve Boardwell&lt;/a&gt;, June 22nd, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/06/21/ten-commandments-of-gitops-applied-to-continuous-delivery/&#34;&gt;Ten Commandments Of GitOps Applied To Continuous Delivery&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, June 21th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/05/31/upgrading-ingress-rules-and-adding-tls-certificates-with-jenkins-x/&#34;&gt;Upgrading Ingress Rules And Adding TLS Certificates With Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, May 31th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/05/09/the-evolution-of-jenkins-jobs-and-how-we-got-to-the-yaml-based-jenkins-x-yml-format/&#34;&gt;The Evolution Of Jenkins Jobs And How We Got To The YAML-Based jenkins-x.yml Format&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, May 9th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/04/24/implementing-chatops-with-jenkins-x/&#34;&gt;Implementing ChatOps With Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, April 24th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/04/15/going-serverless-with-jenkins-x-exploring-prow-jenkins-x-pipeline-operator-and-tekton/&#34;&gt;Going Serverless With Jenkins X: Exploring Prow, Jenkins X Pipeline Operator, And Tekton&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, April 15th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/03/25/working-with-pull-requests-and-preview-environments/&#34;&gt;Working With Pull Requests And Preview Environments&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, March 25th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/03/10/improving-and-simplifying-software-development-with-jenkins-x/&#34;&gt;Improving And Simplifying Software Development With Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, March 10th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/exploring-jenkins-x-devpod&#34;&gt;Exploring Jenkins X: DevPods&lt;/a&gt; on March 6th, 2019 by &lt;a href=&#34;https://www.cloudbees.com/blogs/nicolas-deloof&#34;&gt;Nicolas DeLoof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2019/03/06/jenkins-x-azure-kubernetes-service-setup/&#34;&gt;Setting up Jenkins X on Azure Kubernetes Service (AKS)&lt;/a&gt; on March 6th, 2019 by &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/author/pui-chee-chan/&#34;&gt;Pui Chee Chan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csanchez.org/2019/03/05/progressive-delivery-with-jenkins-x-automatic-canary-deployments/&#34;&gt;Progressive Delivery with Jenkins X: Automatic Canary Deployments&lt;/a&gt; on March 5th, 2019 by  &lt;a href=&#34;https://blog.csanchez.org/author/carlossanchez/&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nicholasduffy.com/posts/jenkins-x-environment-specific-variables/&#34;&gt;Jenkins X Environment Specific Variables&lt;/a&gt; on March 4th, 2019 by &lt;a href=&#34;https://nicholasduffy.com/&#34;&gt;Nicholas Duffy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/02/27/creating-custom-jenkins-x-build-packs/&#34;&gt;Creating Custom Jenkins X Build Packs&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, February 27th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/02/05/is-your-cluster-ready-for-jenkins-x/&#34;&gt;Is Your Cluster Ready For Jenkins X?&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, February 5th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@vbehar/zero-cost-preview-environments-on-kubernetes-with-jenkins-x-and-osiris-bd9ce0148d03&#34;&gt;Zero cost preview environments on Kubernetes with Jenkins X and Osiris&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@vbehar&#34;&gt;Vincent Behar&lt;/a&gt;, February 5th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://technologyconversations.com/2019/01/29/what-is-jenkins-x/&#34;&gt;What Is Jenkins X?&lt;/a&gt; by &lt;a href=&#34;https://technologyconversations.com&#34;&gt;Viktor Farcic&lt;/a&gt;, January 29th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@MichalFoksa/jenkins-x-preview-environment-3bf2424a05e4&#34;&gt;Jenkins X: Preview Environment&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@MichalFoksa&#34;&gt;Michal Foksa&lt;/a&gt;, January 10th, 2019&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/opensource/continuous-delivery-eks-jenkins-x/&#34;&gt;Continuous Delivery with Amazon EKS and Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/hekonsek&#34;&gt;Henryk Konsek&lt;/a&gt;, 7th November, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@puichan/trying-out-jenkins-x-on-azure-kubernetes-service-aks-20fe94bd72d2&#34;&gt;Trying out Jenkins X on Azure Kubernetes Service(AKS)&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@puichan&#34;&gt;PC Chan&lt;/a&gt; on October 29th, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ibm.com/blogs/bluemix/2018/08/installing-jenkins-x-on-ibm-cloud-kubernetes-service/&#34;&gt;Installing Jenkins X on IBM Cloud Kubernetes Service&lt;/a&gt; on August 28th, 2018 by &lt;a href=&#34;https://www.ibm.com/blogs/bluemix/author/rvennamus-ibm-com/&#34;&gt;Ram Vennam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.routetocloud.com/2018/08/1969/&#34;&gt;Jenkins X and Pivotal PKS&lt;/a&gt; on 1st August, 2018 by &lt;a href=&#34;https://twitter.com/roie9876&#34;&gt;Roie Ben-haim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/blog/2018/07/19/jenkins-x-accelerate/&#34;&gt;Accelerate with Jenkins X&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jdrawlings/&#34;&gt;James Rawlings&lt;/a&gt; on July 20, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.okta.com/blog/2018/07/11/ci-cd-spring-boot-jenkins-x-kubernetes&#34;&gt;Add CI/CD to Your Spring Boot App with Jenkins X and Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/mraible/&#34;&gt;Matt Raible&lt;/a&gt; on July 11, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/don%E2%80%99t-install-development-tools&#34;&gt;Don&amp;rsquo;t Install Developer Tools!&lt;/a&gt; by Michael Neale on 30 May 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/blog/2018/03/19/introducing-jenkins-x/&#34;&gt;Introducing Jenkins X: a CI/CD solution for modern cloud applications on Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt; on 19th March, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/dont-install-kubernetes&#34;&gt;Don&amp;rsquo;t Install Kubernetes!&lt;/a&gt; by Michael Neale on 27th February, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/blog/2018/04/16/jenkins-x-explained-part1/&#34;&gt;Jenkins X Explained Part 1 - an integrated CI/CD solution for Kubernetes&lt;/a&gt; by James Rawlings on 16th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/serverless-and-kubernetes-serverless-isnt-processless&#34;&gt;Serverless and Kubernetes: Serverless Isn&amp;rsquo;t Processless&lt;/a&gt; by Michael Neale on 12th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/opinionated-kubernetes-and-jenkins-x&#34;&gt;Opinionated Kubernetes and Jenkins X&lt;/a&gt; by Michael Neale on 13th February, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/now-devops-radio-james-strachan-introduces-jenkins-x-taking-continuous-delivery-next-level&#34;&gt;Now on DevOps Radio: James Strachan - Introduces Jenkins X, Taking Continuous Delivery to the NeXt Level&lt;/a&gt; by Heidi Gilmore on 28th February, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/why-kubernetes-changes-everything&#34;&gt;Why Kubernetes Changes Everything!&lt;/a&gt; by Rob Davies on 17th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.octo.com/en/jenkinsx-new-kubernetes-dream-part-1/&#34;&gt;JenkinsX – new Kubernetes dream? Part 1&lt;/a&gt; by Mykyta Shulhin, Ilya Trofimov on 17th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.octo.com/en/jenkinsx-new-kubernetes-dream-part-2/&#34;&gt;JenkinsX – new Kubernetes dream? Part 2 - Technical!&lt;/a&gt; by Mykyta Shulhin, Ilya Trofimov on 19th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/jenkins-x-the-good-bad-and-ugly&#34;&gt;Jenkins: X or 2.0 ?&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@odzhu&#34;&gt;Oleksii Dzhulai&lt;/a&gt; on 13th April, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudbees.com/blog/want-help-build-cloudbees-kubernetes-jenkins-x&#34;&gt;Want to Help Build CloudBees for Kubernetes with Jenkins X?&lt;/a&gt; by Rob Davies on 2nd May, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/blog/2018/05/08/jenkins-x-anchore/&#34;&gt;Jenkins X: Announcing CVE docker image analysis with Anchore&lt;/a&gt; by James Rawlings on 8th May, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://salaboy.com/2018/05/15/activiti-cloud-jenkins-x-blueprint-in-aws-and-gce/&#34;&gt;Activiti Cloud &amp;amp; Jenkins X: Blueprint in AWS and GCE&lt;/a&gt; by &lt;a href=&#34;https://salaboy.com/&#34;&gt;Salaboy&lt;/a&gt; on 15th May, 2018&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@maniankara/ci-cd-with-jenkins-x-on-your-existing-gke-cluster-ruby-on-rails-application-785d8390a857&#34;&gt;CI/CD with Jenkins-x on your existing (GKE) cluster — ruby on rails application&lt;/a&gt; by &lt;a href=&#34;https://medium.com/@maniankara&#34;&gt;anoop vijayan maniankara&lt;/a&gt; on May 20th, 2018&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also check out the &lt;a href=&#34;https://jenkins-x.io/blog/news/&#34;&gt;Jenkins X Blog&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/docs/resources/demos-talks-posts/&#34;&gt;Talks and Conferences&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Docker Image CVE Scanning</title>
      <link>https://jenkins-x.io/docs/resources/tutorials/image-security/</link>
      <pubDate>Sat, 05 May 2018 10:36:00 +0200</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/tutorials/image-security/</guid>
      <description>
        
        
        &lt;p&gt;There is a &lt;a href=&#34;https://jenkins.io/blog/2018/05/08/jenkins-x-anchore/&#34;&gt;blog on Announcing CVE docker image analysis with Anchore&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can watch the &lt;a href=&#34;https://www.youtube.com/watch?v=rB8Sw0FqCQk&#34;&gt;video here&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;854&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/rB8Sw0FqCQk&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;

      </description>
    </item>
    
    <item>
      <title>About: Changelog</title>
      <link>https://jenkins-x.io/about/overview/changelog/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/about/overview/changelog/</guid>
      <description>
        
        
        &lt;p&gt;Refer to the &lt;a href=&#34;https://jenkins-x.io/about/capabilities&#34;&gt;Jenkins X Capabilities Matrix&lt;/a&gt; for cloud provider support maturity.&lt;/p&gt;
&lt;h1 id=&#34;status-reports&#34;&gt;Status Reports&lt;/h1&gt;
&lt;p&gt;This section describes any specific manual work arounds you may require above and beyond changes described in the &lt;a href=&#34;https://jenkins-x.io/blog/news/&#34;&gt;News section&lt;/a&gt; or using &lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade/&#34;&gt;jx upgrade&lt;/a&gt; to upgrade the &lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade_cli/&#34;&gt;CLI&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;platform&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;25th-june-2019-missing-image-bitnamimonocular-api&#34;&gt;25th June 2019: missing image: bitnami/monocular-api&lt;/h2&gt;
&lt;p&gt;It looks like the monocular docker images got removed today!&lt;/p&gt;
&lt;p&gt;It turns out that monocular is not an absolute requirement for Jenkins X; it works great without it.&lt;/p&gt;
&lt;p&gt;So a quick workaround to the problem is to scale down your monocular deployment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl scale deploy jenkins-x-monocular-api --replicas&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl scale deploy jenkins-x-monocular-prerender --replicas&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl scale deploy jenkins-x-monocular-ui --replicas&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The latest &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream release&lt;/a&gt; has removed monocular so if you &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/upgrade-jx/&#34;&gt;upgrade your platform
&lt;/a&gt; this issue should be resolved.&lt;/p&gt;
&lt;p&gt;We can always add monocular back as an optional &lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;App&lt;/a&gt; later on when it works again.&lt;/p&gt;
&lt;h2 id=&#34;12th-june-2019-knative-build-now-deprecated&#34;&gt;12th June 2019: Knative Build now deprecated&lt;/h2&gt;
&lt;p&gt;Knative Build was our first attempt at building a serverless offering in Jenkins X. Since then Knative build got replaced with the more powerful Knative Build Pipelines which then got moved and renamed to &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So we highly recommend anyone who has created a Jenkins X installation using Knative build to move to a &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Serverless Jenkins X Pipelines&lt;/a&gt; cluster using Tekton instead.&lt;/p&gt;
&lt;p&gt;Now the &lt;code&gt;jx&lt;/code&gt; binary will warn that any attempt at using &lt;code&gt;--knative-build&lt;/code&gt; when installing is deprecated.&lt;/p&gt;
&lt;h2 id=&#34;21st-may-2019-skaffold-upgrade-to-v0290&#34;&gt;21st May 2019: Skaffold upgrade to v0.29.0&lt;/h2&gt;
&lt;p&gt;We have noticed an incompatibility with older Skaffold configuration files and the new v0.29.0 Skaffold release.  Freshly generated applications will not suffer from this problem, but for existing applications changes to the configuration file may be required.&lt;/p&gt;
&lt;p&gt;If you are running a static master or serverless (Jenkins file runner) cluster and are having issues building existing applications with the following error &lt;code&gt;creating runner: invalid skaffold config: required value not set: image&lt;/code&gt; you will need to modify your &lt;code&gt;skaffold.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;dev&lt;/code&gt; profile, remove the following section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;artifacts&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;docker&lt;/span&gt;: {}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more information, refer to this &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/pull/50/files&#34;&gt;PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;16th-april-2019-jenkins-x-2x&#34;&gt;16th April 2019: Jenkins X 2.x&lt;/h2&gt;
&lt;p&gt;We are pleased to announce 2.0.x of Jenkins X.&lt;/p&gt;
&lt;p&gt;We have changed some of the default CLI arguments when installing Jenkins X.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we are now deprecating the use of Knative build with Prow / Serverless Jenkins in favor of &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines and Tekton&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;we default to using &lt;code&gt;--no-tiller&lt;/code&gt;  to &lt;a href=&#34;https://jenkins-x.io/news/helm-without-tiller/&#34;&gt;disable the use of helm&amp;rsquo;s tiller&lt;/a&gt;. We recommend to avoid tiller. If you really still want to use it then use &lt;code&gt;--no-tiller false&lt;/code&gt; on the CLI when installing Jenkins X.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6th-feb-2019-regression-in-jx-install-config-secret&#34;&gt;6th Feb 2019: Regression in &lt;code&gt;jx-install-config&lt;/code&gt; secret.&lt;/h2&gt;
&lt;p&gt;We have spotted a regression in the install process that generates an invalid config file inside the secret &lt;code&gt;jx-install-config&lt;/code&gt; secret.  Whilst the original defect has been fixed, the invalid secret will create an issue with &lt;code&gt;jx upgrade platform&lt;/code&gt; causing the cluster to loose all secrets.&lt;/p&gt;
&lt;p&gt;To work around this, we have added some logic into &lt;code&gt;jx upgrade platform&lt;/code&gt; to detect the invalid secret and attempt to fix.  This feature is included in jx version &lt;code&gt;1.3.842&lt;/code&gt;.  An extract of a running upgrade is shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating /Users/garethjevans/.jx/adminSecrets.yaml from jx-install-config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating /Users/garethjevans/.jx/extraValues.yaml from jx-install-config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We have detected that the /Users/garethjevans/.jx/adminSecrets.yaml file has an invalid format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;? Would you like to repair the file? Yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;1st-feb-2019-changes-to-the-default-nexus-configuration&#34;&gt;1st Feb 2019: Changes to the default Nexus configuration&lt;/h2&gt;
&lt;p&gt;Anonymous access to Nexus has been disabled by default, this has implications to those running Maven based builds.  To support this, the maven settings.xml injected into each build pod needs to be modified.&lt;/p&gt;
&lt;p&gt;This can be done automatically using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade platform --update-secrets
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NOTE: this will regenerate the settings.xml from a defined template.&lt;/p&gt;
&lt;p&gt;If you would prefer to apply this changes manually, edit the secret &lt;code&gt;jenkins-maven-settings&lt;/code&gt;, duplicating the server block for &lt;code&gt;local-nexus&lt;/code&gt;, changing the server id to &lt;code&gt;nexus&lt;/code&gt; e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;local-nexus&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;username&amp;gt;&lt;/span&gt;admin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;%s&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;nexus&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;username&amp;gt;&lt;/span&gt;admin&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;%s&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;8-jan-2019-prow-and-knative-build-upgrade&#34;&gt;8 Jan 2019: Prow and Knative Build upgrade&lt;/h2&gt;
&lt;p&gt;There are three critical bugs with the prow based Jenkins X
&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/2539&#34;&gt;https://github.com/jenkins-x/jx/issues/2539&lt;/a&gt;
&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/2561&#34;&gt;https://github.com/jenkins-x/jx/issues/2561&lt;/a&gt;
&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/2544&#34;&gt;https://github.com/jenkins-x/jx/issues/2544&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The fixes involve upgrading to a newer version of Prow and Knative Build, the latter caused an issue when performing a traditional &lt;code&gt;jx upgrade addon&lt;/code&gt; so we recommend uninstalling Knative Build first (removes Knative Build related Custom Resource Definitions) and install the latest release.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx delete addon knative-build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And to be extra sure it’s gone maybe do an extra:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm del --purge knative-build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade cli
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade addon prow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But this means any existing builds or custom changes to &lt;code&gt;BuildTemplate&lt;/code&gt; resources will be lost.&lt;/p&gt;
&lt;h2 id=&#34;5-jan-2019-environment-git-repository-issue&#34;&gt;5 Jan 2019: environment git repository issue&lt;/h2&gt;
&lt;p&gt;There was a regression added a few weeks ago which led to new installations setting up invalid &lt;code&gt;exposecontroller&lt;/code&gt; configuration in your &lt;code&gt;Staging/Production&lt;/code&gt; git repositories. See the &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/2591#issuecomment-451516674&#34;&gt;issue and workaround&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure that the &lt;code&gt;env/values.yaml&lt;/code&gt; file for your environment git repository uses &lt;code&gt;expose:&lt;/code&gt; as the key in the YAML and not &lt;code&gt;exposecontroller:&lt;/code&gt; - if it uses &lt;code&gt;exposecontroller:&lt;/code&gt; just edit it back to &lt;code&gt;expose:&lt;/code&gt; and you should be good to go!&lt;/p&gt;
&lt;p&gt;Also we have noticed a possible regression with helm where if you have multiple &lt;code&gt;expose:&lt;/code&gt; sections in your environment &lt;code&gt;env/values.yaml&lt;/code&gt; it can disable the &lt;code&gt;exposecontroller&lt;/code&gt; post install helm hook which can break the creation of &lt;code&gt;Ingress&lt;/code&gt; resources in your environment - if you have more than one &lt;code&gt;expose:&lt;/code&gt; sections please combine them into a single entry.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Access Control</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/access-control/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X uses Role-Based Access Control (RBAC) policies to control access to its various resources.  The enforcement of the policies is provided by &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Kubernetes&amp;rsquo; RBAC support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#teams&#34;&gt;Teams&lt;/a&gt; can have a number of &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Environments&lt;/a&gt; (e.g., Dev, Staging, Production) along with dynamic &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;Preview Environments&lt;/a&gt;; keeping  the &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;Role&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;RoleBinding&lt;/code&gt;&lt;/a&gt; resources from &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Kubernetes RBAC&lt;/a&gt; in sync with all the various namespaces and members of your team can be challenging.&lt;/p&gt;
&lt;p&gt;To make this management easier, Jenkins X creates a new &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;Custom Resource&lt;/a&gt; called &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#environmentrolebinding&#34;&gt;&lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;&lt;/a&gt; which allows you to associate a &lt;code&gt;Role&lt;/code&gt; labeled with &lt;code&gt;jenkins.io/kind=EnvironmentRole&lt;/code&gt; with as many &lt;code&gt;Users&lt;/code&gt; or &lt;code&gt;ServiceAccounts&lt;/code&gt; as you like. As Environments are created or the &lt;code&gt;Role&lt;/code&gt; or &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt; in the Dev environment is modified, the &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;&lt;code&gt;role controller&lt;/code&gt;&lt;/a&gt; ensures that the configuration is replicated to all the environment namespaces by creating or updating all of the &lt;code&gt;Role&lt;/code&gt; and &lt;code&gt;RoleBinding&lt;/code&gt;s per namespace.&lt;/p&gt;
&lt;p&gt;Roles are per Team so it is possible to have special roles per team, or to use common names for roles but have them customized for each team.&lt;/p&gt;
&lt;h2 id=&#34;security-implications-for-the-admin-namespace&#34;&gt;Security Implications for the admin namespace&lt;/h2&gt;
&lt;p&gt;Jenkins X stores various configuration and settings (e.g., &lt;code&gt;Users&lt;/code&gt;, &lt;code&gt;Teams&lt;/code&gt;) in the main admin namespace (&lt;code&gt;jx&lt;/code&gt;). Be careful when granting roles in the default &lt;code&gt;jx&lt;/code&gt; team as allowing users to edit some of these files may allow them to escalate their permissions.
Instead of granting non-admin users access to the &lt;code&gt;jx&lt;/code&gt; namespace, create teams and grant users access to those when using a shared cluster.&lt;/p&gt;
&lt;h2 id=&#34;default-roles&#34;&gt;Default Roles&lt;/h2&gt;
&lt;p&gt;Jenkins X ships with a collection of default &lt;code&gt;Role&lt;/code&gt; objects you can use in the &lt;code&gt;jenkins-x-platform&lt;/code&gt; template.  You can create your own if you wish, but any edits may be lost when Jenkins X is upgraded.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/viewer-role.yaml&#34;&gt;viewer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The &lt;code&gt;viewer&lt;/code&gt; role allows access to read projects, builds, and logs. It does not allow access to sensitive information&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/committer-role.yaml&#34;&gt;committer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The &lt;code&gt;committer&lt;/code&gt; role provides the same permissions as &lt;code&gt;viewer&lt;/code&gt; and allows the user to trigger builds and import new projects.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/owner-role.yaml&#34;&gt;owner&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The owner role allows users to modify all team resources.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;adding-users&#34;&gt;Adding Users&lt;/h2&gt;
&lt;p&gt;To add users use the &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_user/&#34;&gt;jx create user&lt;/a&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create user --email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;joe@example.com&amp;#34;&lt;/span&gt; --login joe --name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Joe Bloggs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;changing-user-roles&#34;&gt;Changing User Roles&lt;/h2&gt;
&lt;p&gt;To modify the roles for a user, use &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_userroles/&#34;&gt;jx edit userroles&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you omit the &lt;code&gt;--login&lt;/code&gt; (&lt;code&gt;-l&lt;/code&gt;) flag, you will be prompted to pick the user to edit.&lt;/p&gt;
&lt;p&gt;For example, to make a user &lt;code&gt;joe&lt;/code&gt; have the &lt;code&gt;committer&lt;/code&gt; Role (and remove any existing roles):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe --role committer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you have fine-grained roles and want to grant multiple roles to a user, you can specify the roles as a comma-separated list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe --role committer,viewer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Modifying a user&amp;rsquo;s roles changes the &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;. The &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;role controller&lt;/a&gt; will replicate these changes to all the underlying Environment namespaces.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: API Documentation</title>
      <link>https://jenkins-x.io/docs/reference/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/reference/api/</guid>
      <description>
        
        
        &lt;p&gt;Packages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;#jenkins.io%2fv1&#34;&gt;jenkins.io/v1&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jenkins.io/v1&#34;&gt;jenkins.io/v1&lt;/h2&gt;
&lt;p&gt;
&lt;p&gt;Package v1 is the v1 version of the API.&lt;/p&gt;
&lt;/p&gt;
Resource Types:
&lt;ul&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.App&#34;&gt;App&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.BuildPack&#34;&gt;BuildPack&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatus&#34;&gt;CommitStatus&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Environment&#34;&gt;Environment&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBinding&#34;&gt;EnvironmentRoleBinding&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Extension&#34;&gt;Extension&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Fact&#34;&gt;Fact&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.GitService&#34;&gt;GitService&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivity&#34;&gt;PipelineActivity&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStructure&#34;&gt;PipelineStructure&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Plugin&#34;&gt;Plugin&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Release&#34;&gt;Release&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Scheduler&#34;&gt;Scheduler&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepository&#34;&gt;SourceRepository&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepositoryGroup&#34;&gt;SourceRepositoryGroup&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Team&#34;&gt;Team&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.User&#34;&gt;User&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
&lt;a href=&#34;#jenkins.io/v1.Workflow&#34;&gt;Workflow&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;
&lt;h3 id=&#34;jenkins.io/v1.App&#34;&gt;App
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;App is the metadata for an App&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;App&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.AppSpec&#34;&gt;
AppSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schemaPreprocessor&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#container-v1-core&#34;&gt;
Kubernetes core/v1.Container
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schemaPreprocessorRole&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#role-v1-rbac&#34;&gt;
Kubernetes rbac/v1.Role
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineExtension&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineExtension&#34;&gt;
PipelineExtension
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.BuildPack&#34;&gt;BuildPack
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;BuildPack represents a set of language specific build packs and associated quickstarts&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BuildPack&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.BuildPackSpec&#34;&gt;
BuildPackSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;quickstartLocations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.QuickStartLocation&#34;&gt;
[]QuickStartLocation
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitStatus&#34;&gt;CommitStatus
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;CommitStatus represents the commit statuses for a particular pull request&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CommitStatus&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusSpec&#34;&gt;
CommitStatusSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;items&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusDetails&#34;&gt;
[]CommitStatusDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Environment&#34;&gt;Environment
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Environment represents an environment like Dev, Test, Staging, Production where code lives&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Environment&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;
EnvironmentSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promotionStrategy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromotionStrategyType&#34;&gt;
PromotionStrategyType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;source&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRepository&#34;&gt;
EnvironmentRepository
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;order&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int32
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentKindType&#34;&gt;
EnvironmentKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;teamSettings&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;
TeamSettings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;previewGitInfo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PreviewGitSpec&#34;&gt;
PreviewGitSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;webHookEngine&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WebHookEngineType&#34;&gt;
WebHookEngineType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;remoteCluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RemoteCluster flag indicates if the Environment is deployed in a separate cluster to the Development Environment&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentStatus&#34;&gt;
EnvironmentStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentRoleBinding&#34;&gt;EnvironmentRoleBinding
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentRoleBinding is like a vanilla RoleBinding but applies to a set of Namespaces based on an Environment filter
so that roles can be bound to multiple namespaces easily.&lt;/p&gt;
&lt;p&gt;For example to specify the binding of roles on all Preview environments or on all permanent environments.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBindingSpec&#34;&gt;
EnvironmentRoleBindingSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subjects&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#subject-v1-rbac&#34;&gt;
[]Kubernetes rbac/v1.Subject
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Subjects holds references to the objects the role applies to.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;roleRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#roleref-v1-rbac&#34;&gt;
Kubernetes rbac/v1.RoleRef
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.
If the RoleRef cannot be resolved, the Authorizer must return an error.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentFilter&#34;&gt;
[]EnvironmentFilter
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;specifies which sets of environments this binding applies to&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBindingStatus&#34;&gt;
EnvironmentRoleBindingStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Extension&#34;&gt;Extension
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Extension represents an extension available to this Jenkins X install&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Extension&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionSpec&#34;&gt;
ExtensionSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;script&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;when&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionWhen&#34;&gt;
[]ExtensionWhen
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;given&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionGiven&#34;&gt;
ExtensionGiven
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parameters&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionParameter&#34;&gt;
[]ExtensionParameter
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uuid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;children&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Fact&#34;&gt;Fact
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Fact represents observed facts. Apps will generate Facts about the system.
A naming schema is required since each Fact has a name that&amp;rsquo;s unique for the whole system.
Apps should prefix their generated Facts with the name of the App, like &lt;app-name&gt;-&lt;fact&gt;.
This makes that different Apps can&amp;rsquo;t possibly have conflicting Fact names.&lt;/p&gt;
&lt;p&gt;For an app generating facts on a pipeline, which will be have several different executions, we recommend &lt;app&gt;-&lt;fact&gt;-&lt;pipeline&gt;.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Fact&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;The Fact labels will be used to query the API for interesting Facts.
The Apps responsible for creating Facts need to add the relevant labels.
For example, creating Facts on a pipeline would create Facts with the following labels
{
subjectkind: PipelineActivity
pipelineName: my-org-my-app-master-23
org: my-org
repo: my-app
branch: master
buildNumber: 23
}&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.FactSpec&#34;&gt;
FactSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;factType&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;measurements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Measurement&#34;&gt;
[]Measurement
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;statements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Statement&#34;&gt;
[]Statement
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;original&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Original&#34;&gt;
Original
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subject&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.FactStatus&#34;&gt;
FactStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.GitService&#34;&gt;GitService
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;GitService represents a git provider so we can map the host name to a kinda of git service&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GitService&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.GitServiceSpec&#34;&gt;
GitServiceSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineActivity&#34;&gt;PipelineActivity
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;PipelineActivity represents pipeline activity for a particular run of a pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PipelineActivity&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;
PipelineActivitySpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;build&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStatusType&#34;&gt;
ActivityStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;startedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;completedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;
[]PipelineActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildLogsUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitBranch&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;author&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;authorAvatarURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;authorURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullTitle&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;releaseNotesURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitMessage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflow&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Deprecated - Workflow functionality was removed and is obsolete
Keeping these fields to ensure backwards compatibility
Should be removed when we increment spec version&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflowStatus&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStatusType&#34;&gt;
ActivityStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflowMessage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postExtensions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionExecution&#34;&gt;
[]ExtensionExecution
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;attachments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Attachment&#34;&gt;
[]Attachment
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;batchPipelineActivity&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.BatchPipelineActivity&#34;&gt;
BatchPipelineActivity
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;baseSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStatus&#34;&gt;
PipelineActivityStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineStructure&#34;&gt;PipelineStructure
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;PipelineStructure contains references to the Pipeline and PipelineRun, and a list of PipelineStructureStages in the
pipeline. This allows us to map between a running Pod to its TaskRun, to the TaskRun&amp;rsquo;s Task and PipelineRun, and
finally from there to the stage and potential parent stages that the Pod is actually executing, for use with
populating PipelineActivity and providing logs.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PipelineStructure&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineRunRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stages&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStructureStage&#34;&gt;
[]PipelineStructureStage
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Plugin&#34;&gt;Plugin
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Plugin represents a binary plugin installed into this Jenkins X team&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Plugin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PluginSpec&#34;&gt;
PluginSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subCommand&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;group&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;binaries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Binary&#34;&gt;
[]Binary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Release&#34;&gt;Release
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Release represents a single version of an app that has been released&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseSpec&#34;&gt;
ReleaseSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitHttpUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitCloneUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;commits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitSummary&#34;&gt;
[]CommitSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;issues&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;
[]IssueSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequests&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;
[]IssueSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dependencyUpdates&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdate&#34;&gt;
[]DependencyUpdate
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;releaseNotesURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseStatus&#34;&gt;
ReleaseStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Scheduler&#34;&gt;Scheduler
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Scheduler is configuration for a pipeline scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Scheduler&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;
SchedulerSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schedulerAgent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerAgent&#34;&gt;
SchedulerAgent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;policy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.GlobalProtectionPolicy&#34;&gt;
GlobalProtectionPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;presubmits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Presubmits&#34;&gt;
Presubmits
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postsubmits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Postsubmits&#34;&gt;
Postsubmits
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trigger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Trigger&#34;&gt;
Trigger
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;approve&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Approve&#34;&gt;
Approve
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lgtm&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Lgtm&#34;&gt;
Lgtm
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalPlugins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfExternalPlugins&#34;&gt;
ReplaceableSliceOfExternalPlugins
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;merger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Merger&#34;&gt;
Merger
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;plugins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Plugins is a list of plugin names enabled for a repo&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;configUpdater&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ConfigUpdater&#34;&gt;
ConfigUpdater
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;welcome&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Welcome&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Welcome
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;periodics&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Periodics&#34;&gt;
Periodics
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;attachments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Attachment&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Attachment
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SourceRepository&#34;&gt;SourceRepository
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;SourceRepository is the metadata for an Application/Project/SourceRepository&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SourceRepository&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepositorySpec&#34;&gt;
SourceRepositorySpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;provider&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Provider stores the URL of the git provider such as &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;org&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;providerName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProviderName is a logical name for the provider without any URL scheme which can be used in a label selector&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;providerKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProviderKind is the kind of provider (github / bitbucketcloud / bitbucketserver etc)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL is the web URL of the project page&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sshCloneURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SSHCloneURL is the git URL to clone this repository using SSH&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;httpCloneURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;HTTPCloneURL is the git URL to clone this repository using HTTP/HTTPS&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;scheduler&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Scheduler a reference to a custom scheduler otherwise we default to the Team&amp;rsquo;s Scededuler&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SourceRepositoryGroup&#34;&gt;SourceRepositoryGroup
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;SourceRepositoryGroup is the metadata for an Application/Project/SourceRepository&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SourceRepositoryGroup&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepositoryGroupSpec&#34;&gt;
SourceRepositoryGroupSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repositories&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
[]ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;scheduler&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Team&#34;&gt;Team
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Team represents a request to create an actual Team which is a group of users, a development environment and optional other environments&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Team&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSpec&#34;&gt;
TeamSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamKindType&#34;&gt;
TeamKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;members&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamStatus&#34;&gt;
TeamStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.User&#34;&gt;User
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;User represents a git user so we have a cache to find by email address&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;User&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;user&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Deprecated, use Spec&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;login&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;email&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;creationTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;avatarUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;serviceAccount&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;accountReference&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.AccountReference&#34;&gt;
[]AccountReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalUser&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Workflow&#34;&gt;Workflow
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Workflow represents pipeline activity for a particular run of a pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
string&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;
jenkins.io/v1
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
string
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Workflow&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Standard object&amp;rsquo;s metadata.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata&lt;/a&gt;&lt;/p&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowSpec&#34;&gt;
WorkflowSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStep&#34;&gt;
[]WorkflowStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStatus&#34;&gt;
WorkflowStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.AccountReference&#34;&gt;AccountReference
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;UserDetails&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;AccountReference is a reference to a user account in another system that is attached to this user&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;provider&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;id&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ActivityStatusType&#34;&gt;ActivityStatusType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;CoreActivityStep&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ActivityStatusType is the status of an activity; usually succeeded or failed/error on completion&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ActivityStepKindType&#34;&gt;ActivityStepKindType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;PipelineActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ActivityStepKindType is a kind of step&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.AppSpec&#34;&gt;AppSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.App&#34;&gt;App&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;AppSpec provides details of the metadata for an App&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schemaPreprocessor&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#container-v1-core&#34;&gt;
Kubernetes core/v1.Container
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schemaPreprocessorRole&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#role-v1-rbac&#34;&gt;
Kubernetes rbac/v1.Role
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineExtension&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineExtension&#34;&gt;
PipelineExtension
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Approve&#34;&gt;Approve
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Approve specifies a configuration for a single approve.&lt;/p&gt;
&lt;p&gt;The configuration for the approve plugin is defined as a list of these structures.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;issueRequired&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;IssueRequired indicates if an associated issue is required for approval in
the specified repos.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requireSelfApproval&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RequireSelfApproval requires PR authors to explicitly approve their PRs.
Otherwise the plugin assumes the author of the PR approves the changes in the PR.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lgtmActsAsApprove&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;LgtmActsAsApprove indicates that the lgtm command should be used to
indicate approval&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ignoreReviewState&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;IgnoreReviewState causes the approve plugin to ignore the GitHub review state. Otherwise:
* an APPROVE github review is equivalent to leaving an &amp;ldquo;/approve&amp;rdquo; message.
* A REQUEST_CHANGES github review is equivalent to leaving an /approve cancel&amp;rdquo; message.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Attachment&#34;&gt;Attachment
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;urls&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.BatchPipelineActivity&#34;&gt;BatchPipelineActivity
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BatchPipelineActivity contains information about a batch build, used by both the batch build and its comprising PRs for linking them together&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;batchBuildNumber&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;batchBranchName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestInfo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PullRequestInfo&#34;&gt;
[]PullRequestInfo
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Binary&#34;&gt;Binary
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PluginSpec&#34;&gt;PluginSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Binary provies the details of a downloadable binary&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;goarch&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;goos&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.BranchProtectionContextPolicy&#34;&gt;BranchProtectionContextPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicy&#34;&gt;ProtectionPolicy&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BranchProtectionContextPolicy configures required git provider contexts.
Strict determines whether merging to the branch invalidates existing contexts.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;contexts&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Contexts appends required contexts that must be green to merge&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;strict&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Strict overrides whether new commits in the base branch require updating the PR if set&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Brancher&#34;&gt;Brancher
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Postsubmit&#34;&gt;Postsubmit&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Presubmit&#34;&gt;Presubmit&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Brancher is for shared code between jobs that only run against certain
branches. An empty brancher runs against all branches.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;skipBranches&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Do not run against these branches. Default is no branches.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;branches&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Only run against these branches. Default is all branches.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.BuildPackSpec&#34;&gt;BuildPackSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.BuildPack&#34;&gt;BuildPack&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;BuildPackSpec is the specification of an BuildPack&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;quickstartLocations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.QuickStartLocation&#34;&gt;
[]QuickStartLocation
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ChartRef&#34;&gt;ChartRef
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionRepositoryReference&#34;&gt;ExtensionRepositoryReference&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repoName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitStatusCommitReference&#34;&gt;CommitStatusCommitReference
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusDetails&#34;&gt;CommitStatusDetails&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequest&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sha&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitStatusDetails&#34;&gt;CommitStatusDetails
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusSpec&#34;&gt;CommitStatusSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineActivity&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Items&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusItem&#34;&gt;
[]CommitStatusItem
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;checked&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;commit&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusCommitReference&#34;&gt;
CommitStatusCommitReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitStatusItem&#34;&gt;CommitStatusItem
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusDetails&#34;&gt;CommitStatusDetails&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pass&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitStatusSpec&#34;&gt;CommitStatusSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatus&#34;&gt;CommitStatus&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;CommitStatusSpec provides details of a particular commit status&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;items&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusDetails&#34;&gt;
[]CommitStatusDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CommitSummary&#34;&gt;CommitSummary
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseSpec&#34;&gt;ReleaseSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;CommitSummary is the summary of a commit&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;message&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sha&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;author&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;committer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;branch&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;issueIds&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ConfigMapSpec&#34;&gt;ConfigMapSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ConfigUpdater&#34;&gt;ConfigUpdater&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ConfigMapSpec contains configuration options for the configMap being updated
by the config-updater plugin.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name of ConfigMap&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;key&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Key is the key in the ConfigMap to update with the file contents.
If no explicit key is given, the basename of the file will be used.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace in which the configMap needs to be deployed. If no namespace is specified
it will be deployed to the ProwJobNamespace.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;additional_namespaces&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespaces in which the configMap needs to be deployed, in addition to the above
namespace provided, or the default if it is not set.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;-&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespaces is the fully resolved list of Namespaces to deploy the ConfigMap in&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ConfigUpdater&#34;&gt;ConfigUpdater
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ConfigUpdater holds configuration for the config updater plugin&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;map&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ConfigMapSpec&#34;&gt;
map[string]github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ConfigMapSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;configFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pluginFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ConfigMap&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ConfigMapSpec&#34;&gt;
ConfigMapSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ContextPolicy&#34;&gt;ContextPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Merger&#34;&gt;Merger&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.RepoContextPolicy&#34;&gt;RepoContextPolicy&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ContextPolicy configures options about how to handle various contexts.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;skipUnknownContexts&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;whether to consider unknown contexts optional (skip) or required.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requiredContexts&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requiredIfPresentContexts&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;optionalContexts&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;fromBranchProtection&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Infer required and optional jobs from Branch Protection configuration&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.CoreActivityStep&#34;&gt;CoreActivityStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PreviewActivityStep&#34;&gt;PreviewActivityStep&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.PromoteActivityStep&#34;&gt;PromoteActivityStep&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.PromotePullRequestStep&#34;&gt;PromotePullRequestStep&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.PromoteUpdateStep&#34;&gt;PromoteUpdateStep&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.StageActivityStep&#34;&gt;StageActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;CoreActivityStep is a base step included in Stages of a pipeline or other kinds of step&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStatusType&#34;&gt;
ActivityStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;startedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;completedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.DependencyUpdate&#34;&gt;DependencyUpdate
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseSpec&#34;&gt;ReleaseSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;DependencyUpdate describes an dependency update message from the commit log&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;DependencyUpdateDetails&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdateDetails&#34;&gt;
DependencyUpdateDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;DependencyUpdateDetails&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;paths&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdatePath&#34;&gt;
[]DependencyUpdatePath
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.DependencyUpdateDetails&#34;&gt;DependencyUpdateDetails
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdate&#34;&gt;DependencyUpdate&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;DependencyUpdateDetails are the details of a dependency update&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;host&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;owner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;component&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;fromVersion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;fromReleaseHTMLURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;fromReleaseName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;toVersion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;toReleaseHTMLURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;toReleaseName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.DependencyUpdatePath&#34;&gt;DependencyUpdatePath
(&lt;code&gt;[]github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.DependencyUpdateDetails&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdate&#34;&gt;DependencyUpdate&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;DependencyUpdatePath is the path of a dependency update&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.DeployOptions&#34;&gt;DeployOptions
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;DeployOptions configures options for how to deploy applications by default such as using progressive delivery or using horizontal pod autoscaler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;canary&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Canary should we enable canary rollouts (progressive delivery) for apps by default&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;hpa&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;should we use the horizontal pod autoscaler on new apps by default?&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentFilter&#34;&gt;EnvironmentFilter
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBindingSpec&#34;&gt;EnvironmentRoleBindingSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentFilter specifies the environments to apply the role binding to&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentKindType&#34;&gt;
EnvironmentKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;includes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;excludes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentKindType&#34;&gt;EnvironmentKindType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentFilter&#34;&gt;EnvironmentFilter&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentKindType is the kind of an environment&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentRepository&#34;&gt;EnvironmentRepository
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentRepository is the repository for an environment using GitOps&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRepositoryType&#34;&gt;
EnvironmentRepositoryType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ref&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentRepositoryType&#34;&gt;EnvironmentRepositoryType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRepository&#34;&gt;EnvironmentRepository&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentRepositoryType is the repository type&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentRoleBindingSpec&#34;&gt;EnvironmentRoleBindingSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBinding&#34;&gt;EnvironmentRoleBinding&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentRoleBindingSpec is the specification of an EnvironmentRoleBinding&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subjects&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#subject-v1-rbac&#34;&gt;
[]Kubernetes rbac/v1.Subject
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Subjects holds references to the objects the role applies to.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;roleRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#roleref-v1-rbac&#34;&gt;
Kubernetes rbac/v1.RoleRef
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.
If the RoleRef cannot be resolved, the Authorizer must return an error.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentFilter&#34;&gt;
[]EnvironmentFilter
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;specifies which sets of environments this binding applies to&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentRoleBindingStatus&#34;&gt;EnvironmentRoleBindingStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRoleBinding&#34;&gt;EnvironmentRoleBinding&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentRoleBindingStatus is the status for an EnvironmentRoleBinding resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Environment&#34;&gt;Environment&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentSpec is the specification of an Environment&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promotionStrategy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromotionStrategyType&#34;&gt;
PromotionStrategyType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;source&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentRepository&#34;&gt;
EnvironmentRepository
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;order&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int32
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentKindType&#34;&gt;
EnvironmentKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;teamSettings&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;
TeamSettings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;previewGitInfo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PreviewGitSpec&#34;&gt;
PreviewGitSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;webHookEngine&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WebHookEngineType&#34;&gt;
WebHookEngineType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;remoteCluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RemoteCluster flag indicates if the Environment is deployed in a separate cluster to the Development Environment&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentStatus&#34;&gt;EnvironmentStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Environment&#34;&gt;Environment&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;EnvironmentStatus is the status for an Environment resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.EnvironmentVariable&#34;&gt;EnvironmentVariable
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionExecution&#34;&gt;ExtensionExecution&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;value&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionConfig&#34;&gt;ExtensionConfig
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ExtensionConfig is the configuration and enablement for an extension inside an app&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parameters&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionParameterValue&#34;&gt;
[]ExtensionParameterValue
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionDefinition&#34;&gt;ExtensionDefinition
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ExtensionDefinition defines an Extension&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uuid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;when&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionWhen&#34;&gt;
[]ExtensionWhen
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;given&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionGiven&#34;&gt;
ExtensionGiven
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;children&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionDefinitionChildReference&#34;&gt;
[]ExtensionDefinitionChildReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;scriptFile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parameters&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionParameter&#34;&gt;
[]ExtensionParameter
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionDefinitionChildReference&#34;&gt;ExtensionDefinitionChildReference
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionDefinition&#34;&gt;ExtensionDefinition&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionDefinitionChildReference provides a reference to a child&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uuid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;remote&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tag&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionDefinitionReference&#34;&gt;ExtensionDefinitionReference
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ExtensionRepositoryReference references a GitHub repo that contains extension definitions&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;remote&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tag&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionExecution&#34;&gt;ExtensionExecution
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionExecution is an executable instance of an extension which can be attached into a pipeline for later execution.
It differs from an Extension as it cannot have children and parameters have been resolved to environment variables&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;script&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environmentVariables&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentVariable&#34;&gt;
[]EnvironmentVariable
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;given&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionGiven&#34;&gt;
ExtensionGiven
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uuid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionGiven&#34;&gt;ExtensionGiven
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionDefinition&#34;&gt;ExtensionDefinition&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ExtensionExecution&#34;&gt;ExtensionExecution&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ExtensionSpec&#34;&gt;ExtensionSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionGiven specifies the condition (if the extension is executing in a pipeline on which the extension should execute. By default Always.&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionParameter&#34;&gt;ExtensionParameter
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionDefinition&#34;&gt;ExtensionDefinition&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ExtensionSpec&#34;&gt;ExtensionSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionParameter describes a parameter definition for an extension&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environmentVariableName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;defaultValue&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionParameterValue&#34;&gt;ExtensionParameterValue
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionConfig&#34;&gt;ExtensionConfig&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;value&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionRepositoryReference&#34;&gt;ExtensionRepositoryReference
&lt;/h3&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;github&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;chart&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ChartRef&#34;&gt;
ChartRef
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionSpec&#34;&gt;ExtensionSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Extension&#34;&gt;Extension&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionSpec provides details of an extension available for a team&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;script&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;when&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionWhen&#34;&gt;
[]ExtensionWhen
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;given&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionGiven&#34;&gt;
ExtensionGiven
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parameters&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionParameter&#34;&gt;
[]ExtensionParameter
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uuid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;children&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExtensionWhen&#34;&gt;ExtensionWhen
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionDefinition&#34;&gt;ExtensionDefinition&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ExtensionSpec&#34;&gt;ExtensionSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ExtensionWhen specifies when in the lifecycle an extension should execute. By default Post.&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ExternalPlugin&#34;&gt;ExternalPlugin
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;ExternalPlugin holds configuration for registering an external
plugin.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name of the plugin.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;endpoint&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Endpoint is the location of the external plugin. Defaults to
the name of the plugin, ie. &amp;ldquo;http://{{name}}&amp;rdquo;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;events&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ReplaceableSliceOfStrings are the events that need to be demuxed by the hook
server to the external plugin. If no events are specified,
everything is sent.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.FactSpec&#34;&gt;FactSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Fact&#34;&gt;Fact&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;FactSpec is the specification of a Fact&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;factType&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;measurements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Measurement&#34;&gt;
[]Measurement
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;statements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Statement&#34;&gt;
[]Statement
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;original&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Original&#34;&gt;
Original
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subject&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.FactStatus&#34;&gt;FactStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Fact&#34;&gt;Fact&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;FactStatus is the status for an Fact resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.GitServiceSpec&#34;&gt;GitServiceSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.GitService&#34;&gt;GitService&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;GitServiceSpec is the specification of an GitService&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.GitStatus&#34;&gt;GitStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteUpdateStep&#34;&gt;PromoteUpdateStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;GitStatus the status of a git commit in terms of CI/CD&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.GlobalProtectionPolicy&#34;&gt;GlobalProtectionPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;GlobalProtectionPolicy defines the default branch protection policy for the scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ProtectionPolicy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicy&#34;&gt;
ProtectionPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;protectTested&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ImportModeType&#34;&gt;ImportModeType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ImportModeType is the type of import mode for new projects in a team&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.IssueLabel&#34;&gt;IssueLabel
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;IssueSummary&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;color&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.IssueSummary&#34;&gt;IssueSummary
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseSpec&#34;&gt;ReleaseSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;IssueSummary is the summary of an issue&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;id&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;title&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;body&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;state&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;message&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;user&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;assignees&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
[]UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;closedBy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserDetails&#34;&gt;
UserDetails
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;creationTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;labels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueLabel&#34;&gt;
[]IssueLabel
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.JobBase&#34;&gt;JobBase
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Periodic&#34;&gt;Periodic&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Postsubmit&#34;&gt;Postsubmit&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Presubmit&#34;&gt;Presubmit&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;JobBase contains attributes common to all job types&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;The name of the job. Must match regex [A-Za-z0-9-._]+
e.g. pull-test-infra-bazel-build&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;labels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableMapOfStringString&#34;&gt;
ReplaceableMapOfStringString
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ReplaceableMapOfStringString are added to jobs and pods created for this job.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;maxConcurrency&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;MaximumConcurrency of this job, 0 implies no limit.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Agent that will take care of running this job.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cluster&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Cluster is the alias of the cluster to run this job in.
(Default: kube.DefaultClusterAlias)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;namespace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Namespace is the namespace in which pods schedule.
empty: results in scheduler.DefaultNamespace&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#podspec-v1-core&#34;&gt;
Kubernetes core/v1.PodSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Spec is the Kubernetes pod spec used if Agent is kubernetes.&lt;/p&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;table&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Lgtm&#34;&gt;Lgtm
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Lgtm specifies a configuration for a single lgtm.
The configuration for the lgtm plugin is defined as a list of these structures.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;reviewActsAsLgtm&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ReviewActsAsLgtm indicates that a Github review of &amp;ldquo;approve&amp;rdquo; or &amp;ldquo;request changes&amp;rdquo;
acts as adding or removing the lgtm label&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;storeTreeHash&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;StoreTreeHash indicates if tree_hash should be stored inside a comment to detect
squashed commits before removing lgtm labels&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trustedTeamForStickyLgtm&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;WARNING: This disables the security mechanism that prevents a malicious member (or
compromised GitHub account) from merging arbitrary code. Use with caution.&lt;/p&gt;
&lt;p&gt;StickyLgtmTeam specifies the Github team whose members are trusted with sticky LGTM,
which eliminates the need to re-lgtm minor fixes/updates.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Measurement&#34;&gt;Measurement
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.FactSpec&#34;&gt;FactSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Measurement is a percentage or a count, something measured that the system will capture within a fact&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;measurementType&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;measurementValue&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Merger&#34;&gt;Merger
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Merger defines the options used to merge the PR&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;-&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
time.Duration
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SyncPeriod specifies how often Merger will sync jobs with Github. Defaults to 1m.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;-&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
time.Duration
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;StatusUpdatePeriod&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;targetUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL for status contexts.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;prStatusBaseUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;PRStatusBaseURL is the base URL for the PR status page.
This is used to link to a merge requirements overview
in the status context.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;blockerLabel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;BlockerLabel is an optional label that is used to identify merge blocking
Git Provider issues.
Leave this blank to disable this feature and save 1 API token per sync loop.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;squashLabel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SquashLabel is an optional label that is used to identify PRs that should
always be squash merged.
Leave this blank to disable this feature.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;maxGoroutines&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;MaxGoroutines is the maximum number of goroutines spawned inside the
controller to handle org/repo:branch pools. Defaults to 20. Needs to be a
positive number.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;mergeMethod&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Override the default method of merge. Valid options are squash, rebase, and merge.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;policy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ContextPolicy&#34;&gt;
ContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ContextOptions defines the default merge options. If not set it will infer
the required and optional contexts from the jobs configured and use the Git Provider
combined status; otherwise it may apply the branch protection setting or let user
define their own options in case branch protection is not used.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Original&#34;&gt;Original
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.FactSpec&#34;&gt;FactSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Original contains the report&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;mimetype&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Periodic&#34;&gt;Periodic
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Periodic defines a job to be run periodically&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;JobBase&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.JobBase&#34;&gt;
JobBase
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;interval&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Interval to wait between two runs of the job.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;cron&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Cron representation of job trigger time&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Tags for config entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Periodics&#34;&gt;Periodics
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Periodics is a list of jobs to be run periodically&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Periodic&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Periodic
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Items are the post submit configurations&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace the existing entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivity&#34;&gt;PipelineActivity&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineActivitySpec is the specification of the pipeline activity&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;build&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStatusType&#34;&gt;
ActivityStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;startedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;completedTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;
[]PipelineActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildLogsUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitBranch&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;author&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;authorAvatarURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;authorURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullTitle&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;releaseNotesURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitMessage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastCommitURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflow&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Deprecated - Workflow functionality was removed and is obsolete
Keeping these fields to ensure backwards compatibility
Should be removed when we increment spec version&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflowStatus&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStatusType&#34;&gt;
ActivityStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;workflowMessage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postExtensions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ExtensionExecution&#34;&gt;
[]ExtensionExecution
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;attachments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Attachment&#34;&gt;
[]Attachment
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;batchPipelineActivity&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.BatchPipelineActivity&#34;&gt;
BatchPipelineActivity
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;baseSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineActivityStatus&#34;&gt;PipelineActivityStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivity&#34;&gt;PipelineActivity&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineActivityStatus is the status for an Environment resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineActivityStep&#34;&gt;PipelineActivityStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivitySpec&#34;&gt;PipelineActivitySpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineActivityStep represents a step in a pipeline activity&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ActivityStepKindType&#34;&gt;
ActivityStepKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.StageActivityStep&#34;&gt;
StageActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promote&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteActivityStep&#34;&gt;
PromoteActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;preview&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PreviewActivityStep&#34;&gt;
PreviewActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineExtension&#34;&gt;PipelineExtension
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.AppSpec&#34;&gt;AppSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineExtension defines the image and command of an app which wants to modify/extend the pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name of the container specified as a DNS_LABEL.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;image&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Docker image name.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;command&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Entrypoint array. Not executed within a shell.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;args&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Arguments to the entrypoint.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineStageAndChildren&#34;&gt;PipelineStageAndChildren
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStageAndChildren&#34;&gt;PipelineStageAndChildren&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineStageAndChildren represents a single stage and its children.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Stage&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStructureStage&#34;&gt;
PipelineStructureStage
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Parallel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStageAndChildren&#34;&gt;
[]PipelineStageAndChildren
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Stages&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStageAndChildren&#34;&gt;
[]PipelineStageAndChildren
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PipelineStructureStage&#34;&gt;PipelineStructureStage
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineStructure&#34;&gt;PipelineStructure&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.PipelineStageAndChildren&#34;&gt;PipelineStageAndChildren&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PipelineStructureStage contains the stage&amp;rsquo;s name, one of either a reference to the Task corresponding
to the stage if it has steps, a list of sequential stage names nested within this stage, or a list of parallel stage
names nested within this stage, and information on this stage&amp;rsquo;s depth within the PipelineStructure as a whole, the
name of its parent stage, if any, the name of the stage before it in execution order, if any, and the name of the
stage after it in execution order, if any.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;taskRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Must have one of TaskRef+TaskRunRef, Stages, or Parallel&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;taskRunRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;p&gt;Populated during pod discovery, not at initial creation time.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;stages&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parallel&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;depth&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
byte
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;parent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;previous&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;next&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PluginSpec&#34;&gt;PluginSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Plugin&#34;&gt;Plugin&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PluginSpec provides details of a binary plugin available for a team&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;subCommand&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;group&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;binaries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Binary&#34;&gt;
[]Binary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Postsubmit&#34;&gt;Postsubmit
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Postsubmit runs on push events.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;JobBase&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.JobBase&#34;&gt;
JobBase
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;RegexpChangeMatcher&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.RegexpChangeMatcher&#34;&gt;
RegexpChangeMatcher
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Brancher&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Brancher&#34;&gt;
Brancher
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Context is the name of the GitHub status context for the job.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;report&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Report will comment and set status on GitHub.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Postsubmits&#34;&gt;Postsubmits
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Postsubmits is a list of Postsubmit job configurations that can optionally completely replace the Postsubmit job
configurations in the parent scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Postsubmit&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Postsubmit
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Items are the post submit configurations&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace the existing entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Presubmit&#34;&gt;Presubmit
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Presubmit defines a job configuration for pull requests&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;JobBase&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.JobBase&#34;&gt;
JobBase
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Brancher&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Brancher&#34;&gt;
Brancher
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;RegexpChangeMatcher&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.RegexpChangeMatcher&#34;&gt;
RegexpChangeMatcher
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;alwaysRun&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;AlwaysRun automatically for every PR, or only when a comment triggers it. By default true.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Context is the name of the Git Provider status context for the job.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;optional&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Optional indicates that the job&amp;rsquo;s status context should not be required for merge. By default false.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;report&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Report enables reporting the job status on the git provider&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trigger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Trigger is the regular expression to trigger the job.
e.g. &lt;code&gt;@k8s-bot e2e test this&lt;/code&gt;
RerunCommand must also be specified if this field is specified.
(Default: &lt;code&gt;(?m)^/test (?:.*? )?&amp;lt;job name&amp;gt;(?: .*?)?$&lt;/code&gt;)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;rerunCommand&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;The RerunCommand to give users. Must match Trigger.
Trigger must also be specified if this field is specified.
(Default: &lt;code&gt;/test &amp;lt;job name&amp;gt;&lt;/code&gt;)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;mergeMethod&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Override the default method of merge. Valid options are squash, rebase, and merge.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;queries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Query&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Query
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;policy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicies&#34;&gt;
ProtectionPolicies
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;context_options&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.RepoContextPolicy&#34;&gt;
RepoContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ContextOptions defines the merge options. If not set it will infer
the required and optional contexts from the jobs configured and use the Git Provider
combined status; otherwise it may apply the branch protection setting or let user
define their own options in case branch protection is not used.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Presubmits&#34;&gt;Presubmits
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Presubmits is a list of Presubmit job configurations that can optionally completely replace the Presubmit job
configurations in the parent scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Presubmit&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Presubmit
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Items are the Presubmit configurtations&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace the existing entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PreviewActivityStep&#34;&gt;PreviewActivityStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;PipelineActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PreviewActivityStep is the step of creating a preview environment as part of a Pull Request pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CoreActivityStep&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;CoreActivityStep&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;applicationURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PreviewGitSpec&#34;&gt;PreviewGitSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PreviewGitSpec is the preview git branch/pull request details&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;user&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.UserSpec&#34;&gt;
UserSpec
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;title&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildStatus&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildStatusUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;appName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;applicationURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromoteActivityStep&#34;&gt;PromoteActivityStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;PipelineActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromoteActivityStep is the step of promoting a version of an application to an environment&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CoreActivityStep&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;CoreActivityStep&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequest&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromotePullRequestStep&#34;&gt;
PromotePullRequestStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;update&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteUpdateStep&#34;&gt;
PromoteUpdateStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;applicationURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromotePullRequestStep&#34;&gt;PromotePullRequestStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteActivityStep&#34;&gt;PromoteActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromotePullRequestStep is the step for promoting a version to an environment by raising a Pull Request on the
git repository of the environment&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CoreActivityStep&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;CoreActivityStep&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;mergeCommitSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromoteUpdateStep&#34;&gt;PromoteUpdateStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteActivityStep&#34;&gt;PromoteActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromoteUpdateStep is the step for updating a promotion after the Pull Request merges to master&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CoreActivityStep&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;CoreActivityStep&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;statuses&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.GitStatus&#34;&gt;
[]GitStatus
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromoteWorkflowStep&#34;&gt;PromoteWorkflowStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStep&#34;&gt;WorkflowStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromoteWorkflowStep is the step of promoting a version of an application to an environment&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environment&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromotionEngineType&#34;&gt;PromotionEngineType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromotionEngineType is the type of promotion implementation the team uses&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.PromotionStrategyType&#34;&gt;PromotionStrategyType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PromotionStrategyType is the type of a promotion strategy&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ProtectionPolicies&#34;&gt;ProtectionPolicies
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Presubmit&#34;&gt;Presubmit&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ProtectionPolicies defines the branch protection policies&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ProtectionPolicy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicy&#34;&gt;
ProtectionPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;em&gt;(Optional)&lt;/em&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ProtectionPolicy&#34;&gt;
map[string]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ProtectionPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ProtectionPolicy&#34;&gt;ProtectionPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.GlobalProtectionPolicy&#34;&gt;GlobalProtectionPolicy&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicies&#34;&gt;ProtectionPolicies&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ProtectionPolicy for merging.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;protect&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Protect overrides whether branch protection is enabled if set.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requiredStatusChecks&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.BranchProtectionContextPolicy&#34;&gt;
BranchProtectionContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RequiredStatusChecks configures github contexts&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;enforceAdmins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Admins overrides whether protections apply to admins if set.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;restrictions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Restrictions&#34;&gt;
Restrictions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Restrictions limits who can merge&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requiredPullRequestReviews&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReviewPolicy&#34;&gt;
ReviewPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RequiredPullRequestReviews specifies approval/review criteria.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ProwConfigType&#34;&gt;ProwConfigType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ProwConfigType is the type of prow configuration&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ProwEngineType&#34;&gt;ProwEngineType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ProwEngineType is the type of prow execution engine&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.PullRequestInfo&#34;&gt;PullRequestInfo
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.BatchPipelineActivity&#34;&gt;BatchPipelineActivity&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;PullRequestInfo contains information about a PR included in a batch, like its PR number, the last build number, and SHA&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequestNumber&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastBuildNumberForCommit&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;LastBuildNumberForCommit is the number of the last successful build of this PR outside of a batch&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lastBuildSHA&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;LastBuildSHA is the commit SHA in the last successful build of this PR outside of a batch.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.PullRequestMergeType&#34;&gt;PullRequestMergeType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;PullRequestMergeType enumerates the types of merges the Git Provider API can
perform
&lt;a href=&#34;https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button&#34;&gt;https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.Query&#34;&gt;Query
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Query is turned into a Git Provider search query. See the docs for details:
&lt;a href=&#34;https://help.github.com/articles/searching-issues-and-pull-requests/&#34;&gt;https://help.github.com/articles/searching-issues-and-pull-requests/&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;excludedBranches&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;includedBranches&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;labels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;missingLabels&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;milestone&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;reviewApprovedRequired&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.QuickStartLocation&#34;&gt;QuickStartLocation
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.BuildPackSpec&#34;&gt;BuildPackSpec&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;QuickStartLocation&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;owner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;includes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;excludes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.RegexpChangeMatcher&#34;&gt;RegexpChangeMatcher
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Postsubmit&#34;&gt;Postsubmit&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Presubmit&#34;&gt;Presubmit&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;RegexpChangeMatcher is for code shared between jobs that run only when certain files are changed.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;runIfChanged&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RunIfChanged defines a regex used to select which subset of file changes should trigger this job.
If any file in the changeset matches this regex, the job will be triggered&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReleaseSpec&#34;&gt;ReleaseSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Release&#34;&gt;Release&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReleaseSpec is the specification of the Release&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitHttpUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitCloneUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;commits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitSummary&#34;&gt;
[]CommitSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;issues&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;
[]IssueSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pullRequests&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;
[]IssueSummary
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dependencyUpdates&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.DependencyUpdate&#34;&gt;
[]DependencyUpdate
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;releaseNotesURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitOwner&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReleaseStatus&#34;&gt;ReleaseStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Release&#34;&gt;Release&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReleaseStatus is the status of a release&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;status&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseStatusType&#34;&gt;
ReleaseStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReleaseStatusType&#34;&gt;ReleaseStatusType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReleaseStatus&#34;&gt;ReleaseStatus&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReleaseStatusType is the status of a release; usually deployed or failed at completion&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReplaceableMapOfStringContextPolicy&#34;&gt;ReplaceableMapOfStringContextPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.RepoContextPolicy&#34;&gt;RepoContextPolicy&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReplaceableMapOfStringContextPolicy is a map of context policies that can optionally completely replace any
context policies defined in the parent scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Items&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ContextPolicy&#34;&gt;
map[string]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReplaceableMapOfStringString&#34;&gt;ReplaceableMapOfStringString
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.JobBase&#34;&gt;JobBase&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReplaceableMapOfStringString is a map of strings that can optionally completely replace the map of strings in the
parent scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
map[string]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace the existing entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReplaceableSliceOfExternalPlugins&#34;&gt;ReplaceableSliceOfExternalPlugins
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReplaceableSliceOfExternalPlugins is a list of external plugins that can optionally completely replace the plugins
in any parent SchedulerSpec&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;Replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ExternalPlugin&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.ExternalPlugin
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;ReplaceableSliceOfStrings
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.BranchProtectionContextPolicy&#34;&gt;BranchProtectionContextPolicy&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Brancher&#34;&gt;Brancher&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ContextPolicy&#34;&gt;ContextPolicy&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ExternalPlugin&#34;&gt;ExternalPlugin&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Periodic&#34;&gt;Periodic&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Query&#34;&gt;Query&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.Restrictions&#34;&gt;Restrictions&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReplaceableSliceOfStrings is a slice of strings that can optionally completely replace the slice of strings
defined in the parent scheduler&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;entries&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Items is the string values&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;replace&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Replace the existing entries&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.RepoContextPolicy&#34;&gt;RepoContextPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Presubmit&#34;&gt;Presubmit&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;RepoContextPolicy overrides the policy for repo, and any branch overrides.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ContextPolicy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ContextPolicy&#34;&gt;
ContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;branches&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableMapOfStringContextPolicy&#34;&gt;
ReplaceableMapOfStringContextPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ResourceReference&#34;&gt;ResourceReference
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.CommitStatusDetails&#34;&gt;CommitStatusDetails&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.FactSpec&#34;&gt;FactSpec&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.SourceRepositoryGroupSpec&#34;&gt;SourceRepositoryGroupSpec&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.SourceRepositorySpec&#34;&gt;SourceRepositorySpec&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;apiVersion&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;API version of the referent.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Kind of the referent.
More info: &lt;a href=&#34;https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds&#34;&gt;https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Name of the referent.
More info: &lt;a href=&#34;http://kubernetes.io/docs/user-guide/identifiers#names&#34;&gt;http://kubernetes.io/docs/user-guide/identifiers#names&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;uid&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
k8s.io/apimachinery/pkg/types.UID
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;UID of the referent.
More info: &lt;a href=&#34;http://kubernetes.io/docs/user-guide/identifiers#uids&#34;&gt;http://kubernetes.io/docs/user-guide/identifiers#uids&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Restrictions&#34;&gt;Restrictions
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicy&#34;&gt;ProtectionPolicy&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.ReviewPolicy&#34;&gt;ReviewPolicy&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Restrictions limits who can merge
Users and Teams entries are appended to parent lists.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;users&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;teams&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.ReviewPolicy&#34;&gt;ReviewPolicy
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProtectionPolicy&#34;&gt;ProtectionPolicy&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;ReviewPolicy specifies git provider approval/review criteria.
Any nil values inherit the policy from the parent, otherwise bool/ints are overridden.
Non-empty lists are appended to parent lists.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dismissalRestrictions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Restrictions&#34;&gt;
Restrictions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Restrictions appends users/teams that are allowed to merge&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dismissStaleReviews&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DismissStale overrides whether new commits automatically dismiss old reviews if set&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requireCodeOwnerReviews&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;RequireOwners overrides whether CODEOWNERS must approve PRs if set&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;requiredApprovingReviewCount&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
int
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Approvals overrides the number of approvals required if set (set to 0 to disable)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SchedulerAgent&#34;&gt;SchedulerAgent
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;SchedulerAgent defines the scheduler agent configuration&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;agent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Agent defines the agent used to schedule jobs, by default Prow&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Scheduler&#34;&gt;Scheduler&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;SchedulerSpec defines the pipeline scheduler (e.g. Prow) configuration&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;schedulerAgent&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerAgent&#34;&gt;
SchedulerAgent
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;policy&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.GlobalProtectionPolicy&#34;&gt;
GlobalProtectionPolicy
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;presubmits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Presubmits&#34;&gt;
Presubmits
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postsubmits&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Postsubmits&#34;&gt;
Postsubmits
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trigger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Trigger&#34;&gt;
Trigger
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;approve&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Approve&#34;&gt;
Approve
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;lgtm&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Lgtm&#34;&gt;
Lgtm
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalPlugins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfExternalPlugins&#34;&gt;
ReplaceableSliceOfExternalPlugins
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;merger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Merger&#34;&gt;
Merger
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;plugins&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ReplaceableSliceOfStrings&#34;&gt;
ReplaceableSliceOfStrings
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Plugins is a list of plugin names enabled for a repo&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;configUpdater&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ConfigUpdater&#34;&gt;
ConfigUpdater
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;welcome&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Welcome&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Welcome
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;periodics&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.Periodics&#34;&gt;
Periodics
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;attachments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Attachment&#34;&gt;
[]*github.com/jenkins-x/jx-api/pkg/apis/jenkins.io/v1.Attachment
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SourceRepositoryGroupSpec&#34;&gt;SourceRepositoryGroupSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepositoryGroup&#34;&gt;SourceRepositoryGroup&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;SourceRepositoryGroupSpec is the metadata for an Application/Project/SourceRepository&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;metadata&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#objectmeta-v1-meta&#34;&gt;
Kubernetes meta/v1.ObjectMeta
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
Refer to the Kubernetes API documentation for the fields of the
&lt;code&gt;metadata&lt;/code&gt; field.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repositories&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
[]ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;scheduler&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.SourceRepositorySpec&#34;&gt;SourceRepositorySpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SourceRepository&#34;&gt;SourceRepository&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;SourceRepositorySpec provides details of the metadata for an App&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;provider&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Provider stores the URL of the git provider such as &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;org&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;repo&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;providerName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProviderName is a logical name for the provider without any URL scheme which can be used in a label selector&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;providerKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProviderKind is the kind of provider (github / bitbucketcloud / bitbucketserver etc)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;URL is the web URL of the project page&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;sshCloneURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;SSHCloneURL is the git URL to clone this repository using SSH&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;httpCloneURL&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;HTTPCloneURL is the git URL to clone this repository using HTTP/HTTPS&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;scheduler&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Scheduler a reference to a custom scheduler otherwise we default to the Team&amp;rsquo;s Scededuler&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.StageActivityStep&#34;&gt;StageActivityStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PipelineActivityStep&#34;&gt;PipelineActivityStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StageActivityStep represents a stage of zero to more sub steps in a jenkins pipeline&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;CoreActivityStep&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;
(Members of &lt;code&gt;CoreActivityStep&lt;/code&gt; are embedded into this type.)
&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.CoreActivityStep&#34;&gt;
[]CoreActivityStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Statement&#34;&gt;Statement
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.FactSpec&#34;&gt;FactSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Statement represents a decision that was made, for example that a promotion was approved or denied&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;statementType&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;measurementValue&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;tags&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.StorageLocation&#34;&gt;StorageLocation
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;StorageLocation&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;classifier&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitBranch&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;bucketUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.TeamKindType&#34;&gt;TeamKindType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamSpec&#34;&gt;TeamSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TeamKindType is the kind of an Team&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.TeamProvisionStatusType&#34;&gt;TeamProvisionStatusType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamStatus&#34;&gt;TeamStatus&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TeamProvisionStatusType is the kind of an Team&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.TeamSettings&#34;&gt;TeamSettings
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TeamSettings the default settings for a team&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;useGitOps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;askOnCreate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;branchPatterns&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;forkBranchPatterns&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;quickstartLocations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.QuickStartLocation&#34;&gt;
[]QuickStartLocation
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;helmBinary&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;postPreviewJobs&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#job-v1-batch&#34;&gt;
[]Kubernetes batch/v1.Job
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promotionEngine&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromotionEngineType&#34;&gt;
PromotionEngineType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;noTiller&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;helmTemplate&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitServer&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;organisation&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;envOrganisation&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineUsername&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipelineUserEmail&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;dockerRegistryOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;gitPublic&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kubeProvider&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;appsRepository&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;buildPackName&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;storageLocations&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.StorageLocation&#34;&gt;
[]StorageLocation
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;deployKind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DeployKind what kind of deployment (&amp;ldquo;default&amp;rdquo; uses regular Kubernetes Services and Deployments, &amp;ldquo;knative&amp;rdquo; uses the Knative Service resource instead)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;importMode&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ImportModeType&#34;&gt;
ImportModeType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ImportMode indicates what kind of&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;prowEngine&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProwEngineType&#34;&gt;
ProwEngineType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProwEngine is the kind of prow engine used such as knative build or build pipeline&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;versionStreamUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;VersionStreamURL contains the git clone URL for the Version Stream which is the set of versions to use for charts, images, packages etc&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;versionStreamRef&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;VersionStreamRef contains the git ref (tag or branch) in the VersionStreamURL repository to use as the version stream&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;appPrefixes&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;AppsPrefixes is the list of prefixes for appNames&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;defaultScheduler&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ResourceReference&#34;&gt;
ResourceReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;prowConfig&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.ProwConfigType&#34;&gt;
ProwConfigType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;ProwConfig is the way we manage prow configurations&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;profile&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Profile is the profile in use (see jx profile)&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;bootRequirements&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;BootRequirements is a marshaled string of the jx-requirements.yml used in the most recent run for this cluster&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;deployOptions&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.DeployOptions&#34;&gt;
DeployOptions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;DeployOptions configures options for how to deploy applications by default such as using canary rollouts (progressive delivery) or using horizontal pod autoscaler&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.TeamSpec&#34;&gt;TeamSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Team&#34;&gt;Team&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TeamSpec is the specification of an Team&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;label&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamKindType&#34;&gt;
TeamKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;members&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.TeamStatus&#34;&gt;TeamStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Team&#34;&gt;Team&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;TeamStatus is the status for an Team resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;provisionStatus&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.TeamProvisionStatusType&#34;&gt;
TeamProvisionStatusType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;message&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.Trigger&#34;&gt;Trigger
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.SchedulerSpec&#34;&gt;SchedulerSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Trigger specifies a configuration for a single trigger.&lt;/p&gt;
&lt;p&gt;The configuration for the trigger plugin is defined as a list of these structures.&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trustedOrg&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;TrustedOrg is the org whose members&amp;rsquo; PRs will be automatically built
for PRs to the above repos. The default is the PR&amp;rsquo;s org.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;joinOrgUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;JoinOrgURL is a link that redirects users to a location where they
should be able to read more about joining the organization in order
to become trusted members. Defaults to the Github link of TrustedOrg.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;onlyOrgMembers&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;OnlyOrgMembers requires PRs and/or /ok-to-test comments to come from org members.
By default, trigger also include repo collaborators.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;ignoreOkToTest&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;IgnoreOkToTest makes trigger ignore /ok-to-test comments.
This is a security mitigation to only allow testing from trusted users.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.UserDetails&#34;&gt;UserDetails
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.User&#34;&gt;User&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.CommitSummary&#34;&gt;CommitSummary&lt;/a&gt;, 
&lt;a href=&#34;#jenkins.io/v1.IssueSummary&#34;&gt;IssueSummary&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;UserDetails containers details of a user&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;login&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;email&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;creationTimestamp&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#time-v1-meta&#34;&gt;
Kubernetes meta/v1.Time
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;url&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;avatarUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;serviceAccount&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;accountReference&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.AccountReference&#34;&gt;
[]AccountReference
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;externalUser&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
bool
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.UserSpec&#34;&gt;UserSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.PreviewGitSpec&#34;&gt;PreviewGitSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;UserSpec is the user details&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;username&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;linkUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;imageUrl&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WebHookEngineType&#34;&gt;WebHookEngineType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.EnvironmentSpec&#34;&gt;EnvironmentSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WebHookEngineType is the type of webhook processing implementation the team uses&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.Welcome&#34;&gt;Welcome
&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;Welcome welcome plugin config&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;message_template&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowPreconditions&#34;&gt;WorkflowPreconditions
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStep&#34;&gt;WorkflowStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WorkflowPreconditions is the trigger to start a step&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;environments&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
[]string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;the names of the environments which need to have promoted before this step can be triggered&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowSpec&#34;&gt;WorkflowSpec
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Workflow&#34;&gt;Workflow&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WorkflowSpec is the specification of the pipeline activity&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;pipeline&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;steps&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStep&#34;&gt;
[]WorkflowStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowStatus&#34;&gt;WorkflowStatus
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.Workflow&#34;&gt;Workflow&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WorkflowStatus is the status for an Environment resource&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;version&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowStatusType&#34;&gt;WorkflowStatusType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;p&gt;WorkflowStatusType is the status of an activity; usually succeeded or failed/error on completion&lt;/p&gt;
&lt;/p&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowStep&#34;&gt;WorkflowStep
&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowSpec&#34;&gt;WorkflowSpec&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WorkflowStep represents a step in a pipeline activity&lt;/p&gt;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;kind&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStepKindType&#34;&gt;
WorkflowStepKindType
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;name&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;description&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
string
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;trigger&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowPreconditions&#34;&gt;
WorkflowPreconditions
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;code&gt;promote&lt;/code&gt;&lt;/br&gt;
&lt;em&gt;
&lt;a href=&#34;#jenkins.io/v1.PromoteWorkflowStep&#34;&gt;
PromoteWorkflowStep
&lt;/a&gt;
&lt;/em&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;jenkins.io/v1.WorkflowStepKindType&#34;&gt;WorkflowStepKindType
(&lt;code&gt;string&lt;/code&gt; alias)&lt;/p&gt;&lt;/h3&gt;
&lt;p&gt;
(&lt;em&gt;Appears on:&lt;/em&gt;
&lt;a href=&#34;#jenkins.io/v1.WorkflowStep&#34;&gt;WorkflowStep&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;WorkflowStepKindType is a kind of step&lt;/p&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;em&gt;
Generated with &lt;code&gt;gen-crd-api-reference-docs&lt;/code&gt;
on git commit &lt;code&gt;11f2023&lt;/code&gt;.
&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Browsing</title>
      <link>https://jenkins-x.io/docs/resources/guides/using-jx/developing/browsing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/using-jx/developing/browsing/</guid>
      <description>
        
        
        &lt;p&gt;If you have used kubernetes before you&amp;rsquo;re probably used the &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34;&gt;kubectl&lt;/a&gt; command line to view kubernetes resources:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Jenkins X command line tool, &lt;a href=&#34;https://jenkins-x.io/commands/jx/&#34;&gt;jx&lt;/a&gt;, has a similar look and feel to &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34;&gt;kubectl&lt;/a&gt; and lets you get the status of all the Jenkins X resources.&lt;/p&gt;
&lt;h3 id=&#34;view-jenkins-console&#34;&gt;View Jenkins Console&lt;/h3&gt;
&lt;p&gt;If you are familiar with the Jenkins console then you can use &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx console&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to open it in a browser.&lt;/p&gt;
&lt;h3 id=&#34;pipeline-activity&#34;&gt;Pipeline Activity&lt;/h3&gt;
&lt;p&gt;To view the current pipeline activity &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_activities/&#34;&gt;jx get activities&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get activities
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to watch whats going on with your app &lt;code&gt;myapp&lt;/code&gt;  you can use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get activities -f myapp -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which will watch the pipeline activities and update the screen whenever a significant change happens (e.g. a release completes, a PR is created to start &lt;a href=&#34;https://jenkins-x.io/developing/promote/&#34;&gt;promotion&lt;/a&gt; etc).&lt;/p&gt;
&lt;h3 id=&#34;pipeline-build-logs&#34;&gt;Pipeline Build logs&lt;/h3&gt;
&lt;p&gt;To view the current pipeline build logs via &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_build_log/&#34;&gt;jx get build logs&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get build logs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You are then presented with all the possible pipelines to watch.&lt;/p&gt;
&lt;p&gt;You can quickly filter that via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get build logs -f myapp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or if you wish to be explicit&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get build logs myorg/myapp/master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h3&gt;
&lt;p&gt;To view the current configured pipelines use &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_pipelines/&#34;&gt;jx get pipelines&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get pipelines
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;applications&#34;&gt;Applications&lt;/h3&gt;
&lt;p&gt;To view all the applications in your team across all your environments with URLs and pod counts use  &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_applications/&#34;&gt;jx get applications&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to hide the URLs or the pod counts you can use &lt;code&gt;u&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt;. e.g. to hide the URLs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications -u
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or hide the pod counts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications -p
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also filter the apps by an environment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get applications -e staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;environments&#34;&gt;Environments&lt;/h3&gt;
&lt;p&gt;To view the &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt; defined for your team use &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_environments/&#34;&gt;jx get environments&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a new environment via &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_environment/&#34;&gt;jx create environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;edit an environment via &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_environment/&#34;&gt;jx edit environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;delete an environment via &lt;a href=&#34;https://jenkins-x.io/commands/jx_delete_environment/&#34;&gt;jx delete environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Build Packs</title>
      <link>https://jenkins-x.io/docs/create-project/build-packs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/create-project/build-packs/</guid>
      <description>
        
        
        &lt;p&gt;We use &lt;a href=&#34;https://draft.sh/&#34;&gt;draft&lt;/a&gt; style &lt;em&gt;build packs&lt;/em&gt; for different languages, runtimes and build tools to add the necessary configuration files to projects as we &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;import them&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;create&lt;/a&gt; &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;them&lt;/a&gt; so that we can build and deploy them in kubernetes.&lt;/p&gt;
&lt;p&gt;The build packs are used to default the following files if they do not already exist in the project being created/imported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; to turn the code into an immutable docker image for running on kubernetes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; to define the declarative Jenkins pipeline to define the CI/CD steps for the application&lt;/li&gt;
&lt;li&gt;helm chart in the &lt;code&gt;charts&lt;/code&gt; folder to generate the kubernetes resources to run the application on kubernetes&lt;/li&gt;
&lt;li&gt;a &lt;em&gt;preview chart&lt;/em&gt; in the &lt;code&gt;charts/preview&lt;/code&gt; folder to define any dependencies for deploying a &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;preview environment&lt;/a&gt; on a Pull Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The default build packs are at &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&lt;/a&gt; with a folder for each language or build tool.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;jx&lt;/code&gt; command line clones the build packs to your &lt;code&gt;.~/.jx/draft/packs/&lt;/code&gt; folder and updates them via a &lt;code&gt;git pull&lt;/code&gt; each time you try create or import a project.&lt;/p&gt;
&lt;h2 id=&#34;pipeline-extension-model&#34;&gt;Pipeline extension model&lt;/h2&gt;
&lt;p&gt;We have refactored our &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/&#34;&gt;build packs&lt;/a&gt; so that they are more modular and easier to compose and reuse across workloads.&lt;/p&gt;
&lt;p&gt;For example the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x-kubernetes&lt;/a&gt; build pack inherits from the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic&#34;&gt;jenkins-x-classic&lt;/a&gt; build pack, reusing the CI and release pipelines but then adding the kubernetes specific workloads (e.g. building docker images, creating helm charts, &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;Preview Environments&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#promotion&#34;&gt;Promotion via GitOps&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;To do this we&amp;rsquo;ve introduced a simple new YAML file format for defining pipelines.&lt;/p&gt;
&lt;h2 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h2&gt;
&lt;p&gt;Each Pipeline YAML file has a number of separate logical pipelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;release&lt;/code&gt; for processing merges to the &lt;code&gt;master&lt;/code&gt; branch which typically creates a new version and release then triggers promotion&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pullRequest&lt;/code&gt; for processing Pull Requests&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature&lt;/code&gt; for processing merges to a feature branch. Though note that the &lt;a href=&#34;https://jenkins-x.io/about/accelerate/&#34;&gt;accelerate book&lt;/a&gt; recommends against long term feature branches. Instead consider using trunk based development which is a practice of high performing teams.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;life-cycles&#34;&gt;Life Cycles&lt;/h2&gt;
&lt;p&gt;Then each pipeline has a number of distinct life cycle phases - rather like maven has &lt;code&gt;clean&lt;/code&gt;, &lt;code&gt;compile&lt;/code&gt;, &lt;code&gt;compile-test&lt;/code&gt;, &lt;code&gt;package&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;The life cycle phases in Jenkins X Pipeline YAML are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;preBuild&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postBuild&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;promote&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;extending&#34;&gt;Extending&lt;/h2&gt;
&lt;p&gt;A Pipeline YAML can extend another YAML file. You can reference a base pipeline YAML via:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using &lt;code&gt;file&lt;/code&gt; to reference a relative file path in the same build pack &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L1-L2&#34;&gt;like this example using file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;using &lt;code&gt;import&lt;/code&gt; to reference a YAML file which is imported like &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml#L2-L3&#34;&gt;this example using import&lt;/a&gt; which then refers to a &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/imports.yaml#L2-L4&#34;&gt;named imported module via git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overriding-steps&#34;&gt;Overriding steps&lt;/h2&gt;
&lt;p&gt;Rather like classes in languages like Java you can override steps in a Pipeline YAML from a base Pipeline YAML. This lets you reuse the steps in a base pipeline&amp;rsquo;s life cycle then add your own additional steps.&lt;/p&gt;
&lt;p&gt;By default any steps you define are added after the base pipeline YAML steps like in &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence/pipeline.yaml#L7&#34;&gt;this example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can add steps before the base pipeline steps using the &lt;code&gt;preSteps: &lt;/code&gt; property like &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence2/pipeline.yaml#L6&#34;&gt;this example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to completely replace all the steps from a base pipeline for a particular life cycle you can use &lt;code&gt;replace: true&lt;/code&gt; like in &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence2/pipeline.yaml#L11-L14&#34;&gt;this example&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;example-pipeline&#34;&gt;Example Pipeline&lt;/h2&gt;
&lt;p&gt;For example for &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml&#34;&gt;maven libraries we use this pipeline.yaml file&lt;/a&gt; which:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L1-L2&#34;&gt;extends&lt;/a&gt; the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/pipeline.yaml&#34;&gt;common pipeline&lt;/a&gt; that sets up git and defines common post build steps&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L3-L5&#34;&gt;configures the agent&lt;/a&gt; in terms of &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;pod template&lt;/a&gt; and container name&lt;/li&gt;
&lt;li&gt;defines the steps for the &lt;code&gt;pull request&lt;/code&gt; pipeline &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L7-L11&#34;&gt;build steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;defines the &lt;code&gt;release&lt;/code&gt; pipeline &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L13-L18&#34;&gt;set version steps&lt;/a&gt; and &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L19-L21&#34;&gt;build steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml&#34;&gt;maven kubernetes pipeline.yaml&lt;/a&gt; then &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml#L2-L3&#34;&gt;extends&lt;/a&gt; from the classic pipeline to add the kubernetes steps&lt;/p&gt;
&lt;h2 id=&#34;creating-new-build-packs&#34;&gt;Creating new build packs&lt;/h2&gt;
&lt;p&gt;We love &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;contributions&lt;/a&gt; so please consider adding new build packs and &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;pod templates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are instructions on how to create a new build pack - please if anything is not clear come &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;join the community and just ask&lt;/a&gt; we are happy to help!&lt;/p&gt;
&lt;p&gt;The best place to start with is a &lt;em&gt;quickstart&lt;/em&gt; application. A sample project that you can use as a test. So create/find a suitable example project and then &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;import it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then manually add a &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;Jenkinsfile&lt;/code&gt; if one is not already added for you. You could start with files from the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;current build pack folders&lt;/a&gt; - using the most similar language/framework to yours.&lt;/p&gt;
&lt;p&gt;If your build pack is using build tools which are not yet available in one of the existing &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/pod-templates/&#34;&gt;pod templates&lt;/a&gt; then you will need to &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/pod-templates/&#34;&gt;submit a new pod template&lt;/a&gt; probably using a new build container image too.&lt;/p&gt;
&lt;p&gt;Once you have a pod template to use, say, &lt;code&gt;jenkins-foo&lt;/code&gt; then refer to it in your &lt;code&gt;Jenkinsfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// my declarative Jenkinsfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CI Build and push snapshot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once your &lt;code&gt;Jenkinsfile&lt;/code&gt; is capable of doing CI/CD for your language/runtime on your sample project then we should be able to take the &lt;code&gt;Dockerfile&lt;/code&gt;, &lt;code&gt;Jenkinsfile&lt;/code&gt; and charts folder and copy them into a folder in your fork of the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x/draft-packs repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can try that out locally by adding these files to your local clone of the build packs repository at &lt;code&gt; ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PACK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp Dockerfile Jenkinsfile  ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# the charts will be in some folder charts/somefoo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r charts/somefoo ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK/charts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once your build pack is in a folder at &lt;code&gt;~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/&lt;/code&gt;
then it should be usable by the &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; code
which uses programming language detection to find the most suitable build pack to use when importing a project.
If your build pack requires custom logic to detect it then let us know
and we can help patch &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; to work better for your build pack.
For example, we have some custom logic for handling &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/712d9edf5e55aafaadfb3e0ac57692bb44634b1c/pkg/jx/cmd/common_buildpacks.go#L82:L108&#34;&gt;Maven and Gradle better&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-custom-build-packs&#34;&gt;Using custom build packs&lt;/h2&gt;
&lt;p&gt;Sometimes you may want to specify a custom buildpack to use when setting up your
applications. There are two distinct ways to create/setup clusters with
Jenkins-x and the approach you take will determine how you specify a custom
buildpack.&lt;/p&gt;
&lt;p&gt;If a cluster was setup using the jx install method then we have this
&lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_buildpack&#34;&gt;command&lt;/a&gt; that allows users to edit which buildpack
to use, to build applications.&lt;/p&gt;
&lt;p&gt;However if a cluster is being setup with &lt;code&gt;jx boot&lt;/code&gt;, then users have to edit
their &lt;code&gt;jx-requirements.yml&lt;/code&gt; file. You have to add the following fields to the
jx-requirements.yml file before running boot pipeline again. All the fields have
to be added together otherwise jx won&amp;rsquo;t be able to figure out where to get the
buildpack from.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;buildPacks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;buildPackLibrary&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Test name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;gitURL&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/jx-user/test-repo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;gitRef&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you need any more help &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;join the community&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: CLI</title>
      <link>https://jenkins-x.io/v3/admin/setup/upgrades/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/setup/upgrades/cli/</guid>
      <description>
        
        
        &lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;
&lt;p&gt;To upgrade the jx CLI run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade cli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To upgrade jx subcommand plugins run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade plugins
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;If you encounter this error:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ERROR: failed to load plugin &amp;lt;plugin-name&amp;gt;: can&amp;#39;t find latest version of plugin: {&amp;#34;message&amp;#34;:&amp;#34;Not Found&amp;#34;,&amp;#34;documentation_url&amp;#34;:&amp;#34;https://docs.github.com/rest/reference/repos#get-the-latest-release&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then most probably it&amp;rsquo;s an old plugin which is not maintained, and can be removed from &lt;code&gt;~/.jx3/plugins/bin&lt;/code&gt; folder.&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;jx&lt;/code&gt; CLI version used to upgrade to is derived from the Jenkins X &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have not installed Jenkins X or are not connected to a Kubernetes cluster with Jenkins X running then the &lt;code&gt;jx&lt;/code&gt; CLI version defaults to the latest version stream git repository &lt;a href=&#34;https://github.com/jenkins-x/jxr-versions/blob/master/packages/jx.yml&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are running the &lt;code&gt;jx upgrade cli&lt;/code&gt; command from within a cloned cluster git repository (one that has the helmfile.yaml and jx-requirements.yml files at the root folder) then the &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt; URL used to find the correct jx CLI version use comes from the local file &lt;code&gt;versionStream/Kptfile&lt;/code&gt;.  The reason for this is when switching &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt; you need to match the jx CLI version stored in that desired vesrion stream, as they may be different to you previous &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to find the &lt;code&gt;jx&lt;/code&gt; CLI version that matches the &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt; used by your cluster git repository then pass this addional flag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade cli --from-environment
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: CLI</title>
      <link>https://jenkins-x.io/v3/develop/ui/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/ui/cli/</guid>
      <description>
        
        
        &lt;p&gt;For those who like command lines you can view and watch most things via the &lt;a href=&#34;https://jenkins-x.io/v3/guides/jx3/&#34;&gt;jx&lt;/a&gt; command line.&lt;/p&gt;
&lt;p&gt;You can download 3.x of jx from here: &lt;a href=&#34;https://github.com/jenkins-x/jx/releases&#34;&gt;https://github.com/jenkins-x/jx/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Browse the &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/main/docs/cmd/jx.md&#34;&gt;command line commands&lt;/a&gt; along with the &lt;a href=&#34;https://github.com/jenkins-x/jx#plugins&#34;&gt;plugin commands&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many things in Jenkins X are exposed as &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;custom resources&lt;/a&gt; so that you can also use &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34;&gt;kubectl&lt;/a&gt; to interact with the Jenkins X.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to view environments&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;to view preview environments&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get preview
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;to view build logs try:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx pipeline log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>About: Components</title>
      <link>https://jenkins-x.io/about/concepts/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/about/concepts/components/</guid>
      <description>
        
        
        &lt;p&gt;An installation of Jenkins X consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a Development Environment per team which is a &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34;&gt;kubernetes namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;zero to many other &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Permanent Environments&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;the out of the box is for each team to get their own &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; environments&lt;/li&gt;
&lt;li&gt;each team can have as many environments as they wish and can call them whatever they like&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;optional &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;Preview Environments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Typically each environment is associated with its own &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34;&gt;kubernetes namespace&lt;/a&gt; which are usually different to ensure clean isolation between the environments.&lt;/p&gt;
&lt;p&gt;Though technically 2 teams could share the same underlying namespace for, say, &lt;code&gt;Staging&lt;/code&gt; though we advise separation to keep things simple - otherwise changes in one git repo could conflict with changes in another if they both configure the same namespace; due to, say, service resource name or DNS conflicts. If you wish 2 teams to share the same underlying microservices its much simpler to just use &lt;code&gt;service linking&lt;/code&gt; to link services in one namespace to another so that they appear as local services with local DNS.&lt;/p&gt;
&lt;p&gt;See the full list of &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/&#34;&gt;components of Jenkins X&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;development-environment&#34;&gt;Development Environment&lt;/h2&gt;
&lt;p&gt;In the dev environment we have installed a number of core applications we believe are required at a minimum to start folks off with CI/CD on Kubernetes.&lt;/p&gt;
&lt;p&gt;We also support &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#applications&#34;&gt;addons&lt;/a&gt; to extend this core set.&lt;/p&gt;
&lt;p&gt;Jenkins X comes with configuration that wires these services together meaning everything works together straight away. This dramatically reduces the time to get started with Kubernetes as all the passwords, environment variables and config files are all setup up to work with each other.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;  — provides both CI and CD automation. There is an effort to decompose Jenkins over time to become more cloud native and make use of Kubernetes concepts around CRDs, storage and scaling for example.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nexus&lt;/strong&gt; — acts as a dependency cache for NodeJS and Java applications to dramatically improve build times. After an initial build of a SpringBoot application the build time is reduced from 12 minutes to 4. We have not yet but intend to demonstrate swapping this with Artifactory soon.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker registry&lt;/strong&gt;  — an in cluster docker registry where our pipelines push application images, we will soon switch to using native cloud provider registries such as Google Container Registry, Azure Container Registry or Amazon Elastic Container Registry (ECR) for example.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ChartMuseum&lt;/strong&gt; — a Repository for publishing Helm charts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monocular&lt;/strong&gt;  — a UI used for discovering and running Helm charts&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;permanent-environments&#34;&gt;Permanent Environments&lt;/h2&gt;
&lt;p&gt;These &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt;, like &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; use GitOps to manage themselves and so each have a git repository containing the source code to configure all the applications and services which are deployed there.&lt;/p&gt;
&lt;p&gt;Typically we use Helm charts in these git repositories to define which charts are to be installed, which versions of them and any environment specific configuration and additional resources (e.g. Secrets or operational applications like Prometheus etc)&lt;/p&gt;
&lt;h2 id=&#34;preview-environments&#34;&gt;Preview Environments&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;Preview Environments&lt;/a&gt; are similar to &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Permanent Environments&lt;/a&gt; in that they are defined in source code using Helm charts.&lt;/p&gt;
&lt;p&gt;The main difference is preview environments are configured inside the application source code in the &lt;code&gt;./chart/preview&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;Also they are not permanent but created on a Pull Request to an applications git repository and then deleted some time after (manually or via automatic garbage collection).&lt;/p&gt;
&lt;h2 id=&#34;ingress-custom-annotations&#34;&gt;Ingress Custom Annotations&lt;/h2&gt;
&lt;p&gt;To learn how to add custom annotations to the ingress controller, please see &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/#how-to-add-custom-annotations-to-ingress-controller&#34;&gt;How To Add Custom Annotations to Ingress Controller?&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community: Consolidate Apps and Addons</title>
      <link>https://jenkins-x.io/community/labs/enhancements/proposals/1/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/community/labs/enhancements/proposals/1/readme/</guid>
      <description>
        
        
        &lt;p&gt;This proposal tries to conslidate Apps and Addons inside Jenkins X to avoid confusion&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Two years ago we added the addon framework to Jenkins X as a way of extending the Jenkins X platform to provide additional capabilities.&lt;/p&gt;
&lt;h3 id=&#34;we-created-addons&#34;&gt;We created Addons&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Addons&lt;/code&gt; were either generic helm charts or a combination of helm chart plus some custom go code to install and integrate them with the Jenkins X platform.&lt;/p&gt;
&lt;p&gt;At this point we referred to &lt;code&gt;apps&lt;/code&gt; as the charts developers created. e.g. the output of &lt;code&gt;jx create quickstart&lt;/code&gt; was an app and &lt;code&gt;jx get apps&lt;/code&gt; would list the quickstarts folks had added to &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;we-created-apps&#34;&gt;We created Apps&lt;/h3&gt;
&lt;p&gt;We wanted to avoid having to change the &lt;code&gt;jx&lt;/code&gt; binary to add a new extension to the Jenkins X platform; so we then introduced the &lt;code&gt;Apps&lt;/code&gt; framework which provided a more generic way of adding charts chatting to Jenkins X such that anybody could create an app without having to modify the underlying &lt;code&gt;jx&lt;/code&gt; code.&lt;/p&gt;
&lt;h3 id=&#34;confusion&#34;&gt;Confusion&lt;/h3&gt;
&lt;p&gt;That&amp;rsquo;s now left us with confusing over what an App is.&lt;/p&gt;
&lt;p&gt;This is made worse by having support for &lt;code&gt;apps&lt;/code&gt; and &lt;code&gt;addons&lt;/code&gt; in the current CLI.&lt;/p&gt;
&lt;p&gt;Developers like to talk about the &lt;code&gt;apps&lt;/code&gt; they are developing.&lt;/p&gt;
&lt;h2 id=&#34;proposal&#34;&gt;Proposal&lt;/h2&gt;
&lt;p&gt;Going forward lets refer to everything as an &lt;code&gt;App&lt;/code&gt; and deprecate the use of the word &lt;code&gt;Addon&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then all of these things would be an &lt;code&gt;App&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;system charts like knative, gloo, nginx-controller, flagger, prometheus, external-dns, cert-manager&lt;/li&gt;
&lt;li&gt;instantiations of Quickstarts or repositories that folks import&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;status-proposed&#34;&gt;Status: Proposed&lt;/h2&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;We would be able to reuse the current &lt;code&gt;jx add app&lt;/code&gt; and &lt;code&gt;jx delete app&lt;/code&gt; commands and folks could reuse them to add any app to any environment &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One possible confusion is between &lt;code&gt;jx promote&lt;/code&gt; and &lt;code&gt;jx add app&lt;/code&gt;. In many ways &lt;code&gt;promote&lt;/code&gt; is for promoting a different version to a different environment; &lt;code&gt;jx add app&lt;/code&gt; adds an app to the current environment (usually &lt;code&gt;Dev&lt;/code&gt; by default).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Create Quickstart</title>
      <link>https://jenkins-x.io/docs/create-project/creating/create-quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/create-project/creating/create-quickstart/</guid>
      <description>
        
        
        &lt;p&gt;Creating a quickstart is our preferred way to create your first project inside Jenkins X. A quickstart is just a sample microservice in a particular programming language and build technology which we test with our build packs to ensure it works great with CI+CD in Jenkins X.&lt;/p&gt;
&lt;p&gt;To see how to create a project see &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;Create a Quickstart&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Custom Resources</title>
      <link>https://jenkins-x.io/docs/reference/components/custom-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/reference/components/custom-resources/</guid>
      <description>
        
        
        &lt;p&gt;Kubernetes provides an extension mechanism called &lt;a href=&#34;https://kubernetes.io/docs/concepts/api-extension/custom-resources/&#34;&gt;Custom Resources&lt;/a&gt; which allows microservices to extend the Kubernetes platform to solve higher order problems.&lt;/p&gt;
&lt;p&gt;So in Jenkins X, we have added a number of Custom Resources to help extend Kubernetes to support CI/CD.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href=&#34;https://jenkins-x.io/apidocs/&#34;&gt;browse the Custom Resource API Reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;environments&#34;&gt;Environments&lt;/h2&gt;
&lt;p&gt;Jenkins X natively supports &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt; allowing them to be defined for your team and then queried via &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_environments/&#34;&gt;jx get environments&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Under the covers that command uses the custom Kubernetes resource &lt;code&gt;Environments&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So you can also query the environments via &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34;&gt;kubectl&lt;/a&gt; as well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or edit them via &lt;code&gt;YAML&lt;/code&gt; directly if you want:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl edit env staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;though you may prefer the easier to use &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_environment/&#34;&gt;jx edit environment&lt;/a&gt; command.&lt;/p&gt;
&lt;h2 id=&#34;release&#34;&gt;Release&lt;/h2&gt;
&lt;p&gt;The Jenkins X pipelines generate a custom &lt;code&gt;Release&lt;/code&gt; resource which we can use to keep track of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what version, Git tag and Git URL map to a release in Kubernetes/Helm&lt;/li&gt;
&lt;li&gt;what Jenkins pipeline URL and log was used to perform the release&lt;/li&gt;
&lt;li&gt;which commits, issues and Pull Requests were part of each release so that we can implement &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#feedback&#34;&gt;feedback as issues are fixed in Staging/Production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sourcerepository&#34;&gt;SourceRepository&lt;/h2&gt;
&lt;p&gt;This stores information about source code repositories that Jenkins X is set to build.&lt;/p&gt;
&lt;p&gt;It is created by &lt;code&gt;jx import&lt;/code&gt; and &lt;code&gt;jx create quickstart&lt;/code&gt; and removed whenever a &lt;code&gt;jx delete application&lt;/code&gt; is invoked.&lt;/p&gt;
&lt;h2 id=&#34;scheduler&#34;&gt;Scheduler&lt;/h2&gt;
&lt;p&gt;This is used to define a configuration for one or more &lt;code&gt;SourceRepository&lt;/code&gt; and is used by &lt;a href=&#34;&#34;&gt;jx boot&lt;/a&gt; to generate the Prow configuration.&lt;/p&gt;
&lt;p&gt;This lets you setup a default &lt;code&gt;Scheduler&lt;/code&gt; for a team and then you don&amp;rsquo;t have to touch your prow configuration at all; all imported/created projects will inherit from the default &lt;code&gt;Scheduler&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Or when you perform &lt;code&gt;jx import&lt;/code&gt; or &lt;code&gt;jx create quickstart&lt;/code&gt; you can pass in a &lt;code&gt;--scheduler&lt;/code&gt; command line argument to use a specific scheduler.&lt;/p&gt;
&lt;h2 id=&#34;pipelineactivity&#34;&gt;PipelineActivity&lt;/h2&gt;
&lt;p&gt;This resource stores the pipeline status in terms of Jenkins Pipeline stages plus the &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#promotion&#34;&gt;promotion activity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This resource is also used by the &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_activities/&#34;&gt;jx get activities&lt;/a&gt; command.&lt;/p&gt;
&lt;h2 id=&#34;team&#34;&gt;Team&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Team&lt;/code&gt; Custom Resource is created via the &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_team/&#34;&gt;jx create team&lt;/a&gt; command and is used by the &lt;code&gt;team controller&lt;/code&gt; to watch for new &lt;code&gt;Team&lt;/code&gt; resources and then create an installation of Jenkins X in the &lt;code&gt;teams&lt;/code&gt; namespace. For more background on teams see the &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#teams&#34;&gt;team feature&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;user&#34;&gt;User&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;User&lt;/code&gt; Custom Resource is used to support RBAC across the various &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;preview environments&lt;/a&gt; in teams.&lt;/p&gt;
&lt;p&gt;It is also used by the &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_userroles/&#34;&gt;jx edit userroles&lt;/a&gt; to change user roles.&lt;/p&gt;
&lt;h2 id=&#34;environmentrolebinding&#34;&gt;EnvironmentRoleBinding&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt; resource is like the standard Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#rolebinding-v1-rbac-authorization-k8s-io&#34;&gt;RoleBinding&lt;/a&gt; resource, but it allows mapping of a &lt;code&gt;Role&lt;/code&gt; to multiple &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;preview environments&lt;/a&gt; in a team by using a selector of Environments on which to bind roles.&lt;/p&gt;
&lt;p&gt;This makes it easy to bind a &lt;code&gt;Role&lt;/code&gt; to either all environments, all preview environments or both or a given set of users.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community: Enhancement Process</title>
      <link>https://jenkins-x.io/community/labs/enhancements/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/community/labs/enhancements/readme/</guid>
      <description>
        
        
        &lt;h1 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h1&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkins-x/enhancements&#34;&gt;enhancements repository&lt;/a&gt; contains design proposals for &lt;a href=&#34;https://jenkins-x.io/&#34;&gt;Jenkins X&lt;/a&gt; enhancements.&lt;/p&gt;
&lt;p&gt;All proposals are welcome, please follow this process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raise an issue on this repo describing at high level what the enhancement looks to achieve and whether you would like any help with the proposal.&lt;/li&gt;
&lt;li&gt;If you would like some early collaboration from the Jenkins X community you might want to start with Google Docs for a faster feedback cycle.&lt;/li&gt;
&lt;li&gt;Open a pull request containing markdown giving some context, describing the problem the enhancement aims to solve along with possible solutions.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: General questions</title>
      <link>https://jenkins-x.io/docs/resources/faq/general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/faq/general/</guid>
      <description>
        
        
        &lt;p&gt;We have tried to collate common issues here with work arounds. If your issue isn&amp;rsquo;t listed here please &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new&#34;&gt;let us know&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;is-jenkins-x-open-source&#34;&gt;Is Jenkins X Open Source?&lt;/h2&gt;
&lt;p&gt;Yes! All of Jenkins X source code and artifacts are open source; either Apache or MIT and will always remain so!&lt;/p&gt;
&lt;h2 id=&#34;how-does-jenkins-x-compare-to-jenkins&#34;&gt;How does Jenkins X compare to Jenkins?&lt;/h2&gt;
&lt;p&gt;Jenkins X provides &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#automated-pipelines&#34;&gt;automated CI + CD&lt;/a&gt; for applications on kubernetes with &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#promotion&#34;&gt;GitOps promotion through environments&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;preview environments on Pull Requests
&lt;/a&gt;. (See the &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/&#34;&gt;features for more details&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Jenkins is a general purpose CI/CD server that can be configured to do anything you like by adding plugins, changing configuration and writing your own pipelines.&lt;/p&gt;
&lt;p&gt;With Jenkins X you just &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/&#34;&gt;install Jenkins X&lt;/a&gt; which automatically sets up all of the various tools (helm, docker registry, nexus etc) and then &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;create&lt;/a&gt;/&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;import&lt;/a&gt; projects and you get fully automated CI/CD and previews. This lets your developers focus on building applications while you delegate to Jenkins X to manage your CI+CD.&lt;/p&gt;
&lt;p&gt;Jenkins X supports different execution engines; so it can orchestrate a Jenkins server per team by reusing Jenkins in a docker container. Though when using &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;serverless Jenkins X Pipelines&lt;/a&gt; we use &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; rather than Jenkins as the underlying CI/CD engine to provide a modern highly available cloud native architecture.&lt;/p&gt;
&lt;h2 id=&#34;is-jenkins-x-a-fork-of-jenkins&#34;&gt;Is Jenkins X a fork of Jenkins?&lt;/h2&gt;
&lt;p&gt;No! Jenkins X can orchestrate Jenkins by reusing it inside a container and configures it to be as kubernetes native as possible.&lt;/p&gt;
&lt;p&gt;Though when using &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;serverless Jenkins X Pipelines&lt;/a&gt; we use &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; rather than Jenkins as the underlying CI/CD engine to provide a modern highly available cloud native architecture.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Pipelines Questions</title>
      <link>https://jenkins-x.io/docs/resources/faq/using/pipelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/faq/using/pipelines/</guid>
      <description>
        
        
        &lt;p&gt;For more background see the guide on &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Serverless Jenkins X Pipelines&lt;/a&gt; using &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt;. There is also the &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/&#34;&gt;Jenkins X Pipelines Syntax Reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-a-custom-step&#34;&gt;How do I add a custom step?&lt;/h2&gt;
&lt;p&gt;To add a new custom step to your &lt;code&gt;jenkins-x.yml&lt;/code&gt; file see &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;how to use the jx create step&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-override-a-step&#34;&gt;How do I override a step?&lt;/h2&gt;
&lt;p&gt;If there is a named step in the pipeline you wish to override you can add some YAML to your &lt;code&gt;jenkins-x.yml&lt;/code&gt; file as
follows:&lt;/p&gt;
&lt;p&gt;In this case were are going to replace the step called &lt;code&gt;helm-release&lt;/code&gt; in the &lt;code&gt;release&lt;/code&gt; pipeline&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipelineConfig:
  pipelines:
    overrides:
      - pipeline: release
        name: helm-release
        step: 
          image: busybox
          sh: echo &amp;#34;this command is replaced&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can see the effect of this change locally before you commit it to git via the &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_syntax_effective/&#34;&gt;jx step syntax effective&lt;/a&gt; command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx step syntax effective -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can override whole Stages or replace a specific step with a single step or a sequence of steps. You can also add steps before/after another step.&lt;/p&gt;
&lt;p&gt;For more detail check out &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#specifying-and-overriding-release-pull-request-and-feature-pipelines&#34;&gt;how to override steps&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-can-i-override-the-default-container-image&#34;&gt;How can I override the default container image?&lt;/h2&gt;
&lt;p&gt;As you can see above you can override any step in any build pack; but you can also override the container image used by default in all the steps by adding this YAML to your &lt;code&gt;jenkins-x.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipelineConfig:
  agent:
    label: jenkins-go
    container: somerepo/my-container-image:1.2.3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can see the effect of this change locally before you commit it to git via the &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_syntax_effective/&#34;&gt;jx step syntax effective&lt;/a&gt; command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx step syntax effective -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For more detail check out &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#specifying-and-overriding-release-pull-request-and-feature-pipelines&#34;&gt;how to override steps&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-jenkins-x-pipelines-compare-to-jenkins-pipelines&#34;&gt;How do Jenkins X Pipelines compare to Jenkins pipelines?&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/docs/build-test-preview/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-environment-variables-are-available-by-default-inside-a-pipeline&#34;&gt;What environment variables are available by default inside a pipeline?&lt;/h2&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/pipelines/envvars/#default-environment-variables&#34;&gt;default environment variables created for pipeline steps&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;is-there-a-reference-for-the-syntax&#34;&gt;Is there a reference for the syntax?&lt;/h2&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/&#34;&gt;Jenkins X Pipelines Syntax Reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-mount-a-secret-or-configmap&#34;&gt;How do I mount a Secret or ConfigMap?&lt;/h2&gt;
&lt;p&gt;Each step in a Jenkins X Pipeline in the &lt;code&gt;jenkins-x.yml&lt;/code&gt; file is basically a &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#container-v1-core&#34;&gt;Container&lt;/a&gt; from kubernetes so you can specify the image, resource limits, environment variables and mount them from a &lt;code&gt;ConfigMap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can see &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#full-pipeline-definition-in-jenkins-xyml&#34;&gt;an example of mounting a Secret to an environment variable here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are inside a shell script you can also use the &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx step credential&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;can-i-mount-a-persistent-volume-in-my-pipeline&#34;&gt;Can I mount a Persistent Volume in my pipeline?&lt;/h2&gt;
&lt;p&gt;Tekton already mounts a separate Persistent Volume for each build pod at &lt;code&gt;/workspace&lt;/code&gt; so the build results are kept around for a while until they are garbage collected.&lt;/p&gt;
&lt;p&gt;On most kubernetes clusters you cannot easily share a single Persistent Volume across multiple pods; so having a shared PV across builds isn&amp;rsquo;t generally easy or compatible. You can however add a step to populate your PV on startup from a cloud bucket and at the end of a pipeline copy data into a bucket to speed up caching.&lt;/p&gt;
&lt;p&gt;You can also do things like use Nexus as a network cache for fetching maven dependencies (which happens OOTB with Maven builds in Jenkins X) or add the Athens proxy for Go.&lt;/p&gt;
&lt;p&gt;Hopefully the Tekton community will figure out some even better caching solutions to speed up builds.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-define-an-environment-variable-inside-a-step-for-other-steps-to-use&#34;&gt;How do I define an environment variable inside a step for other steps to use?&lt;/h2&gt;
&lt;p&gt;Files are the easiest approach as the &lt;code&gt;/workspace&lt;/code&gt; directory is shared with all steps. So write in one step and use the value from other steps etc.&lt;/p&gt;
&lt;p&gt;The other option is mounting a &lt;code&gt;ConfigMap&lt;/code&gt; as environment variables into each step and modifying that on one step; but files are easier really.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community: Suggest changes to documentation</title>
      <link>https://jenkins-x.io/community/documentation/changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/community/documentation/changes/</guid>
      <description>
        
        
        &lt;p&gt;Did you spot a typo or feel something&amp;rsquo;s missing from a certain page?
You can still contribute your suggestions without having to go through setting everything up locally as explained on &lt;a href=&#34;https://jenkins-x.io/community/documentation/&#34;&gt;Contribute to Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The process requires only three steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the &amp;ldquo;Edit this page&amp;rdquo; link on the right&lt;/li&gt;
&lt;li&gt;Make your suggested changes&lt;/li&gt;
&lt;li&gt;Create a Pull Request&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We&amp;rsquo;ll go through each step here. Keep in mind though, that if you&amp;rsquo;re looking to contribute larger amounts of changes, pages, or sections, it&amp;rsquo;s best to test things out locally first (using the process described on &lt;a href=&#34;https://jenkins-x.io/community/documentation/&#34;&gt;Contribute to Documentation&lt;/a&gt;) instead of using this method.&lt;/p&gt;
&lt;h2 id=&#34;click-the-edit-this-page-link&#34;&gt;Click the &amp;ldquo;Edit this page&amp;rdquo; link&lt;/h2&gt;
&lt;p&gt;First off, make sure you&amp;rsquo;re viewing the page you want to make changes to.
The link you need to click is specific for the page, to make it easier to start making changes.&lt;/p&gt;
&lt;p&gt;On the right hand side of the page, you&amp;rsquo;ll find a column that will always have the following three links:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/contribute/page_links.png&#34; alt=&#34;Triage&#34;&gt;&lt;/p&gt;
&lt;p&gt;The top one (&lt;code&gt;Edit this page&lt;/code&gt;) is the one we need here, as it will allow you to suggest changes to the page you&amp;rsquo;re currently on.
The second one (&lt;code&gt;Create documentation issue&lt;/code&gt;) is a link to create a documentation related issue, for others to look at and hopefully fix. This could be for missing sections, or maybe larger changes you&amp;rsquo;re not comfortable suggesting yourself.
The last one (&lt;code&gt;Create project issue&lt;/code&gt;) is a link to create an issue for the main Jenkins X project. This is for problems related to the code and to how Jenkins X works.&lt;/p&gt;
&lt;h2 id=&#34;make-suggested-changes&#34;&gt;Make suggested changes&lt;/h2&gt;
&lt;p&gt;Clicking the &amp;ldquo;Edit this page&amp;rdquo; link takes you to a page on GitHub that looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/contribute/edit_page.png&#34; alt=&#34;Triage&#34;&gt;&lt;/p&gt;
&lt;p&gt;The main part of this page is the text field which includes the text for page you came from. It is using &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;GitHub markdown&lt;/a&gt; to indicate when this should be bold, italic, etc., so if you haven&amp;rsquo;t come across markdown before it might be a good idea to have a look at that if you plan on making changes to/using text formatting.
There&amp;rsquo;s also a &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;cheat-sheet here&lt;/a&gt; with just the formatting.&lt;/p&gt;
&lt;p&gt;You can make any changes you see fit (it&amp;rsquo;s treated as a suggestion that will be reviewed by others before being applied to the live website).&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;re finished:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Supply a summary of your changes (e.g. &amp;ldquo;fixed typos in documentation contribution page&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Select the option &amp;ldquo;Create a new branch&amp;hellip;&amp;rdquo; and give it a meaningful name&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Propose file change&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The page should look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/contribute/commit_changes.png&#34; alt=&#34;Triage&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-a-pull-request&#34;&gt;Create a Pull Request&lt;/h2&gt;
&lt;p&gt;The next screen after you clicked &amp;ldquo;Propose file changes&amp;rdquo; should be &amp;ldquo;Open Pull Request&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;You can add more description if you wish, but at this point its fine to just click &amp;ldquo;Create pull request&amp;rdquo;.
If there are any questions about your changes, or suggestions for improvements, they will be added to the pull request, so in case you have opted out of notifications from GitHub it would be good to check back now and then until the change is applied.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: What is Jenkins X?</title>
      <link>https://jenkins-x.io/v3/about/what/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/about/what/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X automates and accelerates Continuous Integration and Continuous Delivery for developers on the cloud, so they can focus on building awesome software.&lt;/p&gt;
&lt;p&gt;Embracing popular open source projects Jenkins X automates the setup and management to provide an integrated Cloud Native solution teams can use to develop better software faster and more reliably than traditional non cloud solutions.&lt;/p&gt;
&lt;p&gt;Open Source projects that Jenkins X integrates with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; target platform Jenkins X is installed onto, optionally deploy and run applications built with Jenkins X&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; Cloud Native pipeline orchestration&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kuberhealthy/kuberhealthy&#34;&gt;Kuberhealthy&lt;/a&gt; Periodic health checks of the systems&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://grafana.com&#34;&gt;Grafana&lt;/a&gt; &lt;strong&gt;[optional]&lt;/strong&gt; Centralised logs and Observability&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; &lt;strong&gt;[optional]&lt;/strong&gt; traditional pipeline orchestration&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sonatype.com/nexus/repository-oss&#34;&gt;Nexus&lt;/a&gt; &lt;strong&gt;[optional]&lt;/strong&gt; artifact repository&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At a high level Jenkins X can be split into a few areas:&lt;/p&gt;
&lt;h3 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h3&gt;
&lt;p&gt;Jenkins X aims to use the cloud well, Kubernetes to host the core services, storage buckets for long term storage, container registries and hosted services like secrets managers. All of this needs to be created and managed.  Jenkins X defers to &lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt; to setup and manage the Cloud infrastructure needed by Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;gitops&#34;&gt;GitOps&lt;/h3&gt;
&lt;p&gt;The entire Jenkins X experience is based around Git.  The installation, extensions and applications you develop are managed via a cluster Git repository which is the desired state of your Kubernetes cluster.  A Kubernetes operator runs inside the cluster and polls for changes in the Git repository, applying verified and approved updates.  The cluster Git repository uses &lt;a href=&#34;https://github.com/roboll/helmfile/&#34;&gt;Helmfile&lt;/a&gt; to describe the helm charts that should be used to install software.  Jenkins X generates the Kubernetes resources defined in the Helmfiles, commits back to Git so the exact state can always be seen via Git.&lt;/p&gt;
&lt;p&gt;Using GitOps means familiar processes can be followed when making any change to the cluster, using reviews, automation, traceability and rollbacks to give better control over consuming changes.&lt;/p&gt;
&lt;p&gt;Jenkins X also uses GitOps as the way to &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades&#34;&gt;upgrade&lt;/a&gt;, including new releases of images, helm charts and packages.&lt;/p&gt;
&lt;h3 id=&#34;secret-management&#34;&gt;Secret Management&lt;/h3&gt;
&lt;p&gt;Using GitOps as above does present a challenge of where to store secrets for your cluster as keeping them in Git is insecure.  There is a way to &lt;a href=&#34;https://github.com/bitnami-labs/sealed-secrets&#34;&gt;encrypt secrets and store them in Git&lt;/a&gt; but there is a usability issue which makes the approach non trivial to use.  Jenkins X prefers to work with real secret provider solutions like &lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;Vault&lt;/a&gt; or where possible cloud hosted solutions like &lt;a href=&#34;https://cloud.google.com/secret-manager&#34;&gt;Google&lt;/a&gt;, Azure or Amazon Secrets managers.&lt;/p&gt;
&lt;p&gt;Jenkins X GitOps works with &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;External Secrets&lt;/a&gt; to provide an integrated experience so your secrets source of truth is a secrets manager and the values are replicated into the cluster when needed.&lt;/p&gt;
&lt;h3 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h3&gt;
&lt;p&gt;By default Jenkins X ships with Tekton for a clean declarative cloud native way to describe &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/&#34;&gt;pipelines&lt;/a&gt;.  Combined with Lighthouse Jenkins X makes it easy to inherit versioned shared pipeline steps via Git and a simple syntax providing flexibility and easy maintenance.&lt;/p&gt;
&lt;p&gt;Jenkins X can also work well with Jenkins for users that have traditional workloads.  This is not installed by default but with Jenkins X it is easy to install any helm chart and so designed to work great with our inspirational project Jenkins.&lt;/p&gt;
&lt;h3 id=&#34;chatops&#34;&gt;ChatOps&lt;/h3&gt;
&lt;p&gt;With the ever growing number of microservices needing automation, Jenkins X provides the ability to interact with pipelines via comments on pull requests.  &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;Lighthouse&lt;/a&gt; has evolved from &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow#&#34;&gt;Prow&lt;/a&gt; which is used heavily in the Kubernetes ecosystem to provide a consistent developer workflow for triggering tests, approvals, hold and other common commands developers use in their everyday activities.&lt;/p&gt;
&lt;h3 id=&#34;developer-experience&#34;&gt;Developer experience&lt;/h3&gt;
&lt;p&gt;Along with ChatOps mentioned above Jenkins X aims to help developers have a consistent way of working with their microservices, using a CLI or GUI developers can leverage proven approaches recomended by the &lt;a href=&#34;https://www.amazon.co.uk/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339&#34;&gt;Accelerate book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Whether creating or importing new projects that automates the setup of CI and CD, packaging applications so they can deploy and run on Kubernetes or simply release as libraries for downstream applications to use.  Jenkins X helps teams have consistency in the way they are built, developed and improved.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;jx&lt;/code&gt; CLI helps developers interact with Jenkins X using their terminal.&lt;/p&gt;
&lt;p&gt;There is also a read only in cluster pipeline dashboard that links via pull requests so users can view logs of builds.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Working with GPUs</title>
      <link>https://jenkins-x.io/docs/resources/guides/mlops/gpu/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/mlops/gpu/</guid>
      <description>
        
        
        &lt;p&gt;To use CUDA to accelerate your ML training and services, you first need to set up your Kubernetes cluster to add some physical GPU resources to your nodes.&lt;/p&gt;
&lt;p&gt;To do this, typically you will need to request an allocation of GPU resources from your Cloud provider and then configure an additional Node Pool to provision a set of Nodes such that each Node has access to at least one physical GPU card.&lt;/p&gt;
&lt;p&gt;See the documentation for your Cloud platform for details.
The instructions for GCP are here: &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/gpus&#34;&gt;https://cloud.google.com/kubernetes-engine/docs/how-to/gpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Additionally, each Node will require a CUDA installation and the drivers appropriate to the physical accelerator cards chosen. Note that this introduces fixed dependencies upon the driver version for your specific hardware and the installed CUDA version that spans the entire Node Pool, impacting every service you deploy to this pool.&lt;/p&gt;
&lt;p&gt;Be aware that you will be charged for use of the GPU resources from the point at which each Node starts up, NOT just whilst you are running a training! It is recommended to use elastic node scaling on your pool so that you release GPU resources that are not currently being utilised.&lt;/p&gt;
&lt;p&gt;Once your cluster is configured, you can allocate GPU resources to containers as part of your application config.&lt;/p&gt;
&lt;p&gt;For the training project, you will need to ensure that the build container used has access to GPU resources. This can be provisioned via the &lt;code&gt;jenkins-x.yml&lt;/code&gt; file in that project, like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;buildPack: ml-python-gpu-training

pipelineConfig:
  pipelines:
    overrides:
      - pipeline: release
        stage: training
        name: training
        containerOptions:
          resources:
            limits:
              cpu: 4
              memory: 32Gi
              nvidia.com/gpu: 1
            requests:
              cpu: 0.5
              memory: 8Gi
              nvidia.com/gpu: 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that at the moment, it is not possible to modify the container resources of a single pipeline step, but only the resources for every container in a stage. As a result, it is necessary to perform all ML build activities in a single step in a dedicated stage or Kubernetes will attempt to allocate a physical GPU to a new container for every step in the stage, draining all available resources and likely blocking the build.&lt;/p&gt;
&lt;p&gt;This pipeline config is set up for you in all the existing GPU quickstarts.&lt;/p&gt;
&lt;p&gt;To configure the service project, you can adjust the resource section of the &lt;code&gt;values.yaml&lt;/code&gt; file in the project chart to set &lt;code&gt;nvidia.com/gpu: 2&lt;/code&gt; to indicate how many GPU cards to allocate to each Pod instance. Note that you cannot exceed the number of GPUs available to a Node and Pods may become unschedulable if there are insufficient free GPU cards in the pool.&lt;/p&gt;
&lt;p&gt;Once you have deployed a GPU-based service, it will reserve the cards allocated to it, so care is needed to avoid running up unnecessarily large bills by leaving non-essential services or preview environments up.&lt;/p&gt;
&lt;p&gt;You will, of course, have to ensure that your training script and service implementation code are set up to use CUDA features.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Working with GPUs</title>
      <link>https://jenkins-x.io/v3/mlops/gpu/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/mlops/gpu/</guid>
      <description>
        
        
        &lt;p&gt;To use CUDA to accelerate your ML training and services, you first need to set up your Kubernetes cluster to add some physical GPU resources to your nodes.&lt;/p&gt;
&lt;p&gt;To do this, typically you will need to request an allocation of GPU resources from your Cloud provider and then configure an additional Node Pool to provision a set of Nodes such that each Node has access to at least one physical GPU card.&lt;/p&gt;
&lt;p&gt;See the documentation for your Cloud platform for details.
The instructions for GCP are here: &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/gpus&#34;&gt;https://cloud.google.com/kubernetes-engine/docs/how-to/gpus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Additionally, each Node will require a CUDA installation and the drivers appropriate to the physical accelerator cards chosen. Note that this introduces fixed dependencies upon the driver version for your specific hardware and the installed CUDA version that spans the entire Node Pool, impacting every service you deploy to this pool.&lt;/p&gt;
&lt;p&gt;Be aware that you will be charged for use of the GPU resources from the point at which each Node starts up, NOT just whilst you are running a training! It is recommended to use elastic node scaling on your pool so that you release GPU resources that are not currently being utilised.&lt;/p&gt;
&lt;p&gt;Once your cluster is configured, you can allocate GPU resources to containers as part of your application config.&lt;/p&gt;
&lt;p&gt;For the training project, you will need to ensure that the build container used has access to GPU resources. This can be provisioned by overriding the pipeline default for the build-training step in that project, like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜ jx pipeline override
? pick the pipeline:  postsubmit/release
? pick the step:   [Use arrows to move, enter to select, type to filter]
  uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
  next-version
  jx-variables
  build-flake8
&amp;gt; build-training
  build-export-model
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will modify your local copy of the pipeline in .lighthouse/jenkins-x/release.yaml like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/ml-python-gpu-training/release.yaml@versionStream
          name: &amp;#34;&amp;#34;
          resources:
            requests:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;0&amp;#34;
            limits:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;0&amp;#34;
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: &amp;#34;&amp;#34;
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-flake8
          resources: {}
        - image: ghcr.io/jenkins-x/builder-machine-learning-gpu:0.1.1317
          name: build-training
          resources:
            requests:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;1&amp;#34;
            limits:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;1&amp;#34;
          script: |
            #!/bin/sh
            source /root/.bashrc
            python3 -m pip install -r ./requirements.txt
            python3 app.py
        - name: build-export-model
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first set of resources specified in this file are the default values that are applied to any step that doesn&amp;rsquo;t have a dedicated local resource spec. You can normally leave these as they are. Don&amp;rsquo;t specify a GPU here, or every step will be allocated a GPU unnecessarily, which will be expensive.&lt;/p&gt;
&lt;p&gt;The resources for the step called &amp;lsquo;build-training&amp;rsquo; are the ones that specify the allocation for the container executing your training script. Increase these until your training runs consistently.&lt;/p&gt;
&lt;p&gt;To configure the service project, you can adjust the resource section of the &lt;code&gt;values.yaml&lt;/code&gt; file in the project chart to set &lt;code&gt;nvidia.com/gpu: 2&lt;/code&gt; to indicate how many GPU cards to allocate to each Pod instance. Note that you cannot exceed the number of GPUs available to a Node and Pods may become unschedulable if there are insufficient free GPU cards in the pool.&lt;/p&gt;
&lt;p&gt;Once you have deployed a GPU-based service, it will reserve the cards allocated to it, so care is needed to avoid running up unnecessarily large bills by leaving non-essential services or preview environments up.&lt;/p&gt;
&lt;p&gt;You will, of course, have to ensure that your training script and service implementation code are set up to use CUDA features.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Community: API Documentation</title>
      <link>https://jenkins-x.io/community/documentation/apidocs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/community/documentation/apidocs/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X has two types of API documentation: &lt;a href=&#34;https://jenkins-x.io/apidocs/&#34;&gt;Kubernetes Custom Resource Documentation&lt;/a&gt; and &lt;a href=&#34;https://godoc.org/github.com/jenkins-x/jx&#34;&gt;Godoc&lt;/a&gt;.
Both types are generated from the &lt;code&gt;codegen&lt;/code&gt; binary which is part of the jx &lt;a href=&#34;https://github.com/jenkins-x/jx&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;setup-your-development-environment&#34;&gt;Setup your development environment&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s best to make changes to the Jenkins X code on your local machine. Follow the &lt;a href=&#34;https://jenkins-x.io/community/code/&#34;&gt;development&lt;/a&gt; guide
to get set up.&lt;/p&gt;
&lt;h2 id=&#34;writing-custom-resource-documentation&#34;&gt;Writing custom resource documentation&lt;/h2&gt;
&lt;p&gt;The custom resource documentation is mostly generated from the comments on the &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/pkg/apis/jenkins.io/v1&#34;&gt;go structs&lt;/a&gt; that define the custom resources, with the &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/docs/apidocs/static_includes&#34;&gt;introductory content&lt;/a&gt; and &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/master/docs/apidocs/config.yaml&#34;&gt;structure&lt;/a&gt; injected.&lt;/p&gt;
&lt;h3 id=&#34;toolchain&#34;&gt;Toolchain&lt;/h3&gt;
&lt;p&gt;The custom resource documentation is generated using the &lt;a href=&#34;https://kubernetes.io/docs/contribute/generate-ref-docs/kubernetes-api/&#34;&gt;same toolchain&lt;/a&gt; as Kubernetes, but wrapped up in a series of &lt;code&gt;codegen&lt;/code&gt; commands so that you don&amp;rsquo;t have to download and setup the different tools yourself.&lt;/p&gt;
&lt;p&gt;The HTML docs are generated via an &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/docs/apidocs/openapi-spec&#34;&gt;OpenAPI specification&lt;/a&gt; which in turn is generated from &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/pkg/client/openapi&#34;&gt;Go Structs&lt;/a&gt; which are generated from the code comments.
To generate the structs and the OpenAPI specification run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make generate-openapi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;code&gt;make generate-openapi&lt;/code&gt; is just a wrapper for &lt;code&gt;codegen openapi&lt;/code&gt;, passing in package to generate from, generate to, and the group (&lt;code&gt;jenkins.io&lt;/code&gt;) and version (&lt;code&gt;v1&lt;/code&gt;) to generate for.
You can run this command directly if you prefer.

&lt;/div&gt;

&lt;p&gt;and to generate the HTML run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make generate-docs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;code&gt;make generate-docs&lt;/code&gt; is just a wrapper for &lt;code&gt;codegen docs&lt;/code&gt;. You can run this command directly if you prefer.

&lt;/div&gt;

&lt;p&gt;You should run &lt;code&gt;make generate-openapi&lt;/code&gt; whenever you change the custom resources, and check the generated changes into
source control. This means that there is always a tagged version of the OpenAPI spec available for others to use.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    You can also run &lt;code&gt;make generate&lt;/code&gt; which will do all the code generation needed by Jenkins X (mocks and client as well
as openapi)

&lt;/div&gt;

&lt;p&gt;&lt;code&gt;make generate-docs&lt;/code&gt; is run by the release build, and the changes are automatically uploaded to the Jenkins X
website on every release. They&amp;rsquo;ll be available a few minutes after the release build completes.&lt;/p&gt;
&lt;h3 id=&#34;making-changes-to-the-documentation&#34;&gt;Making changes to the documentation&lt;/h3&gt;
&lt;p&gt;Each file for which you want to generate docs must be located in the &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/pkg/apis/jenkins.io/v1&#34;&gt;jenkins.io/v1&lt;/a&gt; directory, and must have a the&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// +k8s:openapi-gen=true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;comment at the top of the file.&lt;/p&gt;
&lt;p&gt;To exclude a type or member, add&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// +k8s:openapi-gen=false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to it.&lt;/p&gt;
&lt;p&gt;Comments on types are ignored. Comments on struct fields are used as the description for each field.&lt;/p&gt;
&lt;p&gt;The left hand menu is generated from the &lt;code&gt;resource_categories&lt;/code&gt; in &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/master/docs/apidocs/config.yaml&#34;&gt;config.yaml&lt;/a&gt;. The introductory text for each category is authored as
&lt;a href=&#34;https://github.com/jenkins-x/jx/tree/master/docs/apidocs/static_includes&#34;&gt;html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The styles can &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/master/docs/apidocs/static/stylesheet.css&#34;&gt;also be customized&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;openapi&#34;&gt;OpenAPI&lt;/h3&gt;
&lt;p&gt;The OpenAPI spec is generated from the code. The structure is generated from the structs and fields. The &lt;code&gt;json&lt;/code&gt;
&lt;a href=&#34;https://golang.org/pkg/encoding/json/#Marshal&#34;&gt;tags&lt;/a&gt; are used to provide additional information including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is generated from the &lt;code&gt;key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if &lt;code&gt;omitempty&lt;/code&gt; is not set, the property will be &lt;code&gt;required&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;-&lt;/code&gt; the field will be skipped&lt;/li&gt;
&lt;li&gt;if &lt;code&gt;inline&lt;/code&gt; is set, the properties will be inlined into the parent object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally the&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;comment can be used to prevent a property being &lt;code&gt;required&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;metav1&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TypeMeta&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`json:&amp;#34;,inline&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    // +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    metav1.ObjectMeta `&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;metadata,omitempty&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;protobuf&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bytes,1,opt,name=metadata&amp;#34;`
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  Spec BuildPackSpec `&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec,omitempty&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;protobuf&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bytes,2,opt,name=spec&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;openapi-extensions&#34;&gt;OpenAPI Extensions&lt;/h4&gt;
&lt;p&gt;OpenAPI spec can have extensions on types. To define one or more extensions on a type or its member
add &lt;code&gt;+k8s:openapi-gen=x-kubernetes-$NAME:$VALUE&lt;/code&gt; to the comment lines before type/member. A type/member can
have multiple extensions. The rest of the line in the comment will be used as $VALUE so there is no need to
escape or quote the value string. Extensions can be used to pass more information to client generators or
documentation generators. For example a type might have a friendly name to be displayed in documentation or
being used in a client&amp;rsquo;s fluent interface.&lt;/p&gt;
&lt;h4 id=&#34;custom-openapi-type-definitions&#34;&gt;Custom OpenAPI type definitions&lt;/h4&gt;
&lt;p&gt;Custom types which otherwise don&amp;rsquo;t map directly to OpenAPI can override their
OpenAPI definition by implementing a function named &amp;ldquo;OpenAPIDefinition&amp;rdquo; with
the following signature:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;openapi&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;k8s.io/kube-openapi/pkg/common&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;OpenAPIDefinition&lt;/span&gt;() &lt;span style=&#34;color:#a6e22e&#34;&gt;openapi&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;OpenAPIDefinition&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;openapi&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;OpenAPIDefinition&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;Schema&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;spec&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Schema&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;SchemaProps&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;spec&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SchemaProps&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#a6e22e&#34;&gt;Type&lt;/span&gt;:   []&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#a6e22e&#34;&gt;Format&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date-time&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, the type can avoid the &amp;ldquo;openapi&amp;rdquo; import by defining the following
methods. The following example produces the same OpenAPI definition as the
example above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;OpenAPISchemaType&lt;/span&gt;() []&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;} }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;OpenAPISchemaFormat&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; { &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date-time&amp;#34;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;write-godoc&#34;&gt;Write Godoc&lt;/h2&gt;
&lt;p&gt;Jenkins X uses the standard approach to Godoc, and it is automatically generated by &lt;a href=&#34;http://godoc.org&#34;&gt;godoc.org&lt;/a&gt;.
This &lt;a href=&#34;https://blog.golang.org/godoc-documenting-go-code&#34;&gt;blog&lt;/a&gt; provides a good introduction to writing Godoc.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Managing Data</title>
      <link>https://jenkins-x.io/docs/resources/guides/mlops/data/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/mlops/data/</guid>
      <description>
        
        
        &lt;p&gt;In most scenarios, you will be expecting to remotely access data hosted elsewhere on your network and can manage this in code as part of your training scripts and service implementations. There are however a couple of situations in which Jenkins X can help you to manage certain types of data.&lt;/p&gt;
&lt;h2 id=&#34;handling-data-in-buckets&#34;&gt;Handling data in Buckets&lt;/h2&gt;
&lt;p&gt;If you are working with data in the form of arbitrary files, you can transfer these to your training environment via a Storage Bucket in your Cloud project with the following helper step within your build pipeline:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx step unstash -u &amp;lt;URL of bucket&amp;gt; -o &amp;lt;output filename or directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The URL should be in the form: s3://mybucket/tests/myOrg/myData/trainingset.xml where the protocol is set as appropriate to the Cloud provider you are using.&lt;/p&gt;
&lt;p&gt;You must ensure that the data has been uploaded to this bucket prior to starting the training build and should bear in mind that this command copies the specified file from the bucket to the working volume of the build container executing the current build step.&lt;/p&gt;
&lt;h2 id=&#34;working-with-volumes&#34;&gt;Working with Volumes&lt;/h2&gt;
&lt;p&gt;Under some circumstances, you may wish to create versioned collections of immutable training data that can be shared across multiple models and which are too large to easily copy from buckets in a timely manner.&lt;/p&gt;
&lt;p&gt;Under these circumstances, it is straightforward to create a named, persistent Kubernetes Volume within your Cloud project, mount it in read/write mode and upload your training data files to it, then unmount it ready for use.&lt;/p&gt;
&lt;p&gt;Within your training pipelines, you can then specify that this volume be mounted during the training build, in read-only mode, in more than one project in parallel.&lt;/p&gt;
&lt;p&gt;To do this, you need to modify the &lt;code&gt;jenkins-x.yml&lt;/code&gt; file in your training projects to reference the &lt;code&gt;volume&lt;/code&gt; and &lt;code&gt;volumeMount&lt;/code&gt; config necessary to connect the build container instance to your training data volume.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;buildPack: ml-python-gpu-training

pipelineConfig:
  pipelines:
    overrides:
      - pipeline: release
        stage: training
        name: training
        volumes:
          - name: trainingset
            gcePersistentDisk:
              pdName: mytrainingvolume01
              fsType: ext4
              readonly: true
        containerOptions:
          resources:
            limits:
              cpu: 4
              memory: 32Gi
              nvidia.com/gpu: 1
            requests:
              cpu: 0.5
              memory: 8Gi
              nvidia.com/gpu: 1
          volumeMounts:
            - name: trainingset
              mountPath: /trainingset
              readOnly: true 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that it is only possible to simultaneously share volumes that are mounted read-only.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Managing Data</title>
      <link>https://jenkins-x.io/v3/mlops/data/</link>
      <pubDate>Fri, 13 Mar 2020 15:03:05 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/mlops/data/</guid>
      <description>
        
        
        &lt;p&gt;In most scenarios, you will be expecting to remotely access data hosted elsewhere on your network and can manage this in code as part of your training scripts and service implementations. There are however a couple of situations in which Jenkins X can help you to manage certain types of data.&lt;/p&gt;
&lt;h2 id=&#34;handling-data-in-buckets&#34;&gt;Handling data in Buckets&lt;/h2&gt;
&lt;p&gt;If you are working with data in the form of arbitrary files, you can transfer these to your training environment via a Storage Bucket in your Cloud project.&lt;/p&gt;
&lt;p&gt;This usually results in your data being located at a URL thas should be in the form: s3://mybucket/tests/myOrg/myData/trainingset.xml where the protocol is set as appropriate to the Cloud provider you are using. You can then reference this in your training script.&lt;/p&gt;
&lt;p&gt;You must ensure that the data has been uploaded to this bucket prior to starting the training build and should bear in mind that this command copies the specified file from the bucket to the working volume of the build container executing the current build step.&lt;/p&gt;
&lt;h2 id=&#34;working-with-volumes&#34;&gt;Working with Volumes&lt;/h2&gt;
&lt;p&gt;Under some circumstances, you may wish to create versioned collections of immutable training data that can be shared across multiple models and which are too large to easily copy from buckets in a timely manner.&lt;/p&gt;
&lt;p&gt;Under these circumstances, it is straightforward to create a named, persistent Kubernetes Volume within your Cloud project, mount it in read/write mode and upload your training data files to it, then unmount it ready for use.&lt;/p&gt;
&lt;p&gt;Within your training pipelines, you can then specify that this volume be mounted during the training build, in read-only mode, in more than one project in parallel.&lt;/p&gt;
&lt;p&gt;To do this, you need to modify your local copy of the pipeline in .lighthouse/jenkins-x/release.yaml in your training projects to reference the &lt;code&gt;volume&lt;/code&gt; and &lt;code&gt;volumeMount&lt;/code&gt; config necessary to connect the build container instance to your training data volume.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/ml-python-gpu-training/release.yaml@versionStream
          name: &amp;#34;&amp;#34;
          resources:
            requests:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;0&amp;#34;
            limits:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;0&amp;#34;
          workingDir: /workspace/source
          volumeMounts:
            - name: trainingset
              mountPath: /trainingset
              readOnly: true 
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: &amp;#34;&amp;#34;
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-flake8
          resources: {}
        - image: ghcr.io/jenkins-x/builder-machine-learning-gpu:0.1.1317
          name: build-training
          resources:
            requests:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;1&amp;#34;
            limits:
              cpu: &amp;#34;1&amp;#34;
              memory: 4Gi
              nvidia.com/gpu: &amp;#34;1&amp;#34;
          script: |
            #!/bin/sh
            source /root/.bashrc
            python3 -m pip install -r ./requirements.txt
            python3 app.py
        - name: build-export-model
          resources: {}
  podTemplate: 
    volumes:
      - name: trainingset
        gcePersistentDisk:
          pdName: mytrainingvolume01
          fsType: ext4
          readonly: true
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that it is only possible to simultaneously share volumes that are mounted read-only.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jenkins X Video Tutorial Series - Deploy a Java Gradle app and add custom Tekton Steps To Your Pipeline</title>
      <link>https://jenkins-x.io/docs/resources/tutorials/java-gradle-app/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/tutorials/java-gradle-app/</guid>
      <description>
        
        
        &lt;/br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/scFfqwgSA5M&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Recorded Talks</title>
      <link>https://jenkins-x.io/docs/resources/demos-talks-posts/talks/</link>
      <pubDate>Sat, 05 May 2018 10:36:00 +0200</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/demos-talks-posts/talks/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://2019.devopsunicorns.com/sessions/the-recipe-to-continuous-delivery/&#34;&gt;2019-10-03 The Recipe For Continuous Delivery&lt;/a&gt; at &lt;a href=&#34;https://2019.devopsunicorns.com/&#34;&gt;DevOps Unicorns&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://youtu.be/YuGEAmPj_Fw&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.devclub.lv/announcement-of-devops-unicorns-warmup-79th-devclub-lv/&#34;&gt;2019-10-01 Choosing The Right Deployment Strategy&lt;/a&gt; at &lt;a href=&#34;https://www.devclub.lv/&#34;&gt;DevClub Riga&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=5MTx-xL6iQ0&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://2019.javazone.no/program/d8f893f0-3e08-41ef-9ec6-fe2fa93cd4ce&#34;&gt;2019-09-11 Jenkins X: Progressive Delivery for Kubernetes&lt;/a&gt; at &lt;a href=&#34;https://2019.javazone.no&#34;&gt;JavaZone&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://vimeo.com/362768726&#34;&gt;🎥 Vimeo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jbcnconf.com/2019/infoTalk.html?id=5cd1f98438da161cb0381424&#34;&gt;2019-05-27 Running Serverless Continuous Delivery&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://youtu.be/PEmsqzbiNFc&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=u7Z1V_NcmPY&#34;&gt;2019-07-18 Progressive Delivery en Kubernetes (Spanish)&lt;/a&gt;🎥 with &lt;a href=&#34;https://northemquality.github.io/&#34;&gt;NorthemQuality&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kccnceu19.sched.com/event/MPZ4?iframe=no&#34;&gt;2019-07-04 Modern CI/CD with Tekton and Prow Automated via Jenkins X&lt;/a&gt; at &lt;a href=&#34;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-europe-2019/&#34;&gt;KubeCon (Barcelona)&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/bobcatwilson&#34;&gt;Christie Wilson &lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jdrawlings&#34;&gt;James Rawlings&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=4EyTGYB7GvA&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://containerdays.sched.com/event/Q4Oc/gitops-by-courtesy-of-jenkins-x&#34;&gt;2019-06-25 GitOps by courtesy of Jenkins X&lt;/a&gt; at &lt;a href=&#34;https://www.containerdays.io/&#34;&gt;ContainerDays 2019, Hamburg (Germany)&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/GerdAschemann&#34;&gt;Gerd Aschemann&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=XzZIeCrB8p0&#34;&gt;🎥 YouTube&lt;/a&gt; (&lt;a href=&#34;http://aschemann.net/gerd/publications/jx-talk-condays-2019/&#34;&gt;Slides&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cdsummitchina19.sched.com/event/QaSO/progressive-delivery-continuous-delivery-the-right-way&#34;&gt;2019-06-24 Progressive Delivery: Continuous Delivery the Right Way&lt;/a&gt; at &lt;a href=&#34;https://cdsummitchina19.sched.com&#34;&gt;CDSummit China&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=-3VHVsgBTyo&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&amp;amp;index=2&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/Cloud-Native-Computing-Bern/events/260536132/&#34;&gt;2019-06-13 The recipe for continuous delivery&lt;/a&gt; at &lt;a href=&#34;https://www.meetup.com/Cloud-Native-Computing-Bern/&#34;&gt;Cloud Native Bern&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=mPcQ4MY35go&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sched.co/Nrmd&#34;&gt;2019-06-24 Serverless Jenkins on Kubernetes - Jenkins X&lt;/a&gt; at &lt;a href=&#34;https://www.lfasiallc.com/events/kubecon-cloudnativecon-china-2019/&#34;&gt;KubeCon CloudNativeCon 2019 (China)&lt;/a&gt; by &lt;a href=&#34;https://github.com/runzexia&#34;&gt;RunZe Xia&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=oHz6pBuvchE&amp;amp;t=3s&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=f1wVRnao-BE&#34;&gt;2019-06-11 Cloud Native CI/CD with Jenkins X and Tekton Pipelines&lt;/a&gt; on &lt;a href=&#34;https://www.youtube.com/channel/UCN2kblPjXKMcjjVYmwvquvg/&#34;&gt;Jenkins X YouTube&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/bobcatwilson&#34;&gt;Christie Wilson&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jdrawlings&#34;&gt;James Rawlings&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=f1wVRnao-BE&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jbcnconf.com/2019/infoTalk.html?id=5cd1f98438da161cb0381424&#34;&gt;2019-05-27: Running Serverless Continuous Delivery&lt;/a&gt; at &lt;a href=&#34;http://www.jbcnconf.com/2019/&#34;&gt;JBCNConf&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=PEmsqzbiNFc&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://voxxeddays.com/minsk/&#34;&gt;2019-04-24 Jenkins X: Continous Delivery for Kubernetes&lt;/a&gt; at &lt;a href=&#34;https://voxxeddays.com/minsk/&#34;&gt;Voxxed Days Minsk&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=wb2PK5uf5uI&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&amp;amp;index=4&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/Barcelona-Jenkins-Area-Meetup/events/259869827/&#34;&gt;2019-03-26 Ten Commandments Of GitOps Applied To Continuous Delivery&lt;/a&gt; at &lt;a href=&#34;https://www.meetup.com/Barcelona-Jenkins-Area-Meetup/&#34;&gt;Barcelona Jenkins Area Meetup&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=PtC6YvoL_W8&amp;amp;t=2s&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/Dubai-Jenkins-Area-Meetup/events/258523035/&#34;&gt;2019-03-06 Cloud Native CI/CD for Kubernetes with JenkinsX&lt;/a&gt; at &lt;a href=&#34;https://www.meetup.com/Dubai-Jenkins-Area-Meetup/&#34;&gt;Jenkins Area Meetup(JAM) Dubai&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=PtC6YvoL_W8&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qconlondon.com/london2019/presentation/cloud-native-cicd-jenkins-x-and-knative-pipelines&#34;&gt;2019-03-05 Cloud Native CI/CD with Jenkins X and Tekton Pipelines&lt;/a&gt; at &lt;a href=&#34;https://qconlondon.com/&#34;&gt;QConLondon&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jdrawlings&#34;&gt;James Rawlings&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/bobcatwilson&#34;&gt;Christie Wilson&lt;/a&gt; &lt;a href=&#34;https://qconlondon.com/system/files/presentation-slides/cloud_native_ci_cd_with_jenkins_x_and_knative_pipelines.pdf&#34;&gt;slides&lt;/a&gt; &lt;a href=&#34;https://www.infoq.com/presentations/cloud-native-ci-cd-jenkins-knative/?utm_source=presentations&amp;amp;utm_medium=london&amp;amp;utm_campaign=qcon&#34;&gt;🎥 InfoQ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=hrridH35y64&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&amp;amp;t=0s&amp;amp;index=2&#34;&gt;2019-02-28 Jenkins X: Continuous Delivery for Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=hrridH35y64&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&amp;amp;t=0s&amp;amp;index=2&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/de-DE/DevOps-Wuerzburg-Mainfranken/events/255614733/&#34;&gt;2019-01-14 Jenkins X - Continuously Driving the Kloud (German)&lt;/a&gt; at &lt;a href=&#34;https://www.meetup.com/DevOps-Wuerzburg-Mainfranken/&#34;&gt;DevOps Meetup Würzburg (Germany)&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/GerdAschemann&#34;&gt;Gerd Aschemann&lt;/a&gt; - (&lt;a href=&#34;https://www.youtube.com/watch?v=NDIut5uYVS0&#34;&gt;🎥 YouTube&lt;/a&gt;, &lt;a href=&#34;http://aschemann.net/gerd/publications/jx-talk-devops-wue-2019/&#34;&gt;Slides&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://sched.co/GrT2&#34;&gt;2018-12-12 KubeCon NA Seattle: Jenkins X: Continuous Delivery for Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=IDEa8seAzVc&amp;amp;index=1&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/YamamotoMasaki/jenkins-x-kubernetes&#34;&gt;2018-12-05 Jenkins x Kubernetesが簡単だと思ったら大変だった話 (Japanese)&lt;/a&gt; at &lt;a href=&#34;https://containerdays.jp/&#34;&gt;JapanContainerDays v18.12&lt;/a&gt; by &lt;a href=&#34;https://blog.nnasaki.com/&#34;&gt;Masaki Yamamoto&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=3-1MKJE6_mI&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.koliseo.com/events/commit-2018/r4p/5630471824211968/agenda#/5116072650866688/5742659054338048&#34;&gt;2018-11-23 CommitConf Madrid: Jenkins X: Continuous Delivery for Kubernetes (Spanish)&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://youtu.be/_FDl0wAxDME&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.devopspro.ru/carlos-sanchez/&#34;&gt;2018-11-15 DevOpsPro Moscow: Using Kubernetes for Continuous Integration and Continuous Delivery&lt;/a&gt; by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=p7fuJONFyeY&amp;amp;list=PLqYhGsQ9iSEq6jC6bxW_q7ezr16TpLRwR&amp;amp;index=25&amp;amp;t=0s&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.continuouslifecycle.de/veranstaltung-7488-jenkins-x-%E2%80%93-continuously-driving-the-kloud.html?id=7488&#34;&gt;2018-11-14 Jenkins X - Continuously Driving the Kloud (German)&lt;/a&gt; at &lt;a href=&#34;https://www.continuouslifecycle.de/&#34;&gt;Continuous Lifecycle (Mannheim, Germany)&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/GerdAschemann&#34;&gt;Gerd Aschemann&lt;/a&gt; (&lt;a href=&#34;http://aschemann.net/gerd/publications/jx-talk-conli-2018/&#34;&gt;Slides&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://openspacer.org/60-devops-community/222-devops-camp-compact-2018/session/926-jenkins-x/&#34;&gt;2018-10-13 Jenkins X - Continuously Driving the Kloud (German)&lt;/a&gt; at &lt;a href=&#34;https://devops-camp.de/&#34;&gt;Devops Camp Compact 2018 Nürnberg (Germany)&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/GerdAschemann&#34;&gt;Gerd Aschemann&lt;/a&gt; - &lt;a href=&#34;https://youtu.be/hqg7mbjBDTo?t=13352&amp;amp;end=16578&#34;&gt;🎥 YouTube Stream of Part 1&lt;/a&gt; (&lt;a href=&#34;http://aschemann.net/gerd/publications/jx-talk-docc-2018/&#34;&gt;Slides&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://scbcn.github.io&#34;&gt;2018-09-29 Software Crafters, Barcelona, Spain: Continuous Deployment With Jenkins X And Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://youtu.be/zoT8FyqITLI&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://bit.ly/jdd-conference-jx&#34;&gt;2018-10-08 JDD Poland: End to End automation and Continuous Delivery of Microservices for Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/cl4mer&#34;&gt;Paolo Carta&lt;/a&gt; with &lt;a href=&#34;https://www.youtube.com/watch?v=Twg6Ld3niW0&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://2018.javazone.no/program/7f3694e6-1936-4d14-9ac1-2b1f7585da41&#34;&gt;2018-09-12 JavaZone: Using Kubernetes for Continuous Integration and Continuous Delivery&lt;/a&gt; 🎥 by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://perujug.org/perujavaday2018/&#34;&gt;2018-06-30 CI/CD for Spring Boot Applications with Jenkins X&lt;/a&gt; at JavaDay Perú by &lt;a href=&#34;https://twitter.com/eddumelendez&#34;&gt;Eddú Meléndez&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=zCdCx5tCvtc&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jbcnconf.com/2018/infoTalk.html?id=37&#34;&gt;2018-06-11 Jenkins X: Continuous Delivery for Kubernetes&lt;/a&gt;🎥 at &lt;a href=&#34;http://www.jbcnconf.com/2018/&#34;&gt;JBCNConf 2018&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bIdMveCe75c&amp;amp;feature=youtu.be&#34;&gt;2018-06-05 Continuous Integration and Delivery with Kubernetes&lt;/a&gt;🎥 by &lt;a href=&#34;https://www.cncf.io/&#34;&gt;CNCF&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt; &lt;a href=&#34;https://docs.google.com/presentation/d/1hwt2lFh3cCeFdP4xoT_stMPs0nh2xVZUtze6o79WfXc/edit?usp=sharing&#34;&gt;slides&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?time_continue=1&amp;amp;v=53AtxQGXnMk&#34;&gt;2018-06-05 Jenkins X: Continuous Delivery for Kubernetes&lt;/a&gt;🎥 on &lt;a href=&#34;https://twitter.com/virtualJUG&#34;&gt;@virtualJUG&lt;/a&gt; with &lt;a href=&#34;https://docs.google.com/presentation/d/1hwt2lFh3cCeFdP4xoT_stMPs0nh2xVZUtze6o79WfXc/edit?usp=sharing&#34;&gt;slides&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cfp.devoxx.co.uk/2018/talk/XWT-9637/Jenkins_X:_Continuous_Delivery_for_Kubernetes&#34;&gt;Devoxx UK: Jenkins X: Continuous Delivery for Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=BF3MhFjvBTU&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rigadevdays.lv/&#34;&gt;2018-05-31 Dev Days, Riga: Continuous Deployment With Jenkins X And Kubernetes&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; &lt;a href=&#34;https://youtu.be/iughcmtWz8s&#34;&gt;🎥 YouTube&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uHe7R_iZSLU&#34;&gt;2018-05-04 Jenkins X:Easy CI/CD for Kubernetes&lt;/a&gt;🎥 at &lt;a href=&#34;https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-europe-2018/&#34;&gt;KubeCon + CloudNativeCon Europe 2018&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jstrachan&#34;&gt;James Strachan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=jls74bflA3s&amp;amp;t=0s&amp;amp;list=PLHsuXkXI4xdjGlGkCBdxIAmkzfWXqsUrO&amp;amp;index=2&#34;&gt;2018-04-19 Devoxx France: Using Kubernetes for Continuous Integration and Continuous Delivery&lt;/a&gt;🎥 by &lt;a href=&#34;https://csanchez.org&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://skillsmatter.com/skillscasts/11833-kubernetes-april&#34;&gt;2018-04-12 CI/CD with Jenkins X on Kubernetes&lt;/a&gt;🎥 at &lt;a href=&#34;https://skillsmatter.com/meetups/10867-kubernetes-april&#34;&gt;Kubernetes Meetup, London&lt;/a&gt;  by &lt;a href=&#34;https://twitter.com/rajdavies&#34;&gt;Rob Davies&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/jdrawlings&#34;&gt;JamesRawlings&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also check out the &lt;a href=&#34;https://jenkins-x.io/blog/news/&#34;&gt;Jenkins X Blog&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/docs/resources/demos-talks-posts/articles/&#34;&gt;Articles&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Google</title>
      <link>https://jenkins-x.io/docs/install-setup/boot/clouds/google/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/boot/clouds/google/</guid>
      <description>
        
        
        &lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;On GCP we default to using GCR as the container registry (using &lt;code&gt;gcr.io&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Please set your provider to &lt;code&gt;gke&lt;/code&gt; via this in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; to indicate you are using GCP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;clusterConfig&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gke&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also recommend using &lt;a href=&#34;https://jenkins-x.io/architecture/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; as this works out of the box with kaniko for creating container images without needing a docker daemon and works well with GCR.&lt;/p&gt;
&lt;h2 id=&#34;configuring-dns-and-tls&#34;&gt;Configuring DNS and TLS&lt;/h2&gt;
&lt;p&gt;For a secure Jenkins X installation, you must enable TLS when interacting with the vault service.
To configure TLS, you must first configure Zone DNS settings within Google Cloud Platform, and then configure external DNS settings for Ingress and TLS in the &lt;code&gt;jx-requirements.yml&lt;/code&gt; configuration file.&lt;/p&gt;
&lt;h3 id=&#34;configuring-google-cloud-dns&#34;&gt;Configuring Google Cloud DNS&lt;/h3&gt;
&lt;p&gt;You should have a domain name registered with a name registrar, for example &lt;code&gt;www.acmecorp.example&lt;/code&gt; before configuring DNS Zone settings.
For more information, refer to &lt;a href=&#34;https://cloud.google.com/dns/docs/quickstart#create_a_managed_public_zone&#34;&gt;Creating a managed public zone&lt;/a&gt; from the Google documentation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Navigate via browser to the &lt;a href=&#34;https://console.cloud.google.com/projectselector2/home/dashboard&#34;&gt;Project
Selector&lt;/a&gt;
page. and choose your Google Cloud Platform project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/networking/dns/zones/~new&#34;&gt;Create a DNS
zone&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Choose Public as your &lt;em&gt;Zone Type&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type a &lt;em&gt;Zone Name&lt;/em&gt; for your zone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Input a DNS suffix in &lt;em&gt;DNS name&lt;/em&gt;, for example &lt;code&gt;acmecorp.example&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose your &lt;em&gt;DNSSEC&lt;/em&gt; or DNS Security state, which should be set to &lt;code&gt;Off&lt;/code&gt; for this configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Input a &lt;em&gt;Description&lt;/em&gt; for your DNS zone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once created, the &lt;em&gt;Zone Details&lt;/em&gt; page loads.
&lt;em&gt;NS&lt;/em&gt; (Name server) and &lt;em&gt;SOA&lt;/em&gt; (Start of authority) records are automatically created for your domain (for example &lt;code&gt;acmecorp.example&lt;/code&gt;)&lt;/p&gt;
&lt;h3 id=&#34;configuring-external-dns-in-jenkins-x&#34;&gt;Configuring External DNS in Jenkins X&lt;/h3&gt;
&lt;p&gt;Once you have configured Google Cloud DNS, you can use browse the &lt;a href=&#34;https://console.cloud.google.com/net-services/dns/zones&#34;&gt;Zones&lt;/a&gt; page in your Google Cloud Platform project to setup your external domain.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    NOTE: External DNS will automatically update DNS records if you reuse the domain name, so if you delete an old cluster and create a new one it will preserve the same domain configuration for the new cluster.

&lt;/div&gt;

&lt;p&gt;To setup External DNS:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Choose a unique DNS name; you can use nested domains (for example, &lt;code&gt;cluster1.acmecorp.example&lt;/code&gt;). Enter the name in the &lt;code&gt;DNS Name&lt;/code&gt; field&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;jx create domain&lt;/code&gt; command against your domain name, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create domain gke --domain cluster1.acmecorp.example
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will be prompted for information as needed during the setup:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Choose your Google Cloud Platform project from the available list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your existing managed servers to use the displayed list of Cloud DNS nameservers. Copy the list for use in the next steps.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Next up is configuring GCP:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;From the Google Cloud Platform &lt;a href=&#34;https://console.cloud.google.com/net-services/dns/zones&#34;&gt;Zones&lt;/a&gt; page, change the &lt;em&gt;Resource Record Type&lt;/em&gt; to &lt;code&gt;NS&lt;/code&gt;) and use the default values for your domain for for &lt;em&gt;TTL&lt;/em&gt; (&lt;code&gt;5&lt;/code&gt;) and &lt;em&gt;TTL Unit&lt;/em&gt; (&lt;code&gt;minutes&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the first nameserver to the &lt;em&gt;Name server&lt;/em&gt; field&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Add item&lt;/code&gt; and add any subsequent nameservers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, configure Jenkins X for the new domain names:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edit the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file and update the &lt;code&gt;domain&lt;/code&gt; field (in &lt;code&gt;ingress&lt;/code&gt;) to your domain name, for example &lt;code&gt;cluster1.acmecorp.example&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;em&gt;tls&lt;/em&gt; setting, enable TLS with &lt;code&gt;enabled: true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The resulting &lt;code&gt;jx-requirements.yml&lt;/code&gt; entries for these settings should look similar to the example below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;gitops&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cluster1.acmecorp.example&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;externalDNS&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;jx.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;email&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;certifiable@acmecorp.example&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;production&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;secretStorage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;vault&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    Remember to run &lt;code&gt;jx boot&lt;/code&gt; for the changes to take effect in your environment.

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: How it works</title>
      <link>https://jenkins-x.io/docs/install-setup/boot/how-it-works/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/boot/how-it-works/</guid>
      <description>
        
        
        &lt;h2 id=&#34;source-repositories&#34;&gt;Source Repositories&lt;/h2&gt;
&lt;p&gt;Boot automatically sets up any source repositories which exist in the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34;&gt;repositories/templates&lt;/a&gt; folder as &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt;  custom resources and uses any associated &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#scheduler&#34;&gt;Scheduler&lt;/a&gt; custom resources to regenerate the Prow configuration.&lt;/p&gt;
&lt;p&gt;Boot also automatically creates or updates any required webhooks on the git provider for your &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt; resources.&lt;/p&gt;
&lt;p&gt;If you are using GitOps we hope to automate the population of the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34;&gt;repositories/templates&lt;/a&gt; folder as you import/create projects.
Until then you can manually create a Pull Request on your boot git repository via &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_create_pullrequest_repositories/&#34;&gt;jx step create pullrequest repositories&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pipeline&#34;&gt;Pipeline&lt;/h2&gt;
&lt;p&gt;The install/upgrade process is defined in a &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipeline&lt;/a&gt; in a file called &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/jenkins-x.yml&#34;&gt;jenkins-x.yml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Typically you won&amp;rsquo;t need to edit this file; though if you do see the &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;editing guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The boot process is configured using Helm style configuration in &lt;code&gt;values.yaml&lt;/code&gt; files.
Though we support a few &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/4328&#34;&gt;extensions to Helm&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;parameters-file&#34;&gt;Parameters file&lt;/h3&gt;
&lt;p&gt;We define a &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/master/env/parameters.yaml&#34;&gt;env/parameters.yaml&lt;/a&gt; file which defines all the parameters either checked in or loaded from Vault or a local file system secrets location.&lt;/p&gt;
&lt;h4 id=&#34;injecting-secrets-into-the-parameters&#34;&gt;Injecting secrets into the parameters&lt;/h4&gt;
&lt;p&gt;If you look at the current &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/master/env/parameters.yaml&#34;&gt;env/parameters.yaml&lt;/a&gt; file you will see some values inlined and others use URIs of the form &lt;code&gt;local:my-cluster-folder/nameofSecret/key&lt;/code&gt;. This currently supports 2 schemes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vault:&lt;/code&gt; to load from a path + key from Vault&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local:&lt;/code&gt; to load from a key in a YAML file at &lt;code&gt;~/.jx/localSecrets/$path.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means we can populate all the Parameters we need on startup then refer to them from &lt;code&gt;values.tmpl.yaml&lt;/code&gt; to populate the tree of values to then inject those into Vault.&lt;/p&gt;
&lt;h3 id=&#34;populating-the-parametersyaml-file&#34;&gt;Populating the &lt;code&gt;parameters.yaml&lt;/code&gt; file&lt;/h3&gt;
&lt;p&gt;We can then use the new step to populate the &lt;code&gt;parameters.yaml&lt;/code&gt; file in the Pipeline via this command in the &lt;code&gt;env&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create values --name parameters
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This uses the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/env/parameters.tmpl.schema.json&#34;&gt;parameters.tmpl.schema.json&lt;/a&gt; file which powers the UI.&lt;/p&gt;
&lt;h3 id=&#34;improvements-to-valuesyaml&#34;&gt;Improvements to values.yaml&lt;/h3&gt;
&lt;h4 id=&#34;support-a-tree-of-valuesyaml-files&#34;&gt;Support a tree of values.yaml files&lt;/h4&gt;
&lt;p&gt;Rather than a huge huge deeply nested values.yaml file we can have a tree of files for each App only include the App specific configuration in each folder. e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;env/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  values.yaml   &lt;span style=&#34;color:#75715e&#34;&gt;# top level configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  prow/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    values.yaml &lt;span style=&#34;color:#75715e&#34;&gt;# prow specific config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tekton/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    values.yaml  &lt;span style=&#34;color:#75715e&#34;&gt;# tekton specific config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then you can omit the &lt;code&gt;prow:&lt;/code&gt; indentation in the &lt;code&gt;env/prow/values.yaml&lt;/code&gt; file to make the YAML you create/edit smaller and simpler.
It also means longer term we can generate JSON schema files for each &lt;code&gt;env/$app/values.yaml&lt;/code&gt; files so that we can support better editor/IDE integration.&lt;/p&gt;
&lt;h4 id=&#34;valuestmplyaml-templates&#34;&gt;values.tmpl.yaml templates&lt;/h4&gt;
&lt;p&gt;When using &lt;code&gt;jx step helm apply&lt;/code&gt; we now allow &lt;code&gt;values.tmpl.yaml&lt;/code&gt; files to use Go/Helm templates just like &lt;code&gt;templates/foo.yaml&lt;/code&gt; files support inside Helm charts so that we can generate value/secret strings which can use templating to compose things from smaller secret values (for example, creating a maven &lt;code&gt;settings.xml&lt;/code&gt; file or docker &lt;code&gt;config.json&lt;/code&gt; which includes many user/passwords for different registries).&lt;/p&gt;
&lt;p&gt;We can then check in the &lt;code&gt;values.tmpl.yaml&lt;/code&gt; file which does all of this composition and reference the actual secret values via URLs (or template functions) to access vault or local vault files&lt;/p&gt;
&lt;p&gt;To do this we use expressions like: &lt;code&gt;{{ .Parameter.pipelineUser.token }}&lt;/code&gt; somewhere in the &lt;code&gt;values.tmpl.yaml&lt;/code&gt; values file. So this is like injecting values into the helm templates; but it happens up front to help generate the &lt;code&gt;values.yaml&lt;/code&gt; files.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>About: Accelerate</title>
      <link>https://jenkins-x.io/about/overview/accelerate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/about/overview/accelerate/</guid>
      <description>
        
        
        &lt;img src=&#34;https://jenkins-x.io/images/accelerate.jpg&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;Jenkins X is a reimagined CI/CD implementation for the Cloud which is heavily influenced by the State of DevOps reports and more recently the &lt;a href=&#34;https://www.amazon.co.uk/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339&#34;&gt;Accelerate&lt;/a&gt; book from &lt;a href=&#34;https://twitter.com/nicolefv&#34;&gt;Nicole Forsgren&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jezhumble&#34;&gt;Jez Humble&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/RealGeneKim?&#34;&gt;Gene Kim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Years of gathering data from real world teams and organizations which has been analyzed by inspiring thought leaders and data scientists from the DevOps world.  The Accelerate book recommends a number of capabilities that Jenkins X is implementing so users gain the scientifically proven benefits, out of the box.  We&amp;rsquo;ve started documenting the capabilities that are available today and will continue as more become available.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/capabilities.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h1 id=&#34;use-version-control-for-all-artifacts&#34;&gt;Use version control for all artifacts&lt;/h1&gt;
&lt;p&gt;The Weaveworks folks coined the term GitOps which we love.  Any change to an environment, whether it be a new application, version upgrade, resource limit change or simple application configuration should be raised as a Pull Request to Git, have checks run against it like a form of CI for environments and approved by a team that has control over what goes into the related environment.  We now enable governance have full traceability for any change to an environment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability:  Use version control for all production artifacts&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;automate-your-deployment-process&#34;&gt;Automate your deployment process&lt;/h1&gt;
&lt;h2 id=&#34;environments&#34;&gt;Environments&lt;/h2&gt;
&lt;p&gt;Jenkins X will automatically create Git backed environments during installation and makes it easy to add new ones using &lt;code&gt;jx create environment&lt;/code&gt;.  Additionally when creating new applications via a quickstart (&lt;code&gt;jx create quickstart&lt;/code&gt;), Java based SpringBoot (&lt;code&gt;jx create spring&lt;/code&gt;) or importing existing applications (&lt;code&gt;jx import&lt;/code&gt;), Jenkins X will both automatically add CI / CD pipelines and setup the jobs, git repos and webhooks to enable an automated deployment process.&lt;/p&gt;
&lt;p&gt;Out of the box Jenkins X creates Staging and Production (this is customizable) permanent environments as well as temporary environments for preview applications from Pull Requests.&lt;/p&gt;
&lt;h3 id=&#34;previews-environments&#34;&gt;Previews Environments&lt;/h3&gt;
&lt;p&gt;We are trying to move as much testing, security, validation and experimentation for a change before it&amp;rsquo;s merged to master.  With the use of temporary dynamically created Preview Environments any Pull Request can have a preview version built and deployed, including libraries that feed into a downstream deployable application.  This means we can code review, test, collaborate better with all teams that are involved in agreeing that change can go live.&lt;/p&gt;
&lt;p&gt;Ultimately Jenkins X wants to provide a way that developers, testers, designers and product managers can be as sure as they can that when a change is merged to master it works as expected.  We want to be confident the proposed change does not negatively affect any service or feature as well as deliver the value it is intended to.&lt;/p&gt;
&lt;p&gt;Where Preview Environments get really interesting is when we are able to progress a short term PR through various stages of maturity and confidence where we begin to direct a percentage of real production traffic (either shadow traffic or even beta users).  We can then analyze the value of the proposed change and possible run multiple automated experiments over time using Hypothesis Driven Development.  This helps give us better understanding of how the change will perform when released to all users. Though we need to make sure PRs stay short lived for trunk based development; lets try avoid PRs turning into long term feature branches!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Foster and enable team experimentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Using preview environments is a great way to introduce better test automation.  While Jenkins X enables this we don&amp;rsquo;t yet have examples of automated tests being run against a preview environment.  A simple test would be to ensure the application starts ok and Kubernetes liveness check pass for an amount of time. This relates to&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Implement Test Automation&lt;/em&gt;
&lt;em&gt;Related Accelerate capability: Automate your deployment process&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;permanent-environments&#34;&gt;Permanent Environments&lt;/h3&gt;
&lt;p&gt;In software development we&amp;rsquo;re used to working with multiple environments in the lead up to a change being promoted to a live production environment.  Whilst this seems business as usual it can cause significant delays to other changes if for any reason that it is deemed not fit via some process that didn&amp;rsquo;t happen pre merge to master.  Subsequent commits then become blocked and can cause delay of urgent changes being promoted to production.&lt;/p&gt;
&lt;p&gt;As above Jenkins X wants any changes and experiments to be validated before it is merged to master.  We would like changes in a staging environment to be held there for a short amount of time before being promoted, ideally in an automated fashion.&lt;/p&gt;
&lt;p&gt;The default Jenkins X pipelines provide deployment automation via environments.  These are customizable to suite your own CI / CD pipeline requirements.&lt;/p&gt;
&lt;p&gt;Jenkins X recommends Staging should act as a near as possible reflection on production, ideally with real production data shadowed to it using a service mesh to understand the behavior.  This also helps when developing changes in preview where we can link to non production services in staging.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Automate your deployment process&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;use-trunk-based-development&#34;&gt;Use trunk-based development&lt;/h1&gt;
&lt;p&gt;The Accelerate book found that teams which use trunk based development with short lived branches performed better.  This has always worked for the Jenkins X core team members so this was an easy capability for Jenkins X to implement when setting up Git repositories and CI/CD jobs.&lt;/p&gt;
&lt;h1 id=&#34;implement-continuous-integration&#34;&gt;Implement Continuous Integration&lt;/h1&gt;
&lt;p&gt;Jenkins X sees CI as the effort of validating a proposed change via Pull Requests before it is merged to master.  Jenkins X will automatically configure source code repositories, Jenkins and Kubernetes to provide Continuous Integration out of the box.&lt;/p&gt;
&lt;h1 id=&#34;implement-continuous-delivery&#34;&gt;Implement Continuous Delivery&lt;/h1&gt;
&lt;p&gt;Jenkins X sees CD as the effort of taking that change after it&amp;rsquo;s been merged to master through to running in a live environment.  Jenkins X automates many parts in a release pipeline:&lt;/p&gt;
&lt;p&gt;Jenkins X advocates the use of semantic versioning.  We use git tags to calculate the next release version which means we don&amp;rsquo;t need to store the latest release version in the master branch.  Where release systems do store the last or next version in Git repos it means CD becomes hard, as a commit in a release pipeline back to master triggers a new release.  This results in a recursive release trigger.  Using a Git tag helps avoid this situation which Jenkins X completely automates.&lt;/p&gt;
&lt;p&gt;Jenkins X will automatically create a released version on &lt;strong&gt;every&lt;/strong&gt; merge to master which can then potentially progress through to production.&lt;/p&gt;
&lt;h1 id=&#34;use-loosely-coupled-architecture&#34;&gt;Use loosely coupled architecture&lt;/h1&gt;
&lt;p&gt;By targeting Kubernetes users of Jenkins X can take advantage of many of the cloud features that help design and develop loosely coupled solutions.  Service discovery, fault tolerance, scalability, health checks, rolling upgrades, container scheduling and orchestration to name just a few examples of where Kubernetes helps.&lt;/p&gt;
&lt;h1 id=&#34;architect-for-empowered-teams&#34;&gt;Architect for empowered teams&lt;/h1&gt;
&lt;p&gt;Jenkins X aims to help polyglot application developers.  Right now Jenkins X has quickstarts and automated CI/CD setup with language detection for Golang, Java, NodeJS, .Net, React, Angular, Rust, Swift and more to come.  What this also does is provide a consistent Way Of Working so developers can concentrate on developing.&lt;/p&gt;
&lt;p&gt;Jenkins X also provides many addons, for example Grafana and Prometheus for automated metrics collection and visualization.  In this example centralized metrics help understand how your applications behave when built and deployed on Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/devpods/&#34;&gt;DevPods&lt;/a&gt; are another feature which enables developers to edit source code in their local IDE, behind the scenes it is then synced to the cloud and rapidly built and redeployed.&lt;/p&gt;
&lt;p&gt;Jenkins X believes providing developers automation that helps them experiment in the cloud, with different technologies and  feedback empowers them to make the best decisions - faster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Accelerate</title>
      <link>https://jenkins-x.io/v3/devops/accelerate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/devops/accelerate/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X is a reimagined CI/CD implementation for the Cloud which is heavily influenced by the State of DevOps reports and more recently the &lt;a href=&#34;https://www.amazon.co.uk/Accelerate-Software-Performing-Technology-Organizations/dp/1942788339&#34;&gt;Accelerate&lt;/a&gt; book from &lt;a href=&#34;https://twitter.com/nicolefv&#34;&gt;Nicole Forsgren&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jezhumble&#34;&gt;Jez Humble&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/RealGeneKim?&#34;&gt;Gene Kim&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/accelerate.jpg&#34; class=&#34;img-thumbnail&#34; width=&#34;500&#34; height=&#34;750&#34;&gt;
&lt;p&gt;Years of gathering data from real world teams and organizations which has been analyzed by inspiring thought leaders and data scientists from the DevOps world.  The Accelerate book recommends a number of capabilities that Jenkins X is implementing so users gain the scientifically proven benefits, out of the box.  We&amp;rsquo;ve started documenting the capabilities that are available today and will continue as more become available.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/capabilities.png&#34; class=&#34;img-thumbnail&#34; width=&#34;400&#34; height=&#34;750&#34;&gt;
&lt;h1 id=&#34;use-version-control-for-all-artifacts&#34;&gt;Use version control for all artifacts&lt;/h1&gt;
&lt;p&gt;The Weaveworks folks coined the term GitOps which we love.  Any change to an environment, whether it be a new application, version upgrade, resource limit change or simple application configuration should be raised as a Pull Request to Git, have checks run against it like a form of CI for environments and approved by a team that has control over what goes into the related environment.  We now enable governance have full traceability for any change to an environment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability:  Use version control for all production artifacts&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;automate-your-deployment-process&#34;&gt;Automate your deployment process&lt;/h1&gt;
&lt;h2 id=&#34;environments&#34;&gt;Environments&lt;/h2&gt;
&lt;p&gt;Jenkins X will automatically create Git backed environments during installation and makes it easy to add new ones using &lt;code&gt;jx create environment&lt;/code&gt;.  Additionally when creating new applications via a quickstart (&lt;code&gt;jx create quickstart&lt;/code&gt;), Java based SpringBoot (&lt;code&gt;jx create spring&lt;/code&gt;) or importing existing applications (&lt;code&gt;jx import&lt;/code&gt;), Jenkins X will both automatically add CI / CD pipelines and setup the jobs, git repos and webhooks to enable an automated deployment process.&lt;/p&gt;
&lt;p&gt;Out of the box Jenkins X creates Staging and Production (this is customizable) permanent environments as well as temporary environments for preview applications from Pull Requests.&lt;/p&gt;
&lt;h3 id=&#34;previews-environments&#34;&gt;Previews Environments&lt;/h3&gt;
&lt;p&gt;We are trying to move as much testing, security, validation and experimentation for a change before it&amp;rsquo;s merged to master.  With the use of temporary dynamically created Preview Environments any Pull Request can have a preview version built and deployed, including libraries that feed into a downstream deployable application.  This means we can code review, test, collaborate better with all teams that are involved in agreeing that change can go live.&lt;/p&gt;
&lt;p&gt;Ultimately Jenkins X wants to provide a way that developers, testers, designers and product managers can be as sure as they can that when a change is merged to master it works as expected.  We want to be confident the proposed change does not negatively affect any service or feature as well as deliver the value it is intended to.&lt;/p&gt;
&lt;p&gt;Where Preview Environments get really interesting is when we are able to progress a short term PR through various stages of maturity and confidence where we begin to direct a percentage of real production traffic (either shadow traffic or even beta users).  We can then analyze the value of the proposed change and possible run multiple automated experiments over time using Hypothesis Driven Development.  This helps give us better understanding of how the change will perform when released to all users. Though we need to make sure PRs stay short lived for trunk based development; lets try avoid PRs turning into long term feature branches!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Foster and enable team experimentation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Using preview environments is a great way to introduce better test automation.  While Jenkins X enables this we don&amp;rsquo;t yet have examples of automated tests being run against a preview environment.  A simple test would be to ensure the application starts ok and Kubernetes liveness check pass for an amount of time. This relates to&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Implement Test Automation&lt;/em&gt;
&lt;em&gt;Related Accelerate capability: Automate your deployment process&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;permanent-environments&#34;&gt;Permanent Environments&lt;/h3&gt;
&lt;p&gt;In software development we&amp;rsquo;re used to working with multiple environments in the lead up to a change being promoted to a live production environment.  Whilst this seems business as usual it can cause significant delays to other changes if for any reason that it is deemed not fit via some process that didn&amp;rsquo;t happen pre merge to master.  Subsequent commits then become blocked and can cause delay of urgent changes being promoted to production.&lt;/p&gt;
&lt;p&gt;As above Jenkins X wants any changes and experiments to be validated before it is merged to master.  We would like changes in a staging environment to be held there for a short amount of time before being promoted, ideally in an automated fashion.&lt;/p&gt;
&lt;p&gt;The default Jenkins X pipelines provide deployment automation via environments.  These are customizable to suite your own CI / CD pipeline requirements.&lt;/p&gt;
&lt;p&gt;Jenkins X recommends Staging should act as a near as possible reflection on production, ideally with real production data shadowed to it using a service mesh to understand the behavior.  This also helps when developing changes in preview where we can link to non production services in staging.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Related Accelerate capability: Automate your deployment process&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;use-trunk-based-development&#34;&gt;Use trunk-based development&lt;/h1&gt;
&lt;p&gt;The Accelerate book found that teams which use trunk based development with short lived branches performed better.  This has always worked for the Jenkins X core team members so this was an easy capability for Jenkins X to implement when setting up Git repositories and CI/CD jobs.&lt;/p&gt;
&lt;h1 id=&#34;implement-continuous-integration&#34;&gt;Implement Continuous Integration&lt;/h1&gt;
&lt;p&gt;Jenkins X sees CI as the effort of validating a proposed change via Pull Requests before it is merged to master.  Jenkins X will automatically configure source code repositories, Jenkins and Kubernetes to provide Continuous Integration out of the box.&lt;/p&gt;
&lt;h1 id=&#34;implement-continuous-delivery&#34;&gt;Implement Continuous Delivery&lt;/h1&gt;
&lt;p&gt;Jenkins X sees CD as the effort of taking that change after it&amp;rsquo;s been merged to master through to running in a live environment.  Jenkins X automates many parts in a release pipeline:&lt;/p&gt;
&lt;p&gt;Jenkins X advocates the use of semantic versioning.  We use git tags to calculate the next release version which means we don&amp;rsquo;t need to store the latest release version in the master branch.  Where release systems do store the last or next version in Git repos it means CD becomes hard, as a commit in a release pipeline back to master triggers a new release.  This results in a recursive release trigger.  Using a Git tag helps avoid this situation which Jenkins X completely automates.&lt;/p&gt;
&lt;p&gt;Jenkins X will automatically create a released version on &lt;strong&gt;every&lt;/strong&gt; merge to master which can then potentially progress through to production.&lt;/p&gt;
&lt;h1 id=&#34;use-loosely-coupled-architecture&#34;&gt;Use loosely coupled architecture&lt;/h1&gt;
&lt;p&gt;By targeting Kubernetes users of Jenkins X can take advantage of many of the cloud features that help design and develop loosely coupled solutions.  Service discovery, fault tolerance, scalability, health checks, rolling upgrades, container scheduling and orchestration to name just a few examples of where Kubernetes helps.&lt;/p&gt;
&lt;h1 id=&#34;architect-for-empowered-teams&#34;&gt;Architect for empowered teams&lt;/h1&gt;
&lt;p&gt;Jenkins X aims to help polyglot application developers.  Right now Jenkins X has quickstarts and automated CI/CD setup with language detection for Golang, Java, NodeJS, .Net, React, Angular, Rust, Swift and more to come.  What this also does is provide a consistent Way Of Working so developers can concentrate on developing.&lt;/p&gt;
&lt;p&gt;Jenkins X also provides many addons, for example Grafana and Prometheus for automated metrics collection and visualization.  In this example centralized metrics help understand how your applications behave when built and deployed on Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/devpods/&#34;&gt;DevPods&lt;/a&gt; are another feature which enables developers to edit source code in their local IDE, behind the scenes it is then synced to the cloud and rapidly built and redeployed.&lt;/p&gt;
&lt;p&gt;Jenkins X believes providing developers automation that helps them experiment in the cloud, with different technologies and  feedback empowers them to make the best decisions - faster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Apps</title>
      <link>https://jenkins-x.io/docs/resources/guides/extending-jx/apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/extending-jx/apps/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-are-apps&#34;&gt;What are Apps&lt;/h2&gt;
&lt;p&gt;Jenkins X Apps are distributed as Helm Charts via Helm Chart repositories. Any Helm chart can be installed as an app
using &lt;code&gt;jx add app&lt;/code&gt;, although Jenkins X adds various capabilities to Helm Charts including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the ability to interactively ask questions to generate &lt;code&gt;values.yaml&lt;/code&gt; based on JSON Schema&lt;/li&gt;
&lt;li&gt;the ability to create pull requests against the GitOps repo that manages your team/cluster&lt;/li&gt;
&lt;li&gt;the ability to store secrets in vault&lt;/li&gt;
&lt;li&gt;the ability to upgrade all apps to the latest version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Planned features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;integrating &lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize&#34;&gt;kustomize&lt;/a&gt; to allow existing charts to be modified&lt;/li&gt;
&lt;li&gt;storing Helm repository credentials in vault&lt;/li&gt;
&lt;li&gt;taking existing &lt;code&gt;values.yaml&lt;/code&gt; as defaults when asking questions based on JSON Schema during app upgrade&lt;/li&gt;
&lt;li&gt;only asking new questions during app upgrade&lt;/li&gt;
&lt;li&gt;integration for bash completion&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;official-apps-repositry&#34;&gt;Official Apps repositry&lt;/h3&gt;
&lt;p&gt;Jenkins X provides a lot Apps like: Gloo, Istio, Kubeless and more in &lt;a href=&#34;https://github.com/jenkins-x-apps&#34;&gt;https://github.com/jenkins-x-apps&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;cli-commands&#34;&gt;CLI Commands&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_add_app/&#34;&gt;jx add app&lt;/a&gt; - Adds an app to Jenkins X&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_delete_app/&#34;&gt;jx delete app&lt;/a&gt; - Deletes one or more apps from Jenkins X&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_get_apps/&#34;&gt;jx get apps&lt;/a&gt; - Display one or more installed apps&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade_apps/&#34;&gt;jx upgrade apps&lt;/a&gt; - Upgrades one or more apps to a newer release&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;structure-of-an-app-chart&#34;&gt;Structure of an App chart&lt;/h2&gt;
&lt;p&gt;In addition to the structure of a regular helm chart a Jenkins X App chart contains the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;values.schema.yaml&lt;/code&gt;: a JSON schema extended with conditions, field values and questions that is used to point out and prompt the user for customizable values the app should be installed with.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;templates/app.yaml&lt;/code&gt;: a Jenkins X &lt;code&gt;App&lt;/code&gt; custom resource: allows to define a &lt;code&gt;values.schema.yaml&lt;/code&gt; transformation which can be used to inject cluster-specific values as for instance its domain and TLS settings (which can be obtained by mounting the ConfigMap &lt;code&gt;ingress-config&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When &lt;code&gt;jx add app&lt;/code&gt; is called the corresponding helm chart is fetched, its &lt;code&gt;values.schema.yaml&lt;/code&gt; transformed using the &lt;code&gt;App&lt;/code&gt; resource and the user prompted for the contained questions (non-const fields).
From the user&amp;rsquo;s answers a &lt;code&gt;values.yaml&lt;/code&gt; is generated and used to install the chart.&lt;/p&gt;
&lt;h2 id=&#34;how-to-test-local-app-chart-changes&#34;&gt;How to test local App chart changes&lt;/h2&gt;
&lt;p&gt;You can build your app chart locally, upload it in your cluster&amp;rsquo;s chart repository and call &lt;code&gt;jx add app&lt;/code&gt; referencing your uploaded chart.
This can be done as follows from within your chart&amp;rsquo;s directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_APP_NAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_APP_VERSION&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART_REPO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_CHART_REPO_URL&amp;gt; &lt;span style=&#34;color:#75715e&#34;&gt;# listed by `jx get urls`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART_REPO_USR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_USERNAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART_REPO_PSW&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_PASSWORD&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm init --client-only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo add &amp;lt;DEP_REPO_NAME&amp;gt; &amp;lt;DEP_REPO_URL&amp;gt; &lt;span style=&#34;color:#75715e&#34;&gt;# required if dependencies need to be loaded&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm dependency build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/version: .*/version: &lt;/span&gt;$CHART_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;/g&amp;#34;&lt;/span&gt; -i Chart.yaml &lt;span style=&#34;color:#75715e&#34;&gt;# set the app&amp;#39;s current version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm lint .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm package .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --fail -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CHART_REPO_USR&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;$CHART_REPO_PSW&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; --data-binary &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CHART_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CHART_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.tgz&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;CHART_REPO&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/api/charts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx add app --repository $CHART_REPO --version $CHART_VERSION $CHART_NAME
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Community: Boot Apps with Helm 3 and Helmfile</title>
      <link>https://jenkins-x.io/community/labs/enhancements/proposals/2/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/community/labs/enhancements/proposals/2/readme/</guid>
      <description>
        
        
        &lt;p&gt;Issue: &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6442&#34;&gt;https://github.com/jenkins-x/jx/issues/6442&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Old design doc:: &lt;a href=&#34;https://docs.google.com/document/d/1DL1oEeAZtWFfpJOWk5UVO54D88BnlqZDf5IDaOkGxCk/edit?usp=sharing&#34;&gt;https://docs.google.com/document/d/1DL1oEeAZtWFfpJOWk5UVO54D88BnlqZDf5IDaOkGxCk/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;current-implementation&#34;&gt;Current Implementation&lt;/h3&gt;
&lt;p&gt;Refer to th &lt;a href=&#34;https://github.com/jenkins-x-labs/jxl&#34;&gt;jxl&lt;/a&gt; repository for an overview of how to use helmfile and helm 3.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;We want a simple canonical way to install any helm chart in any namespace without having to manually hack the &lt;code&gt;jx boot&lt;/code&gt; pipeline file: &lt;code&gt;jenkins-x.yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This will make it easy for people or software to easily add/remove apps to any git repository for any Environment (dev / staging / production).&lt;/p&gt;
&lt;p&gt;The boot config repo has become quite complex and hard to manage upgrades to and share common config between different flavours of base boot config repos.  It’s also hard to experiment by adding new helm charts / features / applications that require changes to the boot install pipeline.&lt;/p&gt;
&lt;p&gt;We want a simpler more modular system that lets us, say, swap out nginx-controller and use gloo/knative/istio for ingress without a deep knowledge of the jenkins-x.yml pipeline for boot.&lt;/p&gt;
&lt;p&gt;What we’d really like is for folks to type commands like…&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx delete app nginx-controller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx add app istio
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx delete app knative
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And for it to just work and generically add those to the right namespace.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;The current apps model lets you add/remove charts fine - but there are a number of limitations:&lt;/p&gt;
&lt;h3 id=&#34;only-works-in-1-namespace&#34;&gt;Only works in 1 namespace&lt;/h3&gt;
&lt;p&gt;Currently apps can only work inside the dev namespace - we can’t support things like knative, gloo, cert-manager, nginx, velero which tend to be installed in separate namespaces.&lt;/p&gt;
&lt;p&gt;### Does not handle boot phases&lt;/p&gt;
&lt;p&gt;This is not surprising as we created the App extension model before boot. But right now boot has a number of distinct phases with pipeline steps between them where we may want to add apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pre/post ingress setup (in the case of nip.io / nginx-controller)&lt;/li&gt;
&lt;li&gt;pre/post vault setup&lt;/li&gt;
&lt;li&gt;pre/post vault population of parameters&lt;/li&gt;
&lt;li&gt;pre/post setup of certmanager/external dns&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is currently no way for an apps to specify a namespace + specify which phase its to be installed in &amp;amp; have (say) the domain / certs / secrets injected easily.&lt;/p&gt;
&lt;p&gt;So rather than adding steps at the right point in a list of steps in the jenkins-x.yml it would be nice to have a more declarative YAML file to describe which apps are to be enabled.&lt;/p&gt;
&lt;p&gt;E.g. we need a new YAML file with list of charts to be installed along with metadata for which phase to install them. We also want to invoke a selection of those appss to be installed at the different phases of the boot pipeline.&lt;/p&gt;
&lt;h3 id=&#34;limitations-of-the-current-deploy-model&#34;&gt;Limitations of the current deploy model&lt;/h3&gt;
&lt;p&gt;We have some issues with the current way we deploy apps in Staging / Production:&lt;/p&gt;
&lt;h4 id=&#34;composite-charts-hide-the-individual-versions&#34;&gt;Composite charts hide the individual versions&lt;/h4&gt;
&lt;p&gt;Right now we deploy all charts in Staging/Production as a single chart. That means if you use &lt;code&gt;helm list&lt;/code&gt; we don&amp;rsquo;t show any actual versions of the dependent charts - its just 1 chart (with no version).&lt;/p&gt;
&lt;h4 id=&#34;removing-apps-on-dev-doesnt-work&#34;&gt;Removing Apps on Dev doesn&amp;rsquo;t work&lt;/h4&gt;
&lt;p&gt;If you remove a chart from &lt;code&gt;env/requirements.yaml&lt;/code&gt;  in the Dev repository the pipeline does not remove the chart. e.g. if you add &lt;code&gt;lighthouse&lt;/code&gt; and remove &lt;code&gt;prow&lt;/code&gt; you need to manually delete the prow resources yourself.&lt;/p&gt;
&lt;h3 id=&#34;limitation-of-boot&#34;&gt;Limitation of boot&lt;/h3&gt;
&lt;p&gt;We currently manually configure in the boot pipeline the install of multiple systems usually in separate namespaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;velero (if enabled)&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;externaldns&lt;/li&gt;
&lt;li&gt;cert-manager&lt;/li&gt;
&lt;li&gt;acme certs chart&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ideally those should be modular and optional. e.g it should be really trivial to disable nginx if folks are using, say, istio - without having to hack a pipeline yaml.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;d also like to make it easy to add a number of other systems in order in separate namespaces independently of the &lt;code&gt;Staging / Production&lt;/code&gt; environment namespaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;knative &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6331&#34;&gt;https://github.com/jenkins-x/jx/issues/6331&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gloo&lt;/li&gt;
&lt;li&gt;istio&lt;/li&gt;
&lt;li&gt;linkerd &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6330&#34;&gt;https://github.com/jenkins-x/jx/issues/6330&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;flagger&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so it&amp;rsquo;d be nice to have a simple app model where anyone can add any systems/charts to any namespace at any point in the flow before we setup the dev/staging/production environment in the traditional way.&lt;/p&gt;
&lt;h2 id=&#34;proposal&#34;&gt;Proposal&lt;/h2&gt;
&lt;p&gt;We propose we combine the extensibility of Jenkins X using Apps with &lt;code&gt;jx boot&lt;/code&gt; via a simple declarative YAML file declaring the charts to be installed.&lt;/p&gt;
&lt;p&gt;e.g. a file &lt;code&gt;apps.yaml&lt;/code&gt;  something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;defaultNamespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;velero&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;velero&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://kubernetes-charts.storage.googleapis.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;phase&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;system  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;velero&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx-ingress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx-ingress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://kubernetes-charts.storage.googleapis.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;phase&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;system  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;kube-system&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;external-dns&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://charts.bitnami.com/bitnami&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;phase&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;post-ingress  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cert-manager&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cert-manager&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://charts.jetstack.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cert-manager  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;phase&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;post-ingress  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jxboot-resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;prow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;prow.enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;prow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse.enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;alias&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;condition&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo.enabled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x-platform&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using a yaml file in a boot config repo we list the apps that should be installed.  This means we can instead have a bare minimum base boot config repo and list the apps we want installed and different points of the installation process.&lt;/p&gt;
&lt;p&gt;The above YAML looks quite like the &lt;code&gt;env/requirements.yaml&lt;/code&gt; file only:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it allows the &lt;code&gt;namespace&lt;/code&gt; to be specified if its different from the &lt;code&gt;defaultNamespace&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;we add the &lt;code&gt;phase&lt;/code&gt; label so that we can filter the apps by phase so we can install different charts at different points in the boot pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;### Strawman Solutions&lt;/p&gt;
&lt;p&gt;The above &lt;code&gt;apps.yaml&lt;/code&gt; proposal looks very much like helmfile.&lt;/p&gt;
&lt;p&gt;So lets look into helmfile and try using it with a stripped back boot config repo to see how things might fit together&lt;/p&gt;
&lt;p&gt;One possible solution might be to add a single step the boot pipeline to invoke helmfile: &lt;a href=&#34;https://github.com/roboll/helmfile#configuration&#34;&gt;https://github.com/roboll/helmfile#configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;e.g. given the &lt;code&gt;apps.yaml&lt;/code&gt; file in the file system then run helmfile as a step on the file.&lt;/p&gt;
&lt;p&gt;It looks like helmfile already supports tillerless + helm3 and lets us define namespaces and orders etc.&lt;/p&gt;
&lt;p&gt;We may need to build our own step to wrap helmfile so that we can do some of the things we do with &lt;code&gt;jx step helm apply&lt;/code&gt; right now (e.g. exposing the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file as a &lt;code&gt;values.yaml&lt;/code&gt; its values can be used inside any &lt;code&gt;values.yaml&lt;/code&gt; we use in the charts).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;should we support access to secrets in vault / local file system via URLs or Parameters injection?&lt;/li&gt;
&lt;li&gt;do we need to support exposing the properties from the &lt;code&gt;jx-requirements.yml&lt;/code&gt; as values.yaml files that can be reused inside the helmfile templates?&lt;/li&gt;
&lt;li&gt;do we need to improve access to certs / domain after we&amp;rsquo;ve set those up in boot?&lt;/li&gt;
&lt;li&gt;allow the use of version streams to manage versions of things if no version is specified in the &lt;code&gt;helmfile.yaml&lt;/code&gt; - like we do with helm charts requirements.yaml file right now (in &lt;code&gt;jx step helm apply&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So if we do need anything other than vanilla helmfile we could maybe do a similar thing to &lt;code&gt;jx step helm apply&lt;/code&gt; where we copy the directory where helmfile lives, then generate any secret yamls + &lt;code&gt;jx-requirements.yaml&lt;/code&gt; files and then run helmfile in a temporary directory (to avoid accidentally committing any secrets to git). Hopefully we don&amp;rsquo;t need to fork helmfile; but we could just wrap it slightly with a pre-processor?&lt;/p&gt;
&lt;p&gt;We want to allow the &lt;code&gt;jx boot&lt;/code&gt; pipeline to invoke a helmfile like thing at the different phases.&lt;/p&gt;
&lt;p&gt;e.g. currently in boot we do something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install a bunch of charts in different namespaces with a defined order&lt;/li&gt;
&lt;li&gt;then we modify the requirements based on ingress: &lt;code&gt;jx step create install values&lt;/code&gt; (to handle things like detecting the domain/ingress)&lt;/li&gt;
&lt;li&gt;install more charts (e.g. external dns/cert manager/vault)&lt;/li&gt;
&lt;li&gt;populate parameters/secrets (&lt;code&gt;jx step create values --name parameters&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;do the traditional install and maybe other charts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so we already have 3 natural places to invoke a helmfile-like thing to install charts in different phases. So maybe thats 3 places where we invoke helmfile with a selector as @vbehar mentions if thats something helmfile can do? or we use 3 separate helmfiles maybe?&lt;/p&gt;
&lt;p&gt;e.g. the pipeline with boot apps could be something like this&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step helmfile --selector phase&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pre-ingress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# populate ingress stuff (e.g. default domain from nip.io if not using custom domain)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create install values
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# add any charts that need a domain injected&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step helmfile --selector phase&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;post-ingress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# populate any missing charts in vault&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create values --name parameters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets include generated secrets after they have been populated in vault&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step helmfile --selector &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;!phase&amp;#34;&lt;/span&gt; --secrets
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we could have a list of apps which we group as to where they get added based on what they are &amp;amp; whether they need integration with secrets / TLS / domain / certs etc?&lt;/p&gt;
&lt;p&gt;We can then modify the existing &lt;code&gt;jx add app / jx delete app&lt;/code&gt; to detect the &lt;code&gt;apps.yaml&lt;/code&gt; file and create the necessary code change in a Pull Request.&lt;/p&gt;
&lt;p&gt;Maybe over time we move more towards this kind of helmfile-like approach for all environments too (&lt;code&gt;Dev&lt;/code&gt; / &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt;)?&lt;/p&gt;
&lt;h3 id=&#34;proposed-schedule&#34;&gt;Proposed Schedule&lt;/h3&gt;
&lt;p&gt;We can easily try a prototype a new boot config repo where we add helmfile and add some helmfile steps and see how it works and what we think of the general git source code &amp;amp; if it helps us and users have modular boot apps without committing to any significant changes in the jx repos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;try out helmfile for installing things like gloo / knative / linkerd / istio?&lt;/li&gt;
&lt;li&gt;if that works and we are happy with it, we could look at adding the phases approach for easier app composition&lt;/li&gt;
&lt;li&gt;if thats all looking good try migrate existing things like nginx / cert manager / external dns to the helmfile approach in a new git repository&lt;/li&gt;
&lt;li&gt;anyone can then try out the helmfile approach without changing the core upstream boot configuration &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/env&#34;&gt;jenkins-x-boot-config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we could try create a new remote cluster boot configuration for multi-cluster which installs a small subset of Jenkins X (e.g. lighthouse + tekton + a single &lt;code&gt;SourceRepository + Schedule&lt;/code&gt; for replicating the logic of the &lt;code&gt;environment controller&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;create a demo repository which replaces nginx-controller with knative + gloo we can use for Progressive Delivery demos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maybe we find when we look at migrating the current charts to boot apps (nginx / cert manager / external-dns in particular) we may find its got some limitations and building a simple similar tool might be easier. Or we may find helmfile gets us where we need to go faster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>About: Jenkins X Capabilities Matrix</title>
      <link>https://jenkins-x.io/about/capabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/about/capabilities/</guid>
      <description>
        
        
        &lt;h2 id=&#34;jenkins-x-capabilities-matrix&#34;&gt;Jenkins X Capabilities Matrix&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Capability&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;GKE&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;EKS&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;OpenShift 3.11&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Terraform scripts for cluster creation&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;code&gt;jx boot&lt;/code&gt; for installation&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Vault for secret storage&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Self Provisioned&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Bucket log storage&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Kubernetes Versions&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 1.13&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 1.14&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 1.15&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- 1.16&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Source Control Providers&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Github&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Github Enterprise&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Gitlab CE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Gitlab EE&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Bitbucket Server&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Preview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- Bitbucket Cloud&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ChatOps</title>
      <link>https://jenkins-x.io/docs/resources/faq/using/chatops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/faq/using/chatops/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-chatops&#34;&gt;What is ChatOps?&lt;/h2&gt;
&lt;p&gt;We use the phrase &lt;em&gt;ChatOps&lt;/em&gt; to mean operating code changes and GitOPs promotion via chat. More specifically this usually is done via commenting on Pull Requests on your git providers website; though in the future this could be via Slack or web consoles too.&lt;/p&gt;
&lt;h2 id=&#34;what-are-the-benefits-of-chatops&#34;&gt;What are the benefits of ChatOps?&lt;/h2&gt;
&lt;p&gt;ChatOps helps developers collaborate on Pull Requests and speeds up merging of Pull Requests. We want to be able to merge changes as quickly as possible into master so that we continuously integrate code which minimises the downsides of long term feature branching and merge hell.&lt;/p&gt;
&lt;p&gt;ChatOps (and &lt;a href=&#34;#what-does-hook-do&#34;&gt;tide in particular&lt;/a&gt;) also helps automate and speeds up tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;developers don&amp;rsquo;t have to keep hitting reload on a Pull Request page waiting for all the tests to pass so that they can click &lt;code&gt;Merge&lt;/code&gt;. Just add a &lt;code&gt;/lgtm&lt;/code&gt; comment or approve the code review and the Pull Request will automatically get merged once its tests go green. This also avoids developers accidentally hitting &lt;code&gt;Merge&lt;/code&gt; before all the test pass!&lt;/li&gt;
&lt;li&gt;all Pull Request are automatically rebased and tested against master before merging - further ensuring we don&amp;rsquo;t accidentally break master&lt;/li&gt;
&lt;li&gt;batch merging of Pull Requests is supported to speed up merging Pull Requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details see &lt;a href=&#34;#what-does-hook-do&#34;&gt;what does tide do&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;which-kinds-of-webhook-support-chatops&#34;&gt;Which kinds of webhook support ChatOps?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; support both webhooks and &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/chatops/&#34;&gt;ChatOps&lt;/a&gt; whereas Jenkins just supports webhooks only.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-re-trigger-a-pr-pipeline&#34;&gt;How do I re-trigger a PR pipeline?&lt;/h2&gt;
&lt;p&gt;If a pipeline fails due to some compile error or failing test - fix the code and push your changes and the Pull Request pipeline will rerun.&lt;/p&gt;
&lt;p&gt;If you think the pipeline failed due to some temporary infrastructure reason then you can use ChatOps to re-trigger the pipeline via commenting on the Pull Request:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/retest&lt;/code&gt; reruns only failed pipelines&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/test all&lt;/code&gt; reruns all failed pipelines.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/test foo&lt;/code&gt; reruns the pipeline called &lt;code&gt;foo&lt;/code&gt; only&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that you need to be in the &lt;code&gt;OWNERS&lt;/code&gt; file as an &lt;a href=&#34;#why-did-a-pullrequest-have-no-pipeline-triggered&#34;&gt;approver for this to work&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-multiple-parallel-pipelines-to-a-project&#34;&gt;How do I add multiple parallel pipelines to a project?&lt;/h2&gt;
&lt;p&gt;It can be useful to have multiple pipelines to perform different kinds of long running tests on Pull Requests. e.g. running the same test suite using different databases, microservice configurations or underlying infrastructure.&lt;/p&gt;
&lt;p&gt;In Jenkins X you can create a custom &lt;code&gt;Scheduler&lt;/code&gt; resource in your &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt; configuration (in &lt;code&gt;env/templates/myscheduler.yaml&lt;/code&gt;) which you can add multiple named contexts in the &lt;code&gt;presubmits&lt;/code&gt; section. Then for each context name make sure you have a file called &lt;code&gt;jenkins-x-${context}.yml&lt;/code&gt; in your project.&lt;/p&gt;
&lt;p&gt;Then Jenkins X will invoke each context on demand via &lt;code&gt;/test mycontext&lt;/code&gt; or automatically if you enable &lt;code&gt;alwaysRun: true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can see how we define lots of &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/f377a72498282de9ee49b807b4d5ba74321a4fab/env/templates/jx-versions-scheduler.yaml#L18&#34;&gt;parallel testing contexts in the version stream here&lt;/a&gt; which all run in parallel and report their status on each pull request on the &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See also &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/setup/#how-do-i-map-sourcerepository-to-a-custom-scheduler&#34;&gt;How do I map SourceRepository to a custom Scheduler?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-does-hook-do&#34;&gt;What does hook do?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hook&lt;/code&gt; is the name of the microservice in &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; and the http endpoint in &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; which listens to webhooks coming in from your git provider which then gets processed as either a ChatOps command or a trigger of a pipeline.&lt;/p&gt;
&lt;h2 id=&#34;what-does-tide-do&#34;&gt;What does tide do?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tide&lt;/code&gt; is a microservice in  &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; which periodically queries open pull requests on the repositories you have imported into Jenkins X. Then it performs the following logic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if a Pull Request has passed all of its review + CI tests (e.g. its got the &lt;code&gt;approved&lt;/code&gt; and/or &lt;code&gt;lgtm&lt;/code&gt; labels applied or has passed a github code review) and is green and is based off of master it is automatically merged.&lt;/li&gt;
&lt;li&gt;if a Pull Request has passed all of its review + CI tests but is not based off of master its pipelines are re-triggered based off of master to ensure the Pull Request will be valid if it were merged.&lt;/li&gt;
&lt;li&gt;if batching is enabled and there are multiple pending Pull Requests which are approved and green, a batch pipeline is triggered which combines multiple Pull Requests together into a single change - if all those pipelines go green then all the PRs are merged together at once and closed. This greatly speeds up getting multiple Pull Requests merged together (as it avoids re-triggering each PR&amp;rsquo;s tests after each one is merged).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-can-i-make-chatops-ha&#34;&gt;How can I make ChatOps HA?&lt;/h2&gt;
&lt;p&gt;To make ChatOps highly avialable scale up the deployments which listen for http requests to, say, 3 replicas.&lt;/p&gt;
&lt;p&gt;When using &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; that just means modifying the replicas for the &lt;code&gt;lighthouse&lt;/code&gt; deployment. e.g. in your &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;boot&lt;/a&gt; git repository try changing &lt;code&gt;env/lighthouse/values.tmpl.yaml&lt;/code&gt; to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When using &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; you need to scale up &lt;code&gt;hook&lt;/code&gt; and &lt;code&gt;pipelinerunner&lt;/code&gt;. e.g. in your &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;boot&lt;/a&gt; git repository try changing &lt;code&gt;env/prow/values.tmpl.yaml&lt;/code&gt; to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;hook&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pipelinerunner&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;should-i-use-prow-or-lighthouse&#34;&gt;Should I use prow or lighthouse?&lt;/h2&gt;
&lt;p&gt;If you are using a git server other than &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; then we recommend &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; then for your git server then for now we recommend &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; as it has had more testing than &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; is our strategic direction. We are starting to incrementally move our open source repositories over to &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;. At some point in the future once we&amp;rsquo;ve been using &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; in production for all of our open source and commercial repositories &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; will become our recommended solution for all git providers so that we can have a single, simpler &amp;amp; smaller codebase to maintain.&lt;/p&gt;
&lt;h2 id=&#34;how-to-handle-a-flakybroken-pipeline&#34;&gt;How to handle a flaky/broken pipeline&lt;/h2&gt;
&lt;p&gt;If you have a pending Pull Request which is blocked on a flaky test or an incorrectly failing lint or code review; you can use ChatOps to override its status via the ChatOps command: &lt;code&gt;/override nameOfPipeline&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;why-did-a-pullrequest-have-no-pipeline-triggered&#34;&gt;Why did a PullRequest have no pipeline triggered?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; use an &lt;code&gt;OWNERS&lt;/code&gt; file stored in each git repository to define which developers are allowed to review and approve changes. You can even limit those roles to different folders.&lt;/p&gt;
&lt;p&gt;If a non-reviewer submits a Pull Request it won&amp;rsquo;t trigger CI pipelines by default until a reviewer adds an &lt;code&gt;/ok-to-test&lt;/code&gt; comment on the Pull Request.&lt;/p&gt;
&lt;p&gt;If you have public git repositories this also avoids the security issue of a non-approver submitting a Pull Request to change the pipeline to email them your security credentials in the CI pipeline ;)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Using ChatOps and PR commands</title>
      <link>https://jenkins-x.io/docs/build-test-preview/chatops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/build-test-preview/chatops/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;ChatOps&lt;/em&gt; are operating codes and GitOps commands sent via chat.
These actions are performed via commenting on Pull Requests on your git providers website.&lt;/p&gt;
&lt;h2 id=&#34;chatops-commands&#34;&gt;ChatOps Commands&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;ChatOps Command&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;GitLab Command&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lgtm&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-lgtm&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;This PR looks good to me - this command can be from anyone with access to the repo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/approve&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-approve&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;This PR can be merged - must be someone in the repo &lt;code&gt;OWNERS&lt;/code&gt; file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/test this&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/test this&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Run the default test pipeline context for this PR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/test (context)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/test (context)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Run a specific test pipeline context by name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/retest&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-retest&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Rerun any failed test pipeline contexts for this PR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/override (context)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-override (context)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Override a failed pipeline context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/hold&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-hold&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Set this PR to not automerge even if it has been set &lt;code&gt;lgtm&lt;/code&gt; and approved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/hold cancel&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-hold cancel&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;remove the &lt;code&gt;hold&lt;/code&gt; label from the PR, allowing automerge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/assign (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-assign (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;assign the PR to the given (&lt;code&gt;user&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/unassign (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-unassign (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;remove the &lt;code&gt;user&lt;/code&gt; as assignee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/cc (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-cc (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;add the given &lt;code&gt;user&lt;/code&gt; as a reviewer for the PR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/uncc (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-uncc (user)&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;remove the &lt;code&gt;user&lt;/code&gt; as a reviewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/ok-to-test&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;/lh-ok-to-test&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;If a &lt;code&gt;user&lt;/code&gt; without write access to the repo opens a PR, the PR will not be built automatically. It receives the &lt;code&gt;needs-ok-to-test&lt;/code&gt; label, until a user with rights enters &lt;code&gt;/ok-to-test&lt;/code&gt;, at which point it gets be built&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;pull-requests&#34;&gt;Pull Requests&lt;/h2&gt;
&lt;p&gt;The pull request (PR) is the foundation of Jenkins X CI/CD pipeline execution.
In PRs, Jenkins X allows developers and reviewers to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verify changes&lt;/li&gt;
&lt;li&gt;Review PR code changes and their effects&lt;/li&gt;
&lt;li&gt;Approve or deny PRs or suggest changes&lt;/li&gt;
&lt;li&gt;Approve PRs and trigger automatic merge and promotion&lt;/li&gt;
&lt;li&gt;Manual promotion of PRs to production environments and software releases&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pull requests can be marked as work in progress, blocking automerging, either via making the PR a draft on GitHub, or by adding &lt;code&gt;WIP:&lt;/code&gt;, &lt;code&gt;wip:&lt;/code&gt;, &lt;code&gt;[wip]:&lt;/code&gt;, or similar at the beginning of the PR title.
The PR will be moved out of work-in-progress when no longer in draft or when the &lt;code&gt;WIP&lt;/code&gt; prefix in the PR title has been removed.&lt;/p&gt;
&lt;h3 id=&#34;how-lighthouse-merges-a-pr&#34;&gt;How Lighthouse merges a PR&lt;/h3&gt;
&lt;p&gt;There are some unique actions and behaviors when using lighthouse as the webhook handler for Jenkins X:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The PR must have its required test contexts pass (by default, just &lt;code&gt;pr-build&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;PRs must be set &lt;code&gt;/lgtm&lt;/code&gt; and approved, or have the &lt;code&gt;updatebot&lt;/code&gt; label on it.&lt;/li&gt;
&lt;li&gt;The PR must not have any merge conflicts.&lt;/li&gt;
&lt;li&gt;If multiple PRs are all in the merge pool at the same time, the lowest numbered PR will be merged first, then the next one will be rebuilt and then merged, etc.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Cluster</title>
      <link>https://jenkins-x.io/v3/admin/setup/upgrades/cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/admin/setup/upgrades/cluster/</guid>
      <description>
        
        
        &lt;h2 id=&#34;cluster&#34;&gt;Cluster&lt;/h2&gt;
&lt;h3 id=&#34;automatic-upgrades&#34;&gt;Automatic upgrades&lt;/h3&gt;
&lt;p&gt;To enable automatic upgrades of your cluster you need to modify your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file in your development git cluster repository:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;autoUpdate&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0 0 * * *&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;autoMerge&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you commit and push that change and your &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;boot job has completed&lt;/a&gt; you should have a &lt;code&gt;CronJob&lt;/code&gt; running at the above schedule (every night at midnight) creating a Pull Request to upgrade your cluster&amp;rsquo;s versions of charts and images.&lt;/p&gt;
&lt;p&gt;If you set &lt;code&gt;autoMerge: true&lt;/code&gt; then the upgrade Pull Requests will get auto merged if the CI/CD pipelines all succeed; otherwise you need to manually approve the Pull Requests when you are happy for the upgrade to be applied.&lt;/p&gt;
&lt;p&gt;For more help on the Cron scheduler syntax check out &lt;a href=&#34;https://crontab.guru/&#34;&gt;crontab.guru&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;manual-upgrades&#34;&gt;Manual upgrades&lt;/h3&gt;
&lt;p&gt;The following demo walks through how to manually upgrade your cluster:&lt;/p&gt;
&lt;iframe width=&#34;700&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/9ZaqdwD3cTs&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;prerequisite&#34;&gt;prerequisite&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;make sure you have upgraded your &lt;a href=&#34;https://jenkins-x.io/v3/guides/upgrades/cli&#34;&gt;jx CLI&lt;/a&gt; to make sure you are using the correct version for the next steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;You can upgrade your Jenkins X installation at any time by running the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/gitops/upgrade&#34;&gt;jx gitops upgrade&lt;/a&gt; command inside a git checkout of your cluster GitOps repository:&lt;/p&gt;
&lt;p&gt;First make sure you have the latest git contents as the &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;boot job will push changes&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure you have no pending git commits&amp;hellip;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now if your git clone is clean run the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx gitops upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;upgrade your local &lt;a href=&#34;https://jenkins-x.io/about/concepts/version-stream/&#34;&gt;version stream&lt;/a&gt; to the latest which has passed the latest tests&lt;/li&gt;
&lt;li&gt;make any changes in the version stream to the &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#boot-job&#34;&gt;boot job and its configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After running this command you will usually have some changes in git you can review. If you are happy with the changes commit them and create a Pull Request so that they can get applied on your cluster.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: upgrade versions&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The jx-git-operator will trigger a boot job in the &lt;code&gt;jx-git-operator&lt;/code&gt; namespace, to track the progress of the upgrade you can run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx admin logs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;merge-conflicts&#34;&gt;Merge conflicts&lt;/h3&gt;
&lt;p&gt;It is possible that you will have merge conflicts.  You can follow the inline git helper messages to resolve conflicts - or use your IDE to help figure out the merge issues. Usually if there are conflicts its safest to use the upstream version; particularly from the &lt;code&gt;versionStream&lt;/code&gt; dir.&lt;/p&gt;
&lt;p&gt;Under the hood Kpt is used to fetch changes from the upstream defined in each Kptfile.&lt;br&gt;
By default the &lt;code&gt;versionStream&lt;/code&gt; directory has a Kpt strategy of &lt;code&gt;force-delete-replace&lt;/code&gt; which removes all your changes in that folder. In order to merge your changes with the ones coming from upstream, add a file: &lt;code&gt;.jx/gitops/kpt-strategy.yaml&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;config&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;relativePath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;versionStream&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;strategy&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;resource-merge&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once ready, make a pull request onto your cluster repository, review changes and merge.  The &lt;a href=&#34;https://github.com/jenkins-x/jx-git-operator&#34;&gt;Jenkins X git operator&lt;/a&gt; will automatically apply the upgrades into your cluster.&lt;/p&gt;
&lt;h3 id=&#34;replacing-your-local-versionstream&#34;&gt;Replacing your local versionStream&lt;/h3&gt;
&lt;p&gt;If you are having merge conflicts trying to upgrade your installation you could just replace the &lt;code&gt;versionStream&lt;/code&gt;  directory with the latest version stream folder. &lt;strong&gt;NOTE&lt;/strong&gt; this will overwrite any local changes you have made inside the &lt;code&gt;verisonStream&lt;/code&gt; folder. Though everything is versioned in git so you can always review the changes.&lt;/p&gt;
&lt;p&gt;Inside your cluster git repository run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kpt pkg update --strategy force-delete-replace versionStream
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That will update your &lt;code&gt;versionStream&lt;/code&gt; directory to be in line with the latest version stream. You can always then review the changes before committing them.&lt;/p&gt;
&lt;h3 id=&#34;configure-merge-strategy&#34;&gt;Configure merge strategy&lt;/h3&gt;
&lt;p&gt;You can configure the &lt;code&gt;kpt&lt;/code&gt; strategy used to apply changes from the version stream into your &lt;code&gt;versionStream&lt;/code&gt; folder via a custom configuration file.&lt;/p&gt;
&lt;p&gt;Create a file called &lt;code&gt;.jx/gitops/kpt-strategy.yaml&lt;/code&gt; in your dev cluster git repository that looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;config&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;relativePath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;versionStream&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;strategy&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;alpha-git-patch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;this will configure that the &lt;code&gt;alpha-git-patch&lt;/code&gt; strategy will be used whenever you try &lt;code&gt;jx gitops upgrade&lt;/code&gt; which should preserve any local changes; though you may have to resolve some git conflicts in your IDE (as described above).&lt;/p&gt;
&lt;p&gt;To avoid any possible git merge issues its a good idea to try keep local source changes out of the &lt;code&gt;versionStream&lt;/code&gt; folder if you can.&lt;/p&gt;
&lt;h3 id=&#34;locking-versions&#34;&gt;Locking versions&lt;/h3&gt;
&lt;p&gt;To prevent manual changes from being overwritten during an upgrade,
add the &lt;code&gt;version.jenkins-x.io: lock&lt;/code&gt; label to a chart in your &lt;em&gt;helmfile.yaml&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ingress-nginx/ingress-nginx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3.12.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx-ingress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;../../versionStream/charts/ingress-nginx/ingress-nginx/values.yaml.gotmpl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;labels&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;version.jenkins-x.io&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Dashboard</title>
      <link>https://jenkins-x.io/v3/develop/ui/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/ui/dashboard/</guid>
      <description>
        
        
        &lt;p&gt;It&amp;rsquo;s a common requirement to want to view pipelines running, their logs or to be able to click on a Pull Request on your git provider and view the pipeline log for that commit on that Pull Request.&lt;/p&gt;
&lt;p&gt;To implement this we include the &lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer&#34;&gt;jx-pipelines-visualizer&lt;/a&gt; application inside Jenkins X.&lt;/p&gt;
&lt;p&gt;This provides a simple read only web UI for viewing pipelines and pipeline logs and its linked automatically with any Pull Request you create on repositories managed by Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;accessing-the-pipelines-visualizer&#34;&gt;Accessing the Pipelines Visualizer&lt;/h3&gt;
&lt;p&gt;If you &lt;a href=&#34;https://jenkins-x.io/v3/guides/upgrade/#cli&#34;&gt;have a recent jx binary&lt;/a&gt; run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx dash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and it will open the dashboard using the basic authentication login and password.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/v1-home.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;viewing-from-a-pull-request&#34;&gt;Viewing from a Pull Request&lt;/h3&gt;
&lt;p&gt;If you create a Pull Request on a git repository you have &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;created or imported&lt;/a&gt; in Jenkins X you should see a link on the Pull Request.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example - see the &lt;strong&gt;Details&lt;/strong&gt; link on the right of the Pull Request pipeline:&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/quickstart/pr-link.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;If you click the &lt;strong&gt;Details&lt;/strong&gt; link that should open the &lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer&#34;&gt;jx-pipelines-visualizer&lt;/a&gt; UI for this pipeline build.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/v1-pipeline-success.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;logging-in-to-the-pipelines-visualizer&#34;&gt;Logging in to the Pipelines Visualizer&lt;/h3&gt;
&lt;p&gt;Unless you &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;customize the chart&lt;/a&gt; to change the &lt;code&gt;Ingress&lt;/code&gt; the default will use &lt;em&gt;basic authentication&lt;/em&gt; to access the web UI to avoid your pipeline logs being visible on the internet.&lt;/p&gt;
&lt;p&gt;The default username is &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To find the generated random password to access the UI type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx ns jx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get secret jx-basic-auth-user-password -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.data.password}&amp;#34;&lt;/span&gt; | base64 --decode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That should display the randomly generated password.&lt;/p&gt;
&lt;p&gt;If you type the username and password into your browser it should open the dashboard.&lt;/p&gt;
&lt;h3 id=&#34;pipelines-traces&#34;&gt;Pipelines Traces&lt;/h3&gt;
&lt;p&gt;If you &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/observability/&#34;&gt;enable the observability stack&lt;/a&gt;, then you will get a new link &lt;strong&gt;Trace&lt;/strong&gt; in your pipeline view - once the pipeline is finished - that will open the pipeline trace in Grafana so that you can see the timings of each stage and steps in your pipeline:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/pipeline-trace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;lighthouse-ui&#34;&gt;Lighthouse UI&lt;/h3&gt;
&lt;p&gt;There is an additional &lt;a href=&#34;https://github.com/jenkins-x-plugins/lighthouse-webui-plugin&#34;&gt;optional UI for viewing lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install it add the following to the &lt;code&gt;releases:&lt;/code&gt;  section of your &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx3/lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse-webui-plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;values&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;../../versionStream/charts/jx3/lighthouse-webui-plugin/values.yaml.gotmpl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-values.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Decisions</title>
      <link>https://jenkins-x.io/docs/reference/components/decisions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/reference/components/decisions/</guid>
      <description>
        
        
        &lt;h1 id=&#34;decisions&#34;&gt;Decisions&lt;/h1&gt;
&lt;p&gt;Jenkins X is an opinionated developer experience, here we will explain the background and decisions we have taken to help explain the reasons for these opinions.  You may also want to take a look at the &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/decisions/&#34;&gt;Accelerate&lt;/a&gt; page for details on how Jenkins X implements the capabilities recommended by&lt;/p&gt;
&lt;h2 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;First is why Jenkins X is purely focused on Kubernetes and is only intended to run on it.&lt;/p&gt;
&lt;p&gt;Kubernetes has won the cloud wars, every major cloud provider now either supports Kubernetes or is actively working on a Kubernetes solution.  Google, Microsoft, Amazon, Red Hat, Oracle, IBM, Alibaba, Digital Ocean, Docker, Mesos and Cloud Foundry to name a few.  We now have one deployment platform to target and develop first class portable applications for.&lt;/p&gt;
&lt;p&gt;The Kubernetes ecosystem is rich with innovation and with a vibrant, forward thinking, diverse open source community which is inviting only suggests great things for all involved.&lt;/p&gt;
&lt;p&gt;Jenkins X strongly recommends using public cloud managed Kubernetes clusters where possible. GKE, AKS and EKS all offer managed Kubernetes services, which dramatically reduces risk of installing, upgrading and maintaining your Kubernetes cluster so you can focus on developing awesome code.&lt;/p&gt;
&lt;p&gt;i.e. let folks that know how to run containers and manage clusters at scale so you can focus on adding value to your business.&lt;/p&gt;
&lt;h2 id=&#34;draft&#34;&gt;Draft&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://draft.sh&#34;&gt;Draft&lt;/a&gt; has a few capabilities but Jenkins X only uses the language detection and pack creation feature.  Jenkins X maintains it&amp;rsquo;s own &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;draft packs&lt;/a&gt; tailored to run with Jenkins X.&lt;/p&gt;
&lt;p&gt;Draft provides a great way to bootstrap a source code project with the necessary packaging needed to run the application on Kubernetes.&lt;/p&gt;
&lt;p&gt;The Draft project came from Deis who were acquired by Microsoft and continue to invest and evolve their Kubernetes developer story.&lt;/p&gt;
&lt;h2 id=&#34;helm&#34;&gt;Helm&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://helm.sh&#34;&gt;Helm&lt;/a&gt; provides the templated packaging for running applications on Kubernetes.  We&amp;rsquo;ve received mixed feedback from our use of Helm.  From our experience being able to template and compose multiple Helm Charts together has been a very welcome find. This lead to our use of using Helm to compose, install and upgrade entire environments and being able to easily override values such as number of replicas or application resource limits per environment for example.&lt;/p&gt;
&lt;p&gt;OpenShift Templates aimed to do a similar thing however they are OpenShift specific.&lt;/p&gt;
&lt;p&gt;Lots of the concerns with Helm are being addressed with the major version upgrade of Helm 3.  Removing the use of Tiller the server side component of Helm is a big win as it&amp;rsquo;s seen as being insecure given the elevated permissions it needs to run.  Jenkins X &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/helm3/&#34;&gt;provides a way&lt;/a&gt; to use the beta version of Helm 3 for folks that would like to try this instead, we&amp;rsquo;re using this ourselves and it&amp;rsquo;s working great so far.  If there are issues we&amp;rsquo;d like to feedback to the Helm project so we can help get them to GA sooner.&lt;/p&gt;
&lt;p&gt;The Helm project came from Deis who were acquired by Microsoft and continue to invest and evolve their Kubernetes developer story.&lt;/p&gt;
&lt;h2 id=&#34;skaffold&#34;&gt;Skaffold&lt;/h2&gt;
&lt;p&gt;Jenkins X uses &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;Skaffold&lt;/a&gt; to perform the build and push image actions in a pipeline.  Skaffold allows us to implement different image builder and registries services like &lt;a href=&#34;https://cloud.google.com/container-builder/&#34;&gt;Google Container Builder&lt;/a&gt;, &lt;a href=&#34;https://github.com/Azure/acr-builder&#34;&gt;Azure Container Builder&lt;/a&gt; and &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For folks that aren&amp;rsquo;t running on a public cloud with container builder or registry services then Skaffold can also work with &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;kaniko&lt;/a&gt;, this allows pipelines to build docker images using rootless containers.  This is significantly more secure than mounting the docker socket from each node in the cluster.&lt;/p&gt;
&lt;h2 id=&#34;prow&#34;&gt;Prow&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow&#34;&gt;Prow&lt;/a&gt; handles Git events and can trigger workflows in Kubernetes.&lt;/p&gt;
&lt;p&gt;Prow can run in a highly available mode where multiple pods for a webhook ingress URL.  In contrast with Jenkins if you perform an upgrade then Jenkins has some downtime where webhook events can be missed.  This is in our future plans and we hope to be available soon.&lt;/p&gt;
&lt;h2 id=&#34;nexus&#34;&gt;Nexus&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://help.sonatype.com/repomanager3&#34;&gt;Nexus&lt;/a&gt; is an overweight JVM that recently moved to OSGi however it does the job we need of it.  Cache dependencies for faster builds and provide a shared repository where teams can share their released artifacts.&lt;/p&gt;
&lt;p&gt;If someone developed an open source artifact repository server in a more cloud friendly language like Go then Jenkins X would likely switch to save on cloud bills.&lt;/p&gt;
&lt;p&gt;Right now Jenkins X doesn&amp;rsquo;t use the docker registry from Nexus.  The main reason was we needed to do some work to setup pod definitions with image pull secrets so we can use the authenticated registry.  Our preferred approach however is to switch to using native cloud provider registries like Amazon&amp;rsquo;s &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;Google Container Registry&lt;/a&gt; or Dockerhub for example with the help of Skaffold.&lt;/p&gt;
&lt;h2 id=&#34;docker-registry&#34;&gt;Docker registry&lt;/h2&gt;
&lt;p&gt;As above, we don&amp;rsquo;t intend to use &lt;a href=&#34;https://github.com/kubernetes/charts/tree/master/stable/docker-registry&#34;&gt;this registry&lt;/a&gt; long term as we prefer using cloud provider registries like Amazon&amp;rsquo;s &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;Google Container Registry&lt;/a&gt; or Dockerhub for example with the help of Skaffold.&lt;/p&gt;
&lt;h2 id=&#34;chartmuseum&#34;&gt;ChartMuseum&lt;/h2&gt;
&lt;p&gt;At time of creating Jenkins X there were few options of how to publish Helm Charts, the Kubernetes community uses GitHub pages but we wanted to find a solution that works for folks that use any git provider.  &lt;a href=&#34;https://github.com/kubernetes-helm/chartmuseum&#34;&gt;ChartMuseum&lt;/a&gt; is written in Go so performs well in the cloud, it supports multiple cloud storage and works great with Monocular.&lt;/p&gt;
&lt;h2 id=&#34;monocular&#34;&gt;Monocular&lt;/h2&gt;
&lt;p&gt;We use &lt;a href=&#34;https://github.com/kubernetes-helm/monocular&#34;&gt;Monocular&lt;/a&gt; to discover our Teams published applications, we could use KubeApps by default instead if it is preferred by the community but we&amp;rsquo;ll enable KubeApps as an addon regardless.&lt;/p&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;p&gt;Jenkins X only works with Git.  There are a lot of dependencies and client implementations Jenkins X already needs to support for different Git providers, we don&amp;rsquo;t hear enough demand to support other version control systems so for now Jenkins X is tied to Git.&lt;/p&gt;
&lt;h2 id=&#34;programming-languages&#34;&gt;Programming languages&lt;/h2&gt;
&lt;p&gt;Jenkins X aims to help provide the right level of feedback for developers to understand how their applications are performing and give them easy ways to experiment with other languages which may suit both the feature and running on the Cloud better.  For example there are a lot of Java based organizations that only know how to write, run and maintain Java applications.  Java is extremely resource intensive compared with Golang, Rust, Swift, NodeJS to name a few, this results in much much higher cloud bills each month.  With Jenkins X we aim to help developers experiment with other options using quickstarts and metrics addons like Grafana and Prometheus to see how they behave in the cloud.&lt;/p&gt;
&lt;p&gt;For example any new microservice that we build on the Jenkins X project tends to be in either Golang or NodeJS given the huge effect is has on our cloud billing.  It does take time to shift to a new programming language but with Jenkins X we hope we can mitigate a lot of risk using quickstarts, automated CI/CD and a relatively consistent way of working on all languages.&lt;/p&gt;
&lt;h3 id=&#34;maven&#34;&gt;Maven&lt;/h3&gt;
&lt;p&gt;Maven has some tooling that a lot of folks are used to using which doesn&amp;rsquo;t suit CD particularly well.  For example the &lt;a href=&#34;http://maven.apache.org/maven-release/maven-release-plugin/&#34;&gt;maven release plugin&lt;/a&gt; will version a project and commit directly back to master the new next SNAPSHOT version which in CD world would trigger another release resulting in a recursive loop.&lt;/p&gt;
&lt;p&gt;For Java projects Jenkins X uses the &lt;a href=&#34;https://www.mojohaus.org/versions-maven-plugin/set-mojo.html&#34;&gt;maven version:set plugin&lt;/a&gt; to update all poms in a project using the next release version following the #Versioning step mentioned above.&lt;/p&gt;
&lt;p&gt;If a new major or minor version increment is needed users can create a new Git tag with the new major / minor number and Jenkins X will respect that.  Alternatively you can update the parent &lt;code&gt;pom.xml&lt;/code&gt; and any child pom files yourself and Jenkins X will detect and use the new major or minor version.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
